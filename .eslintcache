[{"/home/src/index.js":"1","/home/src/App.js":"2","/home/src/reportWebVitals.js":"3","/home/src/components/Alert.js":"4","/home/src/pages/authentication/register.js":"5","/home/src/pages/authentication/logout.js":"6","/home/src/pages/editor/editor.js":"7","/home/src/pages/dashboard/dashboard.js":"8","/home/src/pages/authentication/survey.js":"9","/home/src/pages/authentication/login.js":"10","/home/src/pages/authentication/hooks/authenticate.js":"11","/home/src/pages/account/account.js":"12","/home/src/pages/forum/post.js":"13","/home/src/pages/forum/forum.js":"14","/home/src/alertMessages.js":"15","/home/src/components/Sidebar.js":"16","/home/src/appInfo.js":"17","/home/src/pages/editor/components/EditorSidebar.js":"18","/home/src/pages/editor/components/publish.js":"19","/home/src/pages/editor/components/editor/DocumentEditor.js":"20","/home/src/pages/dashboard/components/DocumentCard.js":"21","/home/src/pages/editor/components/sidebar/Sidebar.js":"22","/home/src/pages/dashboard/hooks/dashboardAPIs.js":"23","/home/src/pages/dashboard/components/modals/NewDocumentModal.js":"24","/home/src/pages/forum/hooks/postAPI.js":"25","/home/src/pages/forum/components/ForumCard.js":"26","/home/src/pages/editor/components/editor/Highlights.js":"27","/home/src/pages/editor/components/sidebar/SidebarHeader.js":"28","/home/src/pages/editor/components/sidebar/SidebarBody.js":"29","/home/src/pages/editor/hooks/editor/documentAPI.js":"30","/home/src/pages/editor/hooks/downloadAnnotations.js":"31","/home/src/pages/editor/hooks/editor/getRemovedHighlights.js":"32","/home/src/pages/editor/components/sidebar/SidebarAccordion.js":"33","/home/src/pages/editor/components/sidebar/SidebarLoader.js":"34","/home/src/pages/editor/components/sidebar/ManualOntologySelector.js":"35","/home/src/pages/editor/hooks/sidebar/sortKeys.js":"36","/home/src/pages/editor/hooks/sidebar/getRecommenderAnnotations.js":"37","/home/src/pages/editor/hooks/sidebar/getDefinition.js":"38","/home/src/pages/editor/hooks/sidebar/getTermString.js":"39","/home/src/pages/editor/components/AskQuestion.js":"40","/home/src/pages/editor/components/LookUp.js":"41","/home/src/pages/dashboard/components/modals/DeleteDocumentModal.js":"42"},{"size":584,"mtime":1639603691000,"results":"43","hashOfConfig":"44"},{"size":1779,"mtime":1639603691000,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1639603692000,"results":"46","hashOfConfig":"44"},{"size":510,"mtime":1639603691000,"results":"47","hashOfConfig":"44"},{"size":1393,"mtime":1639603691000,"results":"48","hashOfConfig":"44"},{"size":343,"mtime":1639603691000,"results":"49","hashOfConfig":"44"},{"size":1916,"mtime":1639603691000,"results":"50","hashOfConfig":"44"},{"size":1577,"mtime":1639846211000,"results":"51","hashOfConfig":"44"},{"size":2835,"mtime":1639603691000,"results":"52","hashOfConfig":"44"},{"size":1190,"mtime":1639603691000,"results":"53","hashOfConfig":"44"},{"size":1195,"mtime":1639603691000,"results":"54","hashOfConfig":"44"},{"size":437,"mtime":1639603691000,"results":"55","hashOfConfig":"44"},{"size":4126,"mtime":1639603692000,"results":"56","hashOfConfig":"44"},{"size":1514,"mtime":1639853178000,"results":"57","hashOfConfig":"44"},{"size":319,"mtime":1639603691000,"results":"58","hashOfConfig":"44"},{"size":900,"mtime":1639603691000,"results":"59","hashOfConfig":"44"},{"size":1020,"mtime":1640028920998,"results":"60","hashOfConfig":"44"},{"size":766,"mtime":1639603691000,"results":"61","hashOfConfig":"44"},{"size":1150,"mtime":1639603691000,"results":"62","hashOfConfig":"44"},{"size":1375,"mtime":1640029850585,"results":"63","hashOfConfig":"44"},{"size":986,"mtime":1639845156000,"results":"64","hashOfConfig":"44"},{"size":1284,"mtime":1639603691000,"results":"65","hashOfConfig":"44"},{"size":817,"mtime":1639845004000,"results":"66","hashOfConfig":"44"},{"size":2833,"mtime":1639603691000,"results":"67","hashOfConfig":"44"},{"size":1226,"mtime":1639847087000,"results":"68","hashOfConfig":"44"},{"size":953,"mtime":1639852553000,"results":"69","hashOfConfig":"44"},{"size":2556,"mtime":1639603691000,"results":"70","hashOfConfig":"44"},{"size":2445,"mtime":1639603691000,"results":"71","hashOfConfig":"44"},{"size":704,"mtime":1639603691000,"results":"72","hashOfConfig":"44"},{"size":1037,"mtime":1640029935767,"results":"73","hashOfConfig":"44"},{"size":3470,"mtime":1639603692000,"results":"74","hashOfConfig":"44"},{"size":202,"mtime":1639603692000,"results":"75","hashOfConfig":"44"},{"size":8169,"mtime":1639603691000,"results":"76","hashOfConfig":"44"},{"size":198,"mtime":1639603691000,"results":"77","hashOfConfig":"44"},{"size":2710,"mtime":1639603691000,"results":"78","hashOfConfig":"44"},{"size":550,"mtime":1639603692000,"results":"79","hashOfConfig":"44"},{"size":2679,"mtime":1639603692000,"results":"80","hashOfConfig":"44"},{"size":451,"mtime":1639609576000,"results":"81","hashOfConfig":"44"},{"size":280,"mtime":1639603692000,"results":"82","hashOfConfig":"44"},{"size":3144,"mtime":1640025731681,"results":"83","hashOfConfig":"44"},{"size":4185,"mtime":1639603691000,"results":"84","hashOfConfig":"44"},{"size":1113,"mtime":1639854354000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1u94czl",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"88"},"/home/src/index.js",[],["191","192"],"/home/src/App.js",["193","194"],"import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport {BrowserRouter, Switch, Route, useParams} from 'react-router-dom';\n\nimport $ from 'jquery';\n\nimport {checkLoggedIn} from './pages/authentication/hooks/authenticate';\n\nimport Editor from './pages/editor/editor';\nimport Dashboard from './pages/dashboard/dashboard';\nimport Forum from './pages/forum/forum';\nimport Post from './pages/forum/post';\nimport Login from './pages/authentication/login';\nimport Logout from './pages/authentication/logout';\nimport Register from './pages/authentication/register';\nimport Survey from './pages/authentication/survey';\nimport Account from './pages/account/account';\n\nimport AlertMessage from './components/Alert';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [alert, setAlert] = useState({});\n  const appProps = {\n    loggedIn: loggedIn,\n    setLoggedIn: setLoggedIn,\n    alert: alert,\n    setAlert: setAlert,\n  };\n\n  // Check if session still active\n  if (!loggedIn) checkLoggedIn(setLoggedIn);\n\n  return (\n    <>\n    {!$.isEmptyObject(alert) ? <AlertMessage {...appProps} /> : null}\n    <BrowserRouter><Switch>\n      <Route path=\"/login\" render={() => <Login {...appProps} />} />\n      <Route path=\"/logout\" render={() => <Logout {...appProps} />} />\n      <Route path=\"/register\" render={() => <Register {...appProps} />} />\n      <Route path=\"/survey\" component={Survey} />\n      <Route path=\"/myaccount\" component={Account} />\n      <Route path=\"/posts\" component={Forum} />\n      <Route path=\"/post/:postId\" component={Post} />\n      <Route path=\"/document/:documentId\" component={Editor} />\n      <Route path=\"/\" render={() => <Dashboard {...appProps} />} />\n    </Switch></BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","/home/src/reportWebVitals.js",[],"/home/src/components/Alert.js",["195"],"import React, {useState} from 'react';\nimport {Alert} from 'react-bootstrap';\n\nconst AlertMessage = ({alert, setAlert}) => {\n  const [show, setShow] = useState(true);\n  const close = () => {\n    setShow(false);\n    setAlert({});\n  }\n  const {header, message, type} = alert;\n\n  return (\n    <Alert className=\"container my-2\" variant={type ? type : 'warning'} onClose={close} dismissible>\n        <Alert.Heading>{header}</Alert.Heading>\n        <p>{message}</p>\n    </Alert>\n  )\n};\n\nexport default AlertMessage;\n","/home/src/pages/authentication/register.js",[],"/home/src/pages/authentication/logout.js",["196","197"],"import React, {useEffect} from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport {Redirect} from 'react-router-dom';\nimport {logout} from './hooks/authenticate';\n\nexport default function Logout({loggedIn, setLoggedIn}) {\n  useEffect(() => logout(setLoggedIn), []);\n  return <>{loggedIn ? null : <Redirect to=\"/login\" />}</>\n};\n","/home/src/pages/editor/editor.js",["198","199"],"import './editor.css';\n\nimport React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport { useParams } from 'react-router-dom';\n\nimport EditorSidebar from './components/EditorSidebar';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Publish from './components/publish';\nimport DocumentEditor from './components/editor/DocumentEditor';\n\nconst Editor = () => {\n  const { documentId } = useParams();\n  // const documentId = '2';\n  console.log(documentId);\n\n  const [content, updateContent] = useState('');\n  const [editor, updateEditor] = useState(null);\n  const [annotations, updateAnnotations] = useState({});\n  const [definitions, updateDefinitions] = useState({});\n  const [highlights, updateHighlights] = useState({});\n  const [currentHighlight, setCurrentHighlight] = useState('');\n  const [removedHighlights, updateRemovedHighlights] = useState([]);\n  const [annotationSelection, updateAnnotationSelection] = useState({});\n\n  const editorProps = {\n    documentId: documentId,\n    content: content, updateContent: updateContent,\n    editor: editor, updateEditor: updateEditor,\n    annotations: annotations, updateAnnotations: updateAnnotations,\n    definitions: definitions, updateDefinitions: updateDefinitions,\n    highlights: highlights, updateHighlights: updateHighlights,\n    currentHighlight: currentHighlight, setCurrentHighlight: setCurrentHighlight,\n    removedHighlights: removedHighlights, updateRemovedHighlights: updateRemovedHighlights,\n    annotationSelection: annotationSelection, updateAnnotationSelection: updateAnnotationSelection\n  };\n\n  return (\n    <div className=\"d-flex flex-row\">\n      <EditorSidebar />\n      <div id=\"editor\">\n        <Sidebar {...editorProps} />\n        <div style={{ width: '100%'}}>\n          <Publish {...editorProps} />\n          <DocumentEditor {...editorProps} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Editor;\n","/home/src/pages/dashboard/dashboard.js",[],"/home/src/pages/authentication/survey.js",[],"/home/src/pages/authentication/login.js",["200"],"import React, {useState} from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport {Redirect, Link} from 'react-router-dom';\nimport {login} from './hooks/authenticate';\n\nexport default function Login({loggedIn, setLoggedIn, setAlert}) {\n  return (\n    <>\n      {\n        loggedIn ?\n        <Redirect to=\"/\" /> :\n        <div className=\"text-center\">\n          <div class=\"card container w-25 text-center py-3 mt-5\">\n            <div class=\"card-body\">\n            {/* Google authentication */}\n            <GoogleLogin\n              clientId=\"747358695027-vehsgoqad55lbl5jmdfbef9qm6ff4v7i.apps.googleusercontent.com\"\n              buttonText={\"Sign in\"}\n              onSuccess={(data) => {\n                console.log(data);\n                const email = data.profileObj.email;\n                const googleId = data.profileObj.googleId;\n                login(email, googleId, setLoggedIn, setAlert);\n              }}\n              onFailure={null}\n              isSignedIn={loggedIn}\n              />\n            </div>\n          </div>\n          <p className=\"text-muted mt-2\">Not registered? <Link to=\"/register\">click here!</Link></p>\n        </div>\n      }\n    </>\n  );\n}\n","/home/src/pages/authentication/hooks/authenticate.js",[],"/home/src/pages/account/account.js",[],"/home/src/pages/forum/post.js",["201"],"import React, { useEffect, useState } from 'react';\nimport {Card, Button, Modal, Form, Col, Row, } from 'react-bootstrap';\nimport Sidebar from '../../components/Sidebar';\nimport { useParams } from 'react-router-dom';\n\nimport {readPost, replyPost} from './hooks/postAPI';\n\nexport default function Post() {\n  const { postId } = useParams();\n  const [openAnswerModal, updateOpenAnswerModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const [terminology, setTerminology] = useState('');\n  const [ontology, setOntology] = useState('');\n  const [context, setContext] = useState('');\n  const [name, setName] = useState('');\n  const [replies, setReplies] = useState([]);\n\n  const updateReplies = () => {\n    readPost(postId,\n      ({post_title, terminology, curr_ontology, post_content, first_name, last_name}, replies) => {\n        setTitle(post_title);\n        setTerminology(terminology);\n        setOntology(curr_ontology);\n        setContext(post_content);\n        setName(`${first_name} ${last_name}`);\n        setReplies(replies);\n      });\n  }\n  // fetch post info\n  useEffect(() => updateReplies(), []);\n\n  return (\n    <div className=\"app\">\n    <Sidebar />\n    <div id=\"post-panel\" className=\"mx-auto\">\n      <header>\n      <Card style={{ width: 'auto' }}>\n      <Card.Header as=\"h5\">\n        <div className=\"d-flex justify-content-between\">\n          <span>{terminology}</span>\n          <span>{ontology}</span>\n        </div>\n      </Card.Header>\n      <Card.Body style={{ padding: '.5rem' }}>\n      <div className=\"p-4\">\n        <Card.Title style={{ fontSize: '2rem' }}>{title}</Card.Title>\n        <Card.Subtitle className=\"mb-5 text-muted\">{name}</Card.Subtitle>\n        <Card.Text>\n          {context}\n        </Card.Text>\n        <div className=\"text-right mt-4\"><Button variant=\"outline-primary\" size=\"lg\" onClick={() => updateOpenAnswerModal(true)}>\n        Answer\n      </Button></div></div>\n      </Card.Body>\n    </Card>\n\n      </header>\n      <main>\n      {openAnswerModal ? <AnswerModal updateOpenAnswerModal={updateOpenAnswerModal} postId={postId} updateReplies={updateReplies} /> : null}\n\n      {replies.map(({ontology, reply_content, first_name, last_name}) =>\n\n        <Card style={{ width: 'auto' }} className=\"mt-5\">\n          <Card.Body>\n            <Card.Title>{ontology}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">{`${first_name} ${last_name}`}</Card.Subtitle>\n            <Card.Text>\n              {reply_content}\n            </Card.Text>\n            <div className=\"text-right\">\n              <Button variant=\"outline-success\" size=\"sm\" className=\"mr-3\" disabled>UpVote</Button>\n              <strong>{' 0 '}</strong>\n              <Button variant=\"outline-danger\" size=\"sm\" className=\"ml-3\" disabled>DownVote</Button>\n            </div>\n          </Card.Body>\n        </Card>\n\n      )}\n      </main>\n    </div>\n    </div>\n  );\n}\n\nfunction AnswerModal({postId, updateReplies, updateOpenAnswerModal}) {\n  const closeModal = () => updateOpenAnswerModal(false);\n  const [ontology, setOntology] = useState('NCIT');\n  const [content, setContent] = useState('');\n\n  return (\n    <Modal.Dialog size=\"lg\">\n  <Modal.Body>\n  <Form className=\"p-5\">\n  <Row className=\"mb-1\">\n  <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n    <Form.Label>Select Ontology</Form.Label>\n    <Form.Control as=\"select\" size=\"md\" value={ontology} onChange={evt => setOntology(evt.target.value)} custom>\n      <option value=\"NCIT\">NCIT</option>\n      <option value=\"OBT\">OBT</option>\n    </Form.Control>\n  </Form.Group>\n  </Row>\n  <Form.Row>\n<Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n  <Form.Label>Reason</Form.Label>\n  <Form.Control as=\"textarea\" rows={3} value={content} onChange={evt => setContent(evt.target.value)} />\n</Form.Group>\n</Form.Row>\n  </Form>\n  </Modal.Body>\n\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={closeModal}>Cancel</Button>\n    <Button variant=\"primary\" onClick={() => replyPost(postId, ontology, content,\n      () => { updateReplies(); closeModal(); })}>Post</Button>\n  </Modal.Footer>\n</Modal.Dialog>\n  )\n}\n","/home/src/pages/forum/forum.js",[],"/home/src/alertMessages.js",["202"],"export default {\n  unregisteredLogin: {\n    header: 'Unregistered User',\n    message: 'Please register before attempting to login.',\n    type: 'warning'\n  },\n  alreadyRegistered: {\n    header: 'Already Registered',\n    message: 'You have already registered for an account using this email.',\n    type: 'warning'\n  }\n};\n","/home/src/components/Sidebar.js",[],"/home/src/appInfo.js",[],"/home/src/pages/editor/components/EditorSidebar.js",["203","204","205"],"import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Semantically_Logo from '../img/semantically-logo.png';\nimport Home from '../img/home-1.svg';\nimport Forum from '../img/forum.svg';\nimport Account from '../img/account.svg';\n\nconst EditorSidebar = () => {\n  const navItems = [\n    {link: \"/\", img: Home},\n    {link: \"/posts\", img: Forum},\n    {link: \"/myaccount\", img: Account},\n  ];\n\n  return (\n    <div id=\"editor-sidebar\">\n      <Link to=\"/\">\n        <img src={Semantically_Logo} className=\"editor-sidebar-icon mb-5 mt-0\"/>\n      </Link>\n      {navItems.map(nav =>\n        <Link to={nav.link}>\n          <img src={nav.img} className=\"editor-sidebar-icon\"/>\n        </Link>\n      )}\n    </div>\n  )\n}\n\nexport default EditorSidebar;\n","/home/src/pages/editor/components/publish.js",[],"/home/src/pages/editor/components/editor/DocumentEditor.js",["206","207","208"],"/home/src/pages/dashboard/components/DocumentCard.js",[],"/home/src/pages/editor/components/sidebar/Sidebar.js",["209"],"import React, { useState } from 'react';\nimport $ from 'jquery';\n\nimport SidebarHeader from './SidebarHeader';\nimport SidebarBody from './SidebarBody';\nimport Logo from '../../../../logo.png';\n\nconst Sidebar = editorProps => {\n  const [showLoader, updateShowLoader] = useState(false);\n  const [showAccordion, updateShowAccordion] = useState(false);\n  const [loadHighlights, updateLoadHighlights] = useState(false);\n\n  const resetAnnotations = () => {\n    editorProps.updateAnnotations({});\n    editorProps.updateHighlights({});\n    editorProps.setCurrentHighlight('');\n    editorProps.updateDefinitions({});\n  }\n\n  const sidebarProps = {\n    ...editorProps,\n    showLoader: showLoader, updateShowLoader: updateShowLoader,\n    showAccordion: showAccordion, updateShowAccordion: updateShowAccordion,\n    loadHighlights: loadHighlights, updateLoadHighlights: updateLoadHighlights,\n    resetAnnotations: resetAnnotations\n  }\n\n  return (\n    <div id=\"sidebar-container\">\n      <div id=\"sidebar\">\n        <SidebarHeader {...sidebarProps} />\n        <SidebarBody {...sidebarProps} />\n      </div>\n      <div id=\"sidebar-logo\" className=\"text-center\">\n        <img alt=\"Add-on logo\" className=\"d-inline-block\" src={Logo} width=\"60%\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/src/pages/dashboard/hooks/dashboardAPIs.js",[],"/home/src/pages/dashboard/components/modals/NewDocumentModal.js",[],"/home/src/pages/forum/hooks/postAPI.js",[],"/home/src/pages/forum/components/ForumCard.js",["210","211"],"import {Card, Button, Badge} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nexport default function ForumCard({post_id, post_title, terminology, \n  curr_ontology, post_content, responses, publicPost}) {\n  return (\n\n    <div className=\"d-inline-block forum-card mr-3 mb-3\">\n  <Card style={{ width: '18rem' }}>\n  <Card.Header className=\"text-right p-1\"><Badge variant={publicPost ? 'light' : 'dark'}>\n    {`${responses} ${responses == 1 ? 'response' : 'responses'}`}\n    </Badge></Card.Header>\n  <Card.Body>\n    <Card.Title className=\"\">\n      <span>{post_title}</span>\n\n        \n\n    </Card.Title>\n    <Card.Subtitle className=\"mb-2 text-muted text-smal\">{`${terminology}: ${curr_ontology}`}</Card.Subtitle>\n    <Card.Text>\n      {post_content}\n    </Card.Text>\n    <Card.Link><Link to={`/post/${post_id}`}>open</Link></Card.Link>\n    {!publicPost ? <Card.Link href=\"#\">delete</Card.Link> : null}\n  </Card.Body>\n</Card>\n</div>\n\n\n\n  );\n}\n","/home/src/pages/editor/components/editor/Highlights.js",["212","213","214"],"import $ from 'jquery';\nimport React, {useEffect, useState} from 'react';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport sortKeys from '../../hooks/sidebar/sortKeys';\nimport getRemovedHighlights from '../../hooks/editor/getRemovedHighlights';\n\nconst Highlights = ({ highlights, currentHighlight, setCurrentHighlight, annotationSelection, editor}) => {\n  const sortedKeys = sortKeys(Object.keys(highlights));\n  const [activeIndex, updateActiveIndex] = useState(0);\n\n  const removedHighlights = getRemovedHighlights(annotationSelection);\n\n  if (editor) {\n    $(document.querySelector(\"trix-editor\")).click(() => {\n        setTimeout(() => updateActiveIndex(editor.getSelectedRange()[0]), 200);\n    });\n  }\n\n  // display all highlights\n  useEffect(() => {\n    for (const term in highlights) {\n      const divider = term.indexOf('-');\n      const from = Number(term.substring(0, divider))-1;\n      const to = Number(term.substring(divider+1, term.length));\n\n      const start = editor.getClientRectAtPosition(from);\n      const end = editor.getClientRectAtPosition(to);\n      const width = end.left - start.left;\n\n      $(`#highlight-${term}`).css({\n        width: `${width}px`,\n        top: `${start.top + 25}px`,\n        left: `${start.left}px`\n      });\n    }\n  });\n\n  useEffect(() => {\n    let set = false;\n    for (const key of sortedKeys) {\n    const divider = key.indexOf('-');\n    const highlightStart = Number(key.substring(0, divider))-1;\n    const highlightEnd = Number(key.substring(divider+1, key.length));\n    if (activeIndex <= highlightEnd) {\n//       $('.active').removeClass('active');\n//       $(`#highlight-${key}`).addClass('active');\n      if (activeIndex > highlightStart) {\n        setCurrentHighlight(key);\n        set = true;\n\n        // show accordion card\n//         const toggle = document.querySelector(`.toggle-${key}`);\n//         const collapse = document.querySelector(`.toggle-${key} + .collapse`);\n//         if (!collapse.classList.contains('show')) {\n//             toggle.click();\n//             setTimeout(() => toggle.scrollIntoView(), 300);\n//         }\n      }\n      break;\n    }\n  }\n  if (!set) setCurrentHighlight(null);\n  }, [activeIndex]);\n  return (\n    <div>\n      {Object.keys(highlights).map((term, key) => <div key={key} id={`highlight-${term}`}\n        className={`highlight ${term === currentHighlight ? 'active' : ''} ${removedHighlights.includes(term) ? 'deleted' : ''} ${highlights[term] != -1 ? 'selected' : ''}`}/>)\n      }\n    </div>\n  )\n};\n\nexport default Highlights;\n","/home/src/pages/editor/components/sidebar/SidebarHeader.js",[],"/home/src/pages/editor/components/sidebar/SidebarBody.js",["215"],"import React, { useEffect } from 'react';\n\nimport SidebarLoader from './SidebarLoader';\nimport SidebarAccordion from './SidebarAccordion';\n\nconst SidebarBody = sidebarProps => {\n  const { annotations, updateAnnotationSelection,\n    showLoader, showAccordion } = sidebarProps;\n    \n  // reset annotation selection\n  useEffect(() => {\n    const selection = {};\n    Object.keys(annotations)\n      .forEach(term => selection[term] = 0);\n    updateAnnotationSelection(selection);\n  }, [annotations])\n\n  return (\n    <div className=\"flex-grow-1\">\n      {showLoader ? <SidebarLoader /> : null}\n      {showAccordion ? <SidebarAccordion {...sidebarProps} /> : null}\n    </div>\n  );\n}\n\nexport default SidebarBody;\n","/home/src/pages/editor/hooks/editor/documentAPI.js",[],"/home/src/pages/editor/hooks/downloadAnnotations.js",["216","217","218","219","220","221","222","223"],"import getTermStr from './sidebar/getTermString';\nimport getDefinition from './sidebar/getDefinition';\nimport sortKeys from './sidebar/sortKeys';\n\nconst download = (filename, text) => {\n  const element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n\n  document.body.appendChild(element);\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nconst saveAsJSON = async (content, annotations, annotationSelection, definitions, updateDefinitions) => {\n  const schemaJson = {};\n\n  const onlySelectedAnnotations = {};\n  for (const term in annotationSelection) {\n    if (annotationSelection[term] !== -1)\n      onlySelectedAnnotations[term] = annotations[term][annotationSelection[term]];\n  }\n\n  for(const term in onlySelectedAnnotations) {\n    const annotation = onlySelectedAnnotations[term];\n    const url = annotation.annotatedClass.links.self;\n    const def = url in definitions ? definitions[url] : await getDefinition(url);\n    updateDefinitions({...definitions, [url]: def});\n\n    schemaJson[getTermStr(term, content)] = def;\n  }\n\n  download('document.json', JSON.stringify(schemaJson));\n}\n\nconst saveAsHTML = async (content, annotations, annotationSelection, definitions, updateDefinitions, hasHighlights) => {\n  const schemaJson = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"MedicalEntity\",\n    \"code\": []\n  };\n\n  const onlySelectedAnnotations = {};\n  for (const term in annotationSelection) {\n    if (annotationSelection[term] !== -1)\n      onlySelectedAnnotations[term] = annotations[term][annotationSelection[term]];\n  }\n\n  let addedLength = 0;\n  let text = content;\n  let annText = \"\";\n  let ended = 0;\n\n  for(const term of sortKeys(Object.keys(onlySelectedAnnotations))) {\n    const annotation = onlySelectedAnnotations[term];\n\n    schemaJson['code'].push({\"@type\": \"MedicalCode\", \"name\": getTermStr(term), \"codingSystem\": annotation.acronym, \"link\": annotation.annotatedClass['@id']});\n    if(hasHighlights) {\n      const url = annotation.annotatedClass.links.self;\n      const def = url in definitions ? definitions[url] : await getDefinition(url);\n      updateDefinitions({...definitions, [url]: def});\n      annText += text.substring(ended, annotation.from - 1) + `<span class=\"tippy\" title=\"${def}\">${text.substring(annotation.from - 1, annotation.to)}</span>`;\n      ended = annotation.to;\n    }\n  }\n  annText += text.substring(ended);\n\n  download('document.html', '<html><head><title><\\/title><link href=\"https://fonts.googleapis.com/css?family=Nunito+Sans:400,600,800\" rel=\"stylesheet\">' + ((hasHighlights) ? '<script src=\"https://unpkg.com/tippy.js@2.5.4/dist/tippy.all.min.js\"><\\/script>' : '') + '<style>.container { font-family: Nunito Sans,Avenir,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Ubuntu,Cantarell,Helvetica Neue,Helvetica,Arial,sans-serif; font-size: 1.125rem; padding: 4%; margin: 0 auto; }' + ((hasHighlights) ? ' .tippy { background: rgba(255,202,223,.5); color: #d22489; outline: 0; border-bottom: 1px solid #f27da6; padding: 0 4px; font-weight: 600; cursor: help; }' : '') + '<\\/style><script type=\"application/ld+json\">' + JSON.stringify(schemaJson) + '<\\/script><\\/head><body class=\"container\"' + ((hasHighlights) ? ' onload=\"tippy(\\'.tippy\\');\"' : '') + '>' + (hasHighlights ? annText : text) + '<\\/body><\\/html>');\n}\n\nexport {saveAsHTML, saveAsJSON};\n","/home/src/pages/editor/hooks/editor/getRemovedHighlights.js",["224"],"const getRemovedHighlights = annotationSelection => {\n  return Object.keys(annotationSelection)\n      .filter(highlight => annotationSelection[highlight] == -1);\n}\n\nexport default getRemovedHighlights;\n","/home/src/pages/editor/components/sidebar/SidebarAccordion.js",["225","226","227"],"import React, {useState, useEffect} from 'react';\nimport {Accordion, Card, Button, Modal} from 'react-bootstrap';\nimport $ from 'jquery';\n\nimport sortKeys from '../../hooks/sidebar/sortKeys';\nimport getTermStr from '../../hooks/sidebar/getTermString';\nimport getDefinition from '../../hooks/sidebar/getDefinition';\nimport getRemovedHighlights from '../../hooks/editor/getRemovedHighlights';\n\nimport LookUp from '../LookUp';\nimport AskQuestion from '../AskQuestion';\n\nconst setGetDefinitionListeners = (annotations, setDefinition) => {\n  for (const annotation of Object.values(annotations)) {\n    for (const {from, to, acronym, annotatedClass} of annotation) {\n      const toggle = `${from}-${to}-${acronym}`;\n      const url = annotatedClass.links.self;\n      console.log(toggle);\n      $(`.${toggle}`).click(() => {setDefinition(url); console.log(toggle);});\n    }\n  }\n}\n\nconst removeHighlight = (currentHighlight, setCurrentHighlight, highlights, updateHighlights) => {\n  delete highlights[currentHighlight];\n  updateHighlights({...highlights});\n  setCurrentHighlight('');\n}\n\n// show in NCBOTree\nconst showInTree = text => {\n  while (document.querySelector('#tree > .root > span') !== null) setTimeout(() => {}, 100);\n  const listItem = [...document.querySelectorAll('#tree li')].filter(li => li.innerText.toLowerCase() === text.toLowerCase());\n  if (listItem.length > 0) listItem[0].scrollIntoView();\n  console.log(listItem);\n}\n\nconst SidebarAccordion = ({ annotations, updateAnnotations, definitions, updateDefinitions,\n  updateHighlights, loadHighlights, highlights, updateLoadHighlights, currentHighlight,\n  setCurrentHighlight, annotationSelection, updateAnnotationSelection, content }) => {\n\n  const [openOntologyModal, updateOpenOntologyModal] = useState(false);\n  const [openLookUpModal, updateOpenLookUpModal] = useState(false);\n  const [openPostModal, updateOpenPostModal] = useState(false);\n\n\n  const [setDefinitionListeners, updateSetDefinitionListeners] = useState(false);\n  const [ontologyIdx, updateOntologyIdx] = useState(0);\n  // console.log(currentHighlight)\n  const annotatedTerms = sortKeys(Object.keys(annotations));\n  const removedHighlights = getRemovedHighlights(annotationSelection);\n//   console.log(annotations);\n  console.log('refresh');\n\n  const setDefinition = url => {\n    if (!(url in definitions)) {\n      getDefinition(url).then(def => updateDefinitions({...definitions, [url]: def}));\n      return 'Loading...';\n    } else {\n      return definitions[url];\n    }\n  }\n\n  if (!setDefinitionListeners) {\n    console.log(\"here\");\n    setGetDefinitionListeners(annotations, setDefinition);\n    updateSetDefinitionListeners(true);\n  }\n\n  if (loadHighlights) {\n    const newHighlights = {};\n    for (const term of annotatedTerms) {\n      newHighlights[term] = -1;\n    }\n    updateHighlights(newHighlights);\n    updateLoadHighlights(false);\n  }\n\n//   useEffect(() => {\n//     for (const term in annotatedTerms) {\n//       $(`toggle-${term}`).click(() => setDefinition(annotations[term][0].annotatedClass.links.self));\n//     }\n//   });\n\n  // Switch annotations\n  useEffect(() => {\n    updateOntologyIdx(0);\n  }, [currentHighlight]);\n\n  // Switch annotations or change ontology\n  useEffect(() => {\n    // if (currentHighlight) {\n    //   const tree = $(\"#tree\")[0].NCBOTree;\n    //   const ontology = annotations[currentHighlight][ontologyIdx];\n    //   console.log(ontology.annotatedClass['@id']);\n    //   showInTree(annotations[currentHighlight][ontologyIdx].text);\n    //   tree.jumpToClass(ontology.annotatedClass['@id']);\n      // change NCBO tree\n\n  }, [currentHighlight, ontologyIdx]);\n\n  if (!currentHighlight) return null;\n\n  return (\n    <React.Fragment>\n    {removedHighlights.includes(currentHighlight) ?\n      <Card className=\"p-4 text-center\"><Button variant=\"outline-success\" size=\"sm\" style={{width: 'fit-content'}} className=\"mx-auto\"\n        onClick={() => updateAnnotationSelection({...annotationSelection, [currentHighlight]: 0})}>reannotate</Button></Card> :\n      <div><Card>\n        <Card.Header className=\"d-flex justify-content-between\">\n          <span>{annotations[currentHighlight][annotationSelection[currentHighlight]].acronym}</span>\n          <div>\n            { annotations[currentHighlight].length > 1 ?\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => updateOpenOntologyModal(true)}>change</Button> : null }{' '}\n            <Button variant=\"outline-danger\" size=\"sm\" onClick={() => updateAnnotationSelection({...annotationSelection, [currentHighlight]: -1})}>{'delete'}</Button>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>\n            {setDefinition(annotations[currentHighlight][annotationSelection[currentHighlight]].annotatedClass.links.self)}\n          </Card.Text>\n        </Card.Body>\n        {openOntologyModal ? <OntologyModal term={currentHighlight} updateOpenOntologyModal={updateOpenOntologyModal} annotations={annotations} definitions={definitions} setDefinition={setDefinition} annotationSelection={annotationSelection} updateAnnotationSelection={updateAnnotationSelection} content={content} /> : null}\n        {openLookUpModal ? <LookUp word={getTermStr(currentHighlight, content)} ontology={annotations[currentHighlight][annotationSelection[currentHighlight]]} updateOpenPostModal={updateOpenPostModal} updateOpenLookUpModal={updateOpenLookUpModal}/> : null}\n        {openPostModal ? <AskQuestion word={getTermStr(currentHighlight, content)} ontology={annotations[currentHighlight][annotationSelection[currentHighlight]]} updateOpenPostModal={updateOpenPostModal} updateOpenLookUpModal={updateOpenLookUpModal} currentHighlight={currentHighlight} annotationSelection={annotationSelection} annotations={annotations} /> : null}\n      </Card>\n      <div className=\"text-right\"><Button variant=\"link\" style={{'box-shadow': 'none'}} onClick={() => updateOpenLookUpModal(true)}>Need Help?</Button></div></div>\n    }\n    </React.Fragment>\n  );\n}\n\nconst OntologyModal = ({term, updateOpenOntologyModal, annotations, definitions, setDefinition, ontologyIdx, annotationSelection, updateAnnotationSelection, content }) => {\n  const closeModal = () => updateOpenOntologyModal(false);\n  const getDef = url => {\n    return definitions[url] ? definitions[url] : 'loading...';\n  }\n\n  useEffect(() => {\n    for (const ontology of annotations[term]) {\n      $(`.modal-toggle-${ontology.acronym}`).click(() => setDefinition(ontology.annotatedClass.links.self));\n    }\n  });\n\n  return (\n    <Modal\n      show={true}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {getTermStr(term, content)}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Accordion defaultActiveKey={`${term}-modal-0`} id=\"sidebar-accordion\">\n          {annotations[term].map((ontology, idx) =>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey={`${term}-modal-${idx}`} className={`d-flex justify-content-between ${ontology.from}-${ontology.to}-${ontology.acronym} modal-toggle-${ontology.acronym}`}>\n              <span>{ontology.acronym}</span>\n              {ontologyIdx != idx ?\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {\n                    updateAnnotationSelection({...annotationSelection, [term]: idx});\n                    updateOpenOntologyModal(false);\n                }}>select</Button>\n                : null}\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey={`${term}-modal-${idx}`} className={`p-2 p-0 accordion-card`}>\n              <Card>\n                <Card.Body>\n                  <Card.Text>\n                    {getDef(ontology.annotatedClass.links.self)}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Accordion.Collapse>\n          </Card>\n          )}\n        </Accordion>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={closeModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default SidebarAccordion;\n","/home/src/pages/editor/components/sidebar/SidebarLoader.js",[],"/home/src/pages/editor/components/sidebar/ManualOntologySelector.js",["228","229","230"],"import React, {useState, useEffect} from 'react';\nimport $ from 'jquery';\nimport {Button} from 'react-bootstrap';\nimport Chips, { Chip } from 'react-chips';\n\nconst fetchAllOntologies = (updateAllOntologies) => {\n  $.ajax({\n    url: 'https://data.bioontology.org/ontologies?include=name,acronym&display_links=false&display_context=false&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f',\n    dataType: 'JSON',\n    success: data => {\n      const ontologies = {};\n      for (const ontology of data) {\n        ontologies[ontology.name.trim()] = ontology['acronym'];\n        // differentiate acronyms\n        ontologies[`${ontology['acronym']} `] = ontology.name;\n      }\n      updateAllOntologies(ontologies);\n    }});\n}\n\nconst limitResults = limit => {\n  if (limit < 0) return;\n  const resultList = $('#react-autowhatever-1 > ul');\n  const len = resultList.children().length;\n  if (len > limit) {\n    for (let i = limit; i < len; i++) resultList.children().remove('#react-autowhatever-1--item-' + i);\n  }\n}\n\nconst updateChips = (chips, allOntologies, updateManualOntologies) => {\n  updateManualOntologies(chips.reduce((ontologies, chip) => {\n    if (chip.endsWith(' ')) ontologies[chip.trim()] = allOntologies[chip];\n    else ontologies[`${allOntologies[chip]}`] = chip;\n    return ontologies;\n  }, {}));\n}\n\nconst getSuggestions = (allOntologies, manualOntologies) => {\n  return Object.keys(allOntologies).filter(\n    suggestion => !Object.keys(manualOntologies).concat(Object.values(manualOntologies)).includes(suggestion.trim())\n  );\n}\n\nconst ManualAnnotationPopUp = ({manualOntologies, updateManualOntologies}) => {\n\n  const [allOntologies, updateAllOntologies] = useState({});\n  const [loadedAllOntologies, updateLoadedAllOntologies] = useState(false);\n  const [hideOntologyField, updateHideOntologyField] = useState(false);\n\n  if (!loadedAllOntologies) {\n      fetchAllOntologies(updateAllOntologies);\n      updateLoadedAllOntologies(true);\n  }\n\n\n  return (\n    <div className=\"mb-3\">\n      {hideOntologyField ?\n        <Button variant=\"outline-secondary\" className=\"pt-1 pb-2 w-100\" onClick={() => updateHideOntologyField(false)}>show ontologies</Button> :\n        <React.Fragment>\n          <Chips\n            placeholder={\"Enter ontology\"}\n            value={Object.values(manualOntologies)}\n            onChange={chips => updateChips(chips, allOntologies, updateManualOntologies)}\n            suggestions={getSuggestions(allOntologies, manualOntologies)}\n            highlightFirstSuggestion={true}\n          />\n          <Button variant=\"link\" onClick={() => updateHideOntologyField(true)}>hide ontologies</Button>\n        </React.Fragment>\n      }\n      </div>\n  );\n}\n\nexport default ManualAnnotationPopUp;\n","/home/src/pages/editor/hooks/sidebar/sortKeys.js",[],"/home/src/pages/editor/hooks/sidebar/getRecommenderAnnotations.js",["231"],"import $ from 'jquery';\n\nconst parseRecommenderData = (data) => {\n  const results = [];\n  for(let i = 0; i < data.length; i++) {\n    results[i] = {};\n    results[i]['acronym'] = data[i]['ontologies'][0]['acronym'];\n    results[i]['annotations'] = [];\n    for (const annotation of data[i]['coverageResult']['annotations']) {\n      results[i]['annotations'].push(annotation);\n    }\n  }\n  return results;\n}\n\nconst formatAnnotations = (results) => {\n  const formattedRes = {};\n\n  for (const res of results) {\n    const acronym = res['acronym'];\n    for (const annotation of res['annotations']) {\n      let key = annotation['from'] + \"-\" + annotation['to'];\n      annotation['acronym'] = acronym;\n      if (key in formattedRes) {\n        formattedRes[key].push(annotation);\n      } else {\n        formattedRes[key] = [annotation];\n      }\n    }\n  }\n    console.log(formattedRes);\n  // remove overlapping annotations\n  for (const res in formattedRes) {\n      for (const res1 in formattedRes) {\n          if (res !== res1) {\n              const from1 = res.substring(0, res.indexOf(\"-\"));\n              const from2 = res1.substring(0, res1.indexOf(\"-\"));\n              const to1 = res.substring(res.indexOf(\"-\")+1, res.length);\n              const to2 = res1.substring(res1.indexOf(\"-\")+1, res1.length);\n\n              if (Number(from1) >= Number(from2) && Number(to1) <= Number(to2)) formattedRes[res] = [];\n              else if (Number(from2) >= Number(from1) && Number(to2) <= Number(to1)) formattedRes[res1] = [];\n          }\n      }\n  }\n  for (const res in formattedRes) {\n      if (formattedRes[res].length == 0) delete formattedRes[res];\n  }\n\n  console.log(formattedRes);\n  return formattedRes;\n}\n\nconst getRecommenderAnnotations = (text, ontologies, callback) => {\n  let ontologyUrl = '';\n  if (ontologies !== undefined) {\n    ontologyUrl += '&ontologies=';\n    for (const ontology of ontologies) {\n      ontologyUrl += ontology + ',';\n    }\n  }\n  const url = 'https://data.bioontology.org/recommender?input='\n    + encodeURIComponent(text)\n    + ontologyUrl\n    + '&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f'\n  $.ajax({\n\t\turl: url,\n    dataType: 'JSON',\n    xhrFields: {\n        withCredentials: false\n    },\n\t\tsuccess: (data) => {\n      console.log(data);\n//           console.log(data);\n\t\t  // Converting retrieved data to an array of ontology ids\n      const results = parseRecommenderData(data);\n\t\t\t// Executing a callback function, passing an array of ontology IDs\n      callback(formatAnnotations(results));\n    },\n    error: () => {\n    \t// Executing callback function, passing an empty array\n\t\t  callback({});\n    }\n\t});\n}\n\nexport default getRecommenderAnnotations;\n","/home/src/pages/editor/hooks/sidebar/getDefinition.js",[],"/home/src/pages/editor/hooks/sidebar/getTermString.js",[],"/home/src/pages/editor/components/AskQuestion.js",["232","233","234","235","236"],"import React,{useState} from 'react';\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl, Dropdown} from 'react-bootstrap';\nimport {createPost} from '../../forum/hooks/postAPI';\nimport {postAddresses} from '../../../appInfo';\n\n\nconst AskQuestion = ({word, ontology, updateOpenPostModal, currentHighlight, annotationSelection, annotations}) => {\n\n  const [context, updateContext] = useState(\"\");\n  const questions = [\n    \"Which ontology should I use?\",\n    \"Does this ontology best describe this terminology?\"\n  ];\n  const [question, updateQuestion] = useState(questions[0]);\n  const [questionOntology, updateQuestionOntology] = useState(annotationSelection[currentHighlight]);\n\n  const acronyms = annotations[currentHighlight].reduce((ontologies, ontology) => ontologies.concat(ontology.acronym), []);\n\n  const closeModal = () => updateOpenPostModal(false);\n\n  const submit = () => {\n    createPost(question, word, acronyms[questionOntology], context, post_id => {\n      window.open(`${postAddresses.post}/${post_id}`, '_blank');\n      closeModal();\n    });\n  }\n  return (\n    <Modal\n      show={true}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {'Ask Question'}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"px-5\">\n\n        <Form>\n        <Row className=\"mb-1\">\n          <Form.Group as={Col} controlId=\"term\">\n            <Form.Label>Terminology</Form.Label>\n            <Form.Control type=\"text\" value={word} disabled />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n            <Form.Label>Question</Form.Label>\n            <Form.Control as=\"select\" size=\"md\" value={question} onChange={evt => updateQuestion(evt.target.value)} custom>\n              {questions.map((question, index) => <option value={index}>{question}</option>)}\n            </Form.Control>\n          </Form.Group>\n        </Row>\n        <Row className=\"mb-1\">\n          <Form.Group as={Col} controlId=\"term\">\n            <Form.Label>Please explain</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} value={context} onChange={evt => updateContext(evt.target.value)} placeholder=\"Elaborate on your question...\" />\n          </Form.Group>\n        </Row>\n        {question == 1 ?\n        <Row className=\"mb-1\">\n        <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n          <Form.Label>Select Ontology</Form.Label>\n          <Form.Control as=\"select\" size=\"md\" value={questionOntology} onChange={evt => updateQuestionOntology(evt.target.value)} custom>\n            {acronyms.map((acronym, idx) => <option value={idx}>{acronym}</option>)}\n          </Form.Control>\n        </Form.Group>\n        </Row> : null }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n      <Button onClick={closeModal} variant=\"secondary\">Close</Button>\n    <Button variant=\"primary\" onClick={() => submit()}>Submit</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n};\n\nexport default AskQuestion;\n","/home/src/pages/editor/components/LookUp.js",["237","238","239"],"import React from 'react';\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl} from 'react-bootstrap';\n\n\nconst LookUp = ({word, ontology, updateOpenPostModal, updateOpenLookUpModal}) => {\n  const closeModal = () => updateOpenLookUpModal(false);\n  const askQuestion = () => {\n    closeModal();\n    updateOpenPostModal(true);\n  };\n\n  return (\n    <Modal\n      show={true}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {word}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <Accordion defaultActiveKey={`${word}-modal-0`} id=\"sidebar-accordion\">\n        <FormControl\n          type=\"search\"\n          placeholder=\"Search\"\n          className=\"mr-2 mb-3\"\n          aria-label=\"Search\"\n        />\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey={`${word}-modal-0`} className={`d-flex justify-content-between modal-toggle-`}>\n            <span>{'NCIT'}</span>\n            <div>\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>select</Button>{' '}\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>open</Button>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={`${word}-modal-0`} className={`p-2 p-0 accordion-card`}>\n            <Card>\n              <Card.Body>\n                <Card.Text>\n                  {'Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey={`${word}-modal-1`} className={`d-flex justify-content-between modal-toggle-`}>\n            <span>{'OMIT'}</span>\n            <div>\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>select</Button>{' '}\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>open</Button>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={`${word}-modal-1`} className={`p-2 p-0 accordion-card`}>\n            <Card>\n              <Card.Body>\n                <Card.Text>\n                  {'Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey={`${word}-modal-2`} className={`d-flex justify-content-between modal-toggle-`}>\n            <span>{'MELO'}</span>\n            <div>\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>select</Button>{' '}\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>open</Button>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={`${word}-modal-2`} className={`p-2 p-0 accordion-card`}>\n            <Card>\n              <Card.Body>\n                <Card.Text>\n                  {'Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      <div className=\"text-right\"><Button variant=\"link\" style={{'box-shadow': 'none'}} onClick={() => askQuestion()}>{'Ask question'}</Button></div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={closeModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n};\n\nexport default LookUp;\n","/home/src/pages/dashboard/components/modals/DeleteDocumentModal.js",["240","241"],"import React, {useState} from 'react';\nimport {Modal, Button, Form} from 'react-bootstrap';\n\nimport {deleteDocument} from '../../hooks/dashboardAPIs';\n\nexport default function DeleteDocumentModal({updateShowDelDocModal, documents, \n    updateDocuments, doc_id}) {\n  const handleClose = () => updateShowDelDocModal(false);\n\n  const submit = () => {\n    deleteDocument(doc_id, () => {\n        // remove deleted document\n        updateDocuments(documents.filter(doc => doc.doc_id !== doc_id));\n    });\n    handleClose();\n  };\n\n  return (\n    <>\n    <Modal\n          show={true}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n        <Modal.Header closeButton>\n        <Modal.Title>Deleting Document</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        Are you sure? This operation is permanent!\n        </Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n        </Button>\n        <Button variant=\"danger\" onClick={submit}>Delete</Button>\n        </Modal.Footer>\n    </Modal>\n    </>\n\n  )\n}\n",{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":3,"column":27,"nodeType":"248","messageId":"249","endLine":3,"endColumn":36},{"ruleId":"246","severity":1,"message":"250","line":4,"column":39,"nodeType":"248","messageId":"249","endLine":4,"endColumn":48},{"ruleId":"246","severity":1,"message":"251","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":14},{"ruleId":"246","severity":1,"message":"252","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":7,"column":40,"nodeType":"255","endLine":7,"endColumn":42,"suggestions":"256"},{"ruleId":"246","severity":1,"message":"247","line":3,"column":27,"nodeType":"248","messageId":"249","endLine":3,"endColumn":36},{"ruleId":"246","severity":1,"message":"257","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":9},{"ruleId":"246","severity":1,"message":"258","line":1,"column":16,"nodeType":"248","messageId":"249","endLine":1,"endColumn":24},{"ruleId":"253","severity":1,"message":"259","line":30,"column":36,"nodeType":"255","endLine":30,"endColumn":38,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","endLine":12,"endColumn":3},{"ruleId":"246","severity":1,"message":"258","line":1,"column":16,"nodeType":"248","messageId":"249","endLine":1,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":18,"column":9,"nodeType":"266","endLine":18,"endColumn":81},{"ruleId":"264","severity":1,"message":"265","line":22,"column":11,"nodeType":"266","endLine":22,"endColumn":63},{"ruleId":"246","severity":1,"message":"257","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":9},{"ruleId":"246","severity":1,"message":"267","line":12,"column":46,"nodeType":"248","messageId":"249","endLine":12,"endColumn":52},{"ruleId":"253","severity":1,"message":"268","line":37,"column":6,"nodeType":"255","endLine":37,"endColumn":15,"suggestions":"269"},{"ruleId":"246","severity":1,"message":"257","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":9},{"ruleId":"246","severity":1,"message":"270","line":1,"column":15,"nodeType":"248","messageId":"249","endLine":1,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":11,"column":32,"nodeType":"273","messageId":"274","endLine":11,"endColumn":34},{"ruleId":"246","severity":1,"message":"275","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":28},{"ruleId":"253","severity":1,"message":"276","line":64,"column":6,"nodeType":"255","endLine":64,"endColumn":19,"suggestions":"277"},{"ruleId":"271","severity":1,"message":"278","line":68,"column":148,"nodeType":"273","messageId":"274","endLine":68,"endColumn":150},{"ruleId":"253","severity":1,"message":"279","line":16,"column":6,"nodeType":"255","endLine":16,"endColumn":19,"suggestions":"280"},{"ruleId":"246","severity":1,"message":"281","line":51,"column":7,"nodeType":"248","messageId":"249","endLine":51,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":70,"column":50,"nodeType":"284","messageId":"285","endLine":70,"endColumn":51,"suggestions":"286"},{"ruleId":"282","severity":1,"message":"283","line":70,"column":246,"nodeType":"284","messageId":"285","endLine":70,"endColumn":247,"suggestions":"287"},{"ruleId":"282","severity":1,"message":"283","line":70,"column":669,"nodeType":"284","messageId":"285","endLine":70,"endColumn":670,"suggestions":"288"},{"ruleId":"282","severity":1,"message":"283","line":70,"column":747,"nodeType":"284","messageId":"285","endLine":70,"endColumn":748,"suggestions":"289"},{"ruleId":"282","severity":1,"message":"283","line":70,"column":757,"nodeType":"284","messageId":"285","endLine":70,"endColumn":758,"suggestions":"290"},{"ruleId":"282","severity":1,"message":"283","line":70,"column":892,"nodeType":"284","messageId":"285","endLine":70,"endColumn":893,"suggestions":"291"},{"ruleId":"282","severity":1,"message":"283","line":70,"column":900,"nodeType":"284","messageId":"285","endLine":70,"endColumn":901,"suggestions":"292"},{"ruleId":"271","severity":1,"message":"272","line":3,"column":59,"nodeType":"273","messageId":"274","endLine":3,"endColumn":61},{"ruleId":"246","severity":1,"message":"293","line":24,"column":7,"nodeType":"248","messageId":"249","endLine":24,"endColumn":22},{"ruleId":"246","severity":1,"message":"294","line":31,"column":7,"nodeType":"248","messageId":"249","endLine":31,"endColumn":17},{"ruleId":"271","severity":1,"message":"278","line":163,"column":28,"nodeType":"273","messageId":"274","endLine":163,"endColumn":30},{"ruleId":"246","severity":1,"message":"247","line":1,"column":26,"nodeType":"248","messageId":"249","endLine":1,"endColumn":35},{"ruleId":"246","severity":1,"message":"295","line":4,"column":17,"nodeType":"248","messageId":"249","endLine":4,"endColumn":21},{"ruleId":"246","severity":1,"message":"296","line":21,"column":7,"nodeType":"248","messageId":"249","endLine":21,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":47,"column":36,"nodeType":"273","messageId":"274","endLine":47,"endColumn":38},{"ruleId":"246","severity":1,"message":"297","line":2,"column":9,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"298","line":2,"column":46,"nodeType":"248","messageId":"249","endLine":2,"endColumn":55},{"ruleId":"246","severity":1,"message":"299","line":2,"column":57,"nodeType":"248","messageId":"249","endLine":2,"endColumn":68},{"ruleId":"246","severity":1,"message":"300","line":2,"column":70,"nodeType":"248","messageId":"249","endLine":2,"endColumn":78},{"ruleId":"271","severity":1,"message":"272","line":60,"column":19,"nodeType":"273","messageId":"274","endLine":60,"endColumn":21},{"ruleId":"246","severity":1,"message":"301","line":2,"column":30,"nodeType":"248","messageId":"249","endLine":2,"endColumn":33},{"ruleId":"246","severity":1,"message":"302","line":2,"column":35,"nodeType":"248","messageId":"249","endLine":2,"endColumn":39},{"ruleId":"246","severity":1,"message":"303","line":2,"column":41,"nodeType":"248","messageId":"249","endLine":2,"endColumn":44},{"ruleId":"246","severity":1,"message":"258","line":1,"column":16,"nodeType":"248","messageId":"249","endLine":1,"endColumn":24},{"ruleId":"246","severity":1,"message":"302","line":2,"column":24,"nodeType":"248","messageId":"249","endLine":2,"endColumn":28},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'show' is assigned a value but never used.","'GoogleLogin' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'$' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'updateReplies'. Either include it or remove the dependency array.",["307"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'editor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contentRetrived', 'documentId', and 'timeoutId'. Either include them or remove the dependency array.",["308"],"'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useAccordionToggle' is defined but never used.","React Hook useEffect has missing dependencies: 'setCurrentHighlight' and 'sortedKeys'. Either include them or remove the dependency array. If 'setCurrentHighlight' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["309"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'updateAnnotationSelection'. Either include it or remove the dependency array.",["310"],"'addedLength' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],"'removeHighlight' is assigned a value but never used.","'showInTree' is assigned a value but never used.","'Chip' is defined but never used.","'limitResults' is assigned a value but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","'FormControl' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"messageId":"335","fix":"336","desc":"337"},{"messageId":"338","fix":"339","desc":"340"},{"messageId":"335","fix":"341","desc":"337"},{"messageId":"338","fix":"342","desc":"340"},{"messageId":"335","fix":"343","desc":"337"},{"messageId":"338","fix":"344","desc":"340"},{"messageId":"335","fix":"345","desc":"337"},{"messageId":"338","fix":"346","desc":"340"},{"messageId":"335","fix":"347","desc":"337"},{"messageId":"338","fix":"348","desc":"340"},{"messageId":"335","fix":"349","desc":"337"},{"messageId":"338","fix":"350","desc":"340"},{"messageId":"335","fix":"351","desc":"337"},{"messageId":"338","fix":"352","desc":"340"},"Update the dependencies array to be: [setLoggedIn]",{"range":"353","text":"354"},"Update the dependencies array to be: [updateReplies]",{"range":"355","text":"356"},"Update the dependencies array to be: [content, contentRetrived, documentId, timeoutId]",{"range":"357","text":"358"},"Update the dependencies array to be: [activeIndex, setCurrentHighlight, sortedKeys]",{"range":"359","text":"360"},"Update the dependencies array to be: [annotations, updateAnnotationSelection]",{"range":"361","text":"362"},"removeEscape",{"range":"363","text":"364"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"365","text":"366"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"367","text":"364"},{"range":"368","text":"366"},{"range":"369","text":"364"},{"range":"370","text":"366"},{"range":"371","text":"364"},{"range":"372","text":"366"},{"range":"373","text":"364"},{"range":"374","text":"366"},{"range":"375","text":"364"},{"range":"376","text":"366"},{"range":"377","text":"364"},{"range":"378","text":"366"},[276,278],"[setLoggedIn]",[1120,1122],"[updateReplies]",[1140,1149],"[content, contentRetrived, documentId, timeoutId]",[2198,2211],"[activeIndex, setCurrentHighlight, sortedKeys]",[480,493],"[annotations, updateAnnotationSelection]",[2573,2574],"",[2573,2573],"\\",[2769,2770],[2769,2769],[3192,3193],[3192,3192],[3270,3271],[3270,3270],[3280,3281],[3280,3280],[3415,3416],[3415,3415],[3423,3424],[3423,3423]]