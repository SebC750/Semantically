[{"C:\\xampp\\htdocs\\Semantically-master\\src\\index.js":"1","C:\\xampp\\htdocs\\Semantically-master\\src\\App.js":"2","C:\\xampp\\htdocs\\Semantically-master\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\Semantically-master\\src\\components\\Alert.js":"4","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\dashboard.js":"5","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\editor.js":"6","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\hooks\\authenticate.js":"7","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\logout.js":"8","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\forum.js":"9","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\login.js":"10","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\survey.js":"11","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\account\\account.js":"12","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\register.js":"13","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\post.js":"14","C:\\xampp\\htdocs\\Semantically-master\\src\\components\\Sidebar.js":"15","C:\\xampp\\htdocs\\Semantically-master\\src\\alertMessages.js":"16","C:\\xampp\\htdocs\\Semantically-master\\src\\appInfo.js":"17","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\components\\DocumentCard.js":"18","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\components\\modals\\NewDocumentModal.js":"19","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\hooks\\dashboardAPIs.js":"20","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\editorsHelper.js":"21","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\components\\ForumCard.js":"22","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\hooks\\postAPI.js":"23","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\EditorSidebar.js":"24","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\components\\modals\\DeleteDocumentModal.js":"25","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\publish.js":"26","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\Sidebar.js":"27","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\editor\\DocumentEditor.js":"28","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\components\\models\\DeletePostModel.js":"29","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\editor\\getAnnotationSelection.js":"30","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\getTermString.js":"31","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\editor\\documentAPI.js":"32","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\downloadAnnotations.js":"33","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarHeader.js":"34","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarBody.js":"35","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\editor\\Highlights.js":"36","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\RemoveAnnotationsModal.js":"37","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\sortKeys.js":"38","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\getDefinition.js":"39","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\ManualOntologySelector.js":"40","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarAccordion.js":"41","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\editor\\getRemovedHighlights.js":"42","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarLoader.js":"43","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\getRecommenderAnnotations.js":"44","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\Personalize.js":"45","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\AskQuestion.js":"46","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\LookUp.js":"47","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\PopupRecommendation.js":"48","C:\\xampp\\htdocs\\Semantically\\src\\index.js":"49","C:\\xampp\\htdocs\\Semantically\\src\\reportWebVitals.js":"50","C:\\xampp\\htdocs\\Semantically\\src\\App.js":"51","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\editor.js":"52","C:\\xampp\\htdocs\\Semantically\\src\\components\\Alert.js":"53","C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\post.js":"54","C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\logout.js":"55","C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\login.js":"56","C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\survey.js":"57","C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\forum.js":"58","C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\dashboard.js":"59","C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\hooks\\authenticate.js":"60","C:\\xampp\\htdocs\\Semantically\\src\\pages\\account\\account.js":"61","C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\register.js":"62","C:\\xampp\\htdocs\\Semantically\\src\\components\\Sidebar.js":"63","C:\\xampp\\htdocs\\Semantically\\src\\appInfo.js":"64","C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\components\\ForumCard.js":"65","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\editorsHelper.js":"66","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\EditorSidebar.js":"67","C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\hooks\\postAPI.js":"68","C:\\xampp\\htdocs\\Semantically\\src\\alertMessages.js":"69","C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\components\\DocumentCard.js":"70","C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\components\\modals\\NewDocumentModal.js":"71","C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\hooks\\dashboardAPIs.js":"72","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\publish.js":"73","C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\components\\models\\DeletePostModel.js":"74","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\Sidebar.js":"75","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\editor\\DocumentEditor.js":"76","C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\components\\modals\\DeleteDocumentModal.js":"77","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\editor\\documentAPI.js":"78","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\getTermString.js":"79","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\editor\\getAnnotationSelection.js":"80","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\downloadAnnotations.js":"81","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\editor\\Highlights.js":"82","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\RemoveAnnotationsModal.js":"83","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarBody.js":"84","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarHeader.js":"85","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\sortKeys.js":"86","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\editor\\getRemovedHighlights.js":"87","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\getDefinition.js":"88","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarAccordion.js":"89","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\ManualOntologySelector.js":"90","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\PopupRecommendation.js":"91","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\AskQuestion.js":"92","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\LookUp.js":"93","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\getRecommenderAnnotations.js":"94","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarLoader.js":"95","C:\\xampp\\htdocs\\Semantically-old\\src\\index.js":"96","C:\\xampp\\htdocs\\Semantically-old\\src\\reportWebVitals.js":"97","C:\\xampp\\htdocs\\Semantically-old\\src\\App.js":"98","C:\\xampp\\htdocs\\Semantically-old\\src\\components\\Alert.js":"99","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\editor.js":"100","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\logout.js":"101","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\login.js":"102","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\dashboard.js":"103","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\survey.js":"104","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\forum.js":"105","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\post.js":"106","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\register.js":"107","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\hooks\\authenticate.js":"108","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\account\\account.js":"109","C:\\xampp\\htdocs\\Semantically-old\\src\\components\\Sidebar.js":"110","C:\\xampp\\htdocs\\Semantically-old\\src\\appInfo.js":"111","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\components\\modals\\NewDocumentModal.js":"112","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\components\\DocumentCard.js":"113","C:\\xampp\\htdocs\\Semantically-old\\src\\alertMessages.js":"114","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\EditorSidebar.js":"115","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\components\\ForumCard.js":"116","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\hooks\\dashboardAPIs.js":"117","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\editorsHelper.js":"118","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\hooks\\postAPI.js":"119","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\components\\modals\\DeleteDocumentModal.js":"120","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\publish.js":"121","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\editor\\DocumentEditor.js":"122","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\components\\models\\DeletePostModel.js":"123","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\Sidebar.js":"124","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\editor\\documentAPI.js":"125","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\getTermString.js":"126","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\editor\\getAnnotationSelection.js":"127","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\downloadAnnotations.js":"128","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarBody.js":"129","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarHeader.js":"130","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\editor\\Highlights.js":"131","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\RemoveAnnotationsModal.js":"132","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\sortKeys.js":"133","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\getDefinition.js":"134","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarAccordion.js":"135","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\ManualOntologySelector.js":"136","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\editor\\getRemovedHighlights.js":"137","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\PopupRecommendation.js":"138","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\AskQuestion.js":"139","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\LookUp.js":"140","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\Personalize.js":"141","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarLoader.js":"142","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\getRecommenderAnnotations.js":"143"},{"size":584,"mtime":1693236726810,"results":"144","hashOfConfig":"145"},{"size":1788,"mtime":1696176700638,"results":"146","hashOfConfig":"145"},{"size":362,"mtime":1693236726854,"results":"147","hashOfConfig":"145"},{"size":510,"mtime":1693236726923,"results":"148","hashOfConfig":"145"},{"size":2166,"mtime":1693236727350,"results":"149","hashOfConfig":"145"},{"size":1944,"mtime":1693236727758,"results":"150","hashOfConfig":"145"},{"size":1195,"mtime":1693236727258,"results":"151","hashOfConfig":"145"},{"size":343,"mtime":1693236727116,"results":"152","hashOfConfig":"145"},{"size":14380,"mtime":1696176376871,"results":"153","hashOfConfig":"145"},{"size":1496,"mtime":1693236727073,"results":"154","hashOfConfig":"145"},{"size":2835,"mtime":1693236727207,"results":"155","hashOfConfig":"145"},{"size":437,"mtime":1693236727023,"results":"156","hashOfConfig":"145"},{"size":1393,"mtime":1693236727164,"results":"157","hashOfConfig":"145"},{"size":10475,"mtime":1696176708090,"results":"158","hashOfConfig":"145"},{"size":981,"mtime":1693236726972,"results":"159","hashOfConfig":"145"},{"size":319,"mtime":1693236726603,"results":"160","hashOfConfig":"145"},{"size":2070,"mtime":1693370267774,"results":"161","hashOfConfig":"145"},{"size":1209,"mtime":1693236727401,"results":"162","hashOfConfig":"145"},{"size":2833,"mtime":1693236727537,"results":"163","hashOfConfig":"145"},{"size":817,"mtime":1693236727584,"results":"164","hashOfConfig":"145"},{"size":3554,"mtime":1693236728077,"results":"165","hashOfConfig":"145"},{"size":2062,"mtime":1693236729458,"results":"166","hashOfConfig":"145"},{"size":3336,"mtime":1693370067423,"results":"167","hashOfConfig":"145"},{"size":766,"mtime":1693236727846,"results":"168","hashOfConfig":"145"},{"size":1136,"mtime":1693236727492,"results":"169","hashOfConfig":"145"},{"size":1150,"mtime":1693236728131,"results":"170","hashOfConfig":"145"},{"size":761,"mtime":1693236728380,"results":"171","hashOfConfig":"145"},{"size":3728,"mtime":1693236728176,"results":"172","hashOfConfig":"145"},{"size":1489,"mtime":1693236729553,"results":"173","hashOfConfig":"145"},{"size":658,"mtime":1693236728748,"results":"174","hashOfConfig":"145"},{"size":280,"mtime":1693236728937,"results":"175","hashOfConfig":"145"},{"size":3640,"mtime":1693236728705,"results":"176","hashOfConfig":"145"},{"size":3447,"mtime":1693236728647,"results":"177","hashOfConfig":"145"},{"size":3681,"mtime":1693236728520,"results":"178","hashOfConfig":"145"},{"size":993,"mtime":1693236728471,"results":"179","hashOfConfig":"145"},{"size":2592,"mtime":1693236728229,"results":"180","hashOfConfig":"145"},{"size":1061,"mtime":1693236728324,"results":"181","hashOfConfig":"145"},{"size":550,"mtime":1693236728970,"results":"182","hashOfConfig":"145"},{"size":451,"mtime":1693236728845,"results":"183","hashOfConfig":"145"},{"size":2763,"mtime":1693236728280,"results":"184","hashOfConfig":"145"},{"size":13231,"mtime":1693236728426,"results":"185","hashOfConfig":"145"},{"size":202,"mtime":1693236728799,"results":"186","hashOfConfig":"145"},{"size":198,"mtime":1693236728561,"results":"187","hashOfConfig":"145"},{"size":2848,"mtime":1693236728897,"results":"188","hashOfConfig":"145"},{"size":3188,"mtime":1693236727941,"results":"189","hashOfConfig":"145"},{"size":4457,"mtime":1693236727800,"results":"190","hashOfConfig":"145"},{"size":6352,"mtime":1693236727894,"results":"191","hashOfConfig":"145"},{"size":9898,"mtime":1693236727992,"results":"192","hashOfConfig":"145"},{"size":584,"mtime":1693236726810,"results":"193","hashOfConfig":"194"},{"size":362,"mtime":1693236726854,"results":"195","hashOfConfig":"194"},{"size":1788,"mtime":1696176700638,"results":"196","hashOfConfig":"194"},{"size":1944,"mtime":1693236727758,"results":"197","hashOfConfig":"194"},{"size":510,"mtime":1693236726923,"results":"198","hashOfConfig":"194"},{"size":10799,"mtime":1700095540019,"results":"199","hashOfConfig":"194"},{"size":343,"mtime":1693236727116,"results":"200","hashOfConfig":"194"},{"size":1496,"mtime":1693236727073,"results":"201","hashOfConfig":"194"},{"size":2835,"mtime":1693236727207,"results":"202","hashOfConfig":"194"},{"size":18092,"mtime":1701099587844,"results":"203","hashOfConfig":"194"},{"size":2166,"mtime":1693236727350,"results":"204","hashOfConfig":"194"},{"size":1195,"mtime":1693236727258,"results":"205","hashOfConfig":"194"},{"size":437,"mtime":1693236727023,"results":"206","hashOfConfig":"194"},{"size":1393,"mtime":1693236727164,"results":"207","hashOfConfig":"194"},{"size":981,"mtime":1693236726972,"results":"208","hashOfConfig":"194"},{"size":2164,"mtime":1700109929390,"results":"209","hashOfConfig":"194"},{"size":2062,"mtime":1693236729458,"results":"210","hashOfConfig":"194"},{"size":3554,"mtime":1693236728077,"results":"211","hashOfConfig":"194"},{"size":766,"mtime":1693236727846,"results":"212","hashOfConfig":"194"},{"size":3488,"mtime":1700110146108,"results":"213","hashOfConfig":"194"},{"size":319,"mtime":1693236726603,"results":"214","hashOfConfig":"194"},{"size":1209,"mtime":1693236727401,"results":"215","hashOfConfig":"194"},{"size":2833,"mtime":1693236727537,"results":"216","hashOfConfig":"194"},{"size":817,"mtime":1693236727584,"results":"217","hashOfConfig":"194"},{"size":1150,"mtime":1693236728131,"results":"218","hashOfConfig":"194"},{"size":1489,"mtime":1693236729553,"results":"219","hashOfConfig":"194"},{"size":761,"mtime":1693236728380,"results":"220","hashOfConfig":"194"},{"size":3728,"mtime":1693236728176,"results":"221","hashOfConfig":"194"},{"size":1136,"mtime":1693236727492,"results":"222","hashOfConfig":"194"},{"size":3640,"mtime":1693236728705,"results":"223","hashOfConfig":"194"},{"size":280,"mtime":1693236728937,"results":"224","hashOfConfig":"194"},{"size":658,"mtime":1693236728748,"results":"225","hashOfConfig":"194"},{"size":3447,"mtime":1693236728647,"results":"226","hashOfConfig":"194"},{"size":2592,"mtime":1693236728229,"results":"227","hashOfConfig":"194"},{"size":1061,"mtime":1693236728324,"results":"228","hashOfConfig":"194"},{"size":993,"mtime":1693236728471,"results":"229","hashOfConfig":"194"},{"size":3681,"mtime":1693236728520,"results":"230","hashOfConfig":"194"},{"size":550,"mtime":1693236728970,"results":"231","hashOfConfig":"194"},{"size":202,"mtime":1693236728799,"results":"232","hashOfConfig":"194"},{"size":451,"mtime":1693236728845,"results":"233","hashOfConfig":"194"},{"size":13231,"mtime":1693236728426,"results":"234","hashOfConfig":"194"},{"size":2763,"mtime":1693236728280,"results":"235","hashOfConfig":"194"},{"size":9898,"mtime":1693236727992,"results":"236","hashOfConfig":"194"},{"size":4457,"mtime":1693236727800,"results":"237","hashOfConfig":"194"},{"size":6352,"mtime":1693236727894,"results":"238","hashOfConfig":"194"},{"size":2848,"mtime":1693236728897,"results":"239","hashOfConfig":"194"},{"size":198,"mtime":1693236728561,"results":"240","hashOfConfig":"194"},{"size":584,"mtime":1693236726810,"results":"241","hashOfConfig":"242"},{"size":362,"mtime":1693236726854,"results":"243","hashOfConfig":"242"},{"size":1788,"mtime":1696176700638,"results":"244","hashOfConfig":"242"},{"size":510,"mtime":1693236726923,"results":"245","hashOfConfig":"242"},{"size":1944,"mtime":1693236727758,"results":"246","hashOfConfig":"242"},{"size":343,"mtime":1693236727116,"results":"247","hashOfConfig":"242"},{"size":1496,"mtime":1693236727073,"results":"248","hashOfConfig":"242"},{"size":2166,"mtime":1693236727350,"results":"249","hashOfConfig":"242"},{"size":2835,"mtime":1693236727207,"results":"250","hashOfConfig":"242"},{"size":18116,"mtime":1701921329021,"results":"251","hashOfConfig":"242"},{"size":10799,"mtime":1700095540019,"results":"252","hashOfConfig":"242"},{"size":1393,"mtime":1693236727164,"results":"253","hashOfConfig":"242"},{"size":1195,"mtime":1693236727258,"results":"254","hashOfConfig":"242"},{"size":437,"mtime":1693236727023,"results":"255","hashOfConfig":"242"},{"size":981,"mtime":1693236726972,"results":"256","hashOfConfig":"242"},{"size":2164,"mtime":1700109929390,"results":"257","hashOfConfig":"242"},{"size":2924,"mtime":1701921329013,"results":"258","hashOfConfig":"242"},{"size":1209,"mtime":1693236727401,"results":"259","hashOfConfig":"242"},{"size":319,"mtime":1693236726603,"results":"260","hashOfConfig":"242"},{"size":766,"mtime":1693236727846,"results":"261","hashOfConfig":"242"},{"size":2062,"mtime":1693236729458,"results":"262","hashOfConfig":"242"},{"size":817,"mtime":1693236727584,"results":"263","hashOfConfig":"242"},{"size":3554,"mtime":1693236728077,"results":"264","hashOfConfig":"242"},{"size":3638,"mtime":1701921329023,"results":"265","hashOfConfig":"242"},{"size":1136,"mtime":1693236727492,"results":"266","hashOfConfig":"242"},{"size":1150,"mtime":1693236728131,"results":"267","hashOfConfig":"242"},{"size":3849,"mtime":1701921329018,"results":"268","hashOfConfig":"242"},{"size":1489,"mtime":1701921329020,"results":"269","hashOfConfig":"242"},{"size":761,"mtime":1693236728380,"results":"270","hashOfConfig":"242"},{"size":3640,"mtime":1693236728705,"results":"271","hashOfConfig":"242"},{"size":280,"mtime":1693236728937,"results":"272","hashOfConfig":"242"},{"size":658,"mtime":1693236728748,"results":"273","hashOfConfig":"242"},{"size":3447,"mtime":1693236728647,"results":"274","hashOfConfig":"242"},{"size":993,"mtime":1693236728471,"results":"275","hashOfConfig":"242"},{"size":3681,"mtime":1693236728520,"results":"276","hashOfConfig":"242"},{"size":2592,"mtime":1693236728229,"results":"277","hashOfConfig":"242"},{"size":1061,"mtime":1693236728324,"results":"278","hashOfConfig":"242"},{"size":550,"mtime":1693236728970,"results":"279","hashOfConfig":"242"},{"size":451,"mtime":1693236728845,"results":"280","hashOfConfig":"242"},{"size":13231,"mtime":1693236728426,"results":"281","hashOfConfig":"242"},{"size":2763,"mtime":1693236728280,"results":"282","hashOfConfig":"242"},{"size":202,"mtime":1693236728799,"results":"283","hashOfConfig":"242"},{"size":9898,"mtime":1693236727992,"results":"284","hashOfConfig":"242"},{"size":4578,"mtime":1701921329015,"results":"285","hashOfConfig":"242"},{"size":6552,"mtime":1701921329016,"results":"286","hashOfConfig":"242"},{"size":3583,"mtime":1696183951266,"results":"287","hashOfConfig":"242"},{"size":198,"mtime":1693236728561,"results":"288","hashOfConfig":"242"},{"size":2848,"mtime":1693236728897,"results":"289","hashOfConfig":"242"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},"zoq6z7",{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"292"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"292"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"292"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"292"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"292"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"292"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"292"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"292"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"292"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"292"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"292"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"292"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"292"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"292"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"292"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"292"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"292"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"292"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"292"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"292"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"292"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"292"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"292"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"292"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"292"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"410","usedDeprecatedRules":"292"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"292"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},"igz8uq",{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"416"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"416"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"416"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"416"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"416"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"416"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"416"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"416"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"416"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"416"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"416"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"416"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"416"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"416"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"416"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"416"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"416"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"416"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"416"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"416"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"416"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"416"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"416"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"416"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"416"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"410","usedDeprecatedRules":"416"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"416"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},"13v20fn",{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"514"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"514"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"514"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"514"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"514"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"514"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"514"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"514"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"514"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"514"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"514"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"514"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"514"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"514"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"514"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"514"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"514"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"514"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"514"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"514"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"514"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"514"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"606"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"514"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"514"},"C:\\xampp\\htdocs\\Semantically-master\\src\\index.js",[],["614","615"],"C:\\xampp\\htdocs\\Semantically-master\\src\\App.js",["616","617"],"C:\\xampp\\htdocs\\Semantically-master\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\components\\Alert.js",["618"],"import React, {useState} from 'react';\nimport {Alert} from 'react-bootstrap';\n\nconst AlertMessage = ({alert, setAlert}) => {\n  const [show, setShow] = useState(true);\n  const close = () => {\n    setShow(false);\n    setAlert({});\n  }\n  const {header, message, type} = alert;\n\n  return (\n    <Alert className=\"container my-2\" variant={type ? type : 'warning'} onClose={close} dismissible>\n        <Alert.Heading>{header}</Alert.Heading>\n        <p>{message}</p>\n    </Alert>\n  )\n};\n\nexport default AlertMessage;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\dashboard.js",["619"],"import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport './dashboard.css';\nimport Sidebar from '../../components/Sidebar';\nimport DocumentCard from './components/DocumentCard';\nimport NewDocumentModal from './components/modals/NewDocumentModal';\nimport {Button} from 'react-bootstrap';\n\nimport {getDocuments} from './hooks/dashboardAPIs';\n\nconst Dashboard = ({loggedIn}) => {\n  const [showNewDocModal, updateShowNewDocModal] = useState(false);\n  const [documents, updateDocuments] = useState([]);\n  const newDocModalProps = {\n    updateShowNewDocModal: updateShowNewDocModal\n  };\n\n  const docCardProps = {\n    documents: documents,\n    updateDocuments: updateDocuments\n  };\n  //////////////////// for Wilson algorithm testing\n  var stats  = require('simple-statistics');\n  const lower_bound = (upvotes,n,confidence) => {\n    // var upvotes=9;\n    // var n=18;\n    // var confidence=0.95;\n    // for performance purposes you might consider memoize the calcuation for z\n    const z = stats.probit(1-(1-confidence)/2);\n  \n    // p̂, the fraction of upvotes\n    const phat = 1.0 * upvotes / n;\n  \n    const result=(phat + z*z / (2*n) - z * Math.sqrt((phat * (1 - phat) + z*z / (4*n)) / n)) / (1 + z*z/n);\n    //console.log(\"results\",(result*100),\"%\");\n    //console.log(\"results\",result.toFixed(3)*100,\"%\");\n    console.log(\"results\",result);\n  }\n\n  ////////////////////////End\n\n  // fetch user documents\n  useEffect(() => getDocuments(updateDocuments), []);\n\n  useEffect(()=>lower_bound(4,4,0.95),[]);\n\n  return (\n    <>\n      {!loggedIn ?\n        <Redirect to=\"/login\" />:\n        <div className=\"app\">\n          <Sidebar />\n          <div id=\"home-panel\">\n            <header>\n              <Button variant=\"light\" size=\"lg\"\n                onClick={() => updateShowNewDocModal(true)}>New Document</Button>\n            </header>\n            <main>\n              {documents.map(document => <DocumentCard {...document} {...docCardProps} />)}\n            </main>\n          </div>\n          {showNewDocModal ? <NewDocumentModal {...newDocModalProps} /> : null}\n        </div>\n      }\n    </>\n  );\n}\n\nexport default Dashboard;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\editor.js",["620"],"import \"./editor.css\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport EditorSidebar from \"./components/EditorSidebar\";\nimport EditorHelper from \"./components/editorsHelper\";\n\nconst Editor = () => {\n  const { documentId } = useParams();\n  // const documentId = '2';\n  console.log(documentId);\n\n  const [content, updateContent] = useState(\"\");\n  const [editor, updateEditor] = useState(null);\n  const [annotations, updateAnnotations] = useState({});\n  const [definitions, updateDefinitions] = useState({});\n  const [highlights, updateHighlights] = useState({});\n  const [currentHighlight, setCurrentHighlight] = useState(\"\");\n  const [removedHighlights, updateRemovedHighlights] = useState([]);\n  const [annotationSelection, updateAnnotationSelection] = useState({});\n\n  const [showAccordion, updateShowAccordion] = useState(false);\n  const [loadHighlights, updateLoadHighlights] = useState(false);\n\n  const editorProps = {\n    documentId: documentId,\n    content: content,\n    updateContent: updateContent,\n    editor: editor,\n    updateEditor: updateEditor,\n    annotations: annotations,\n    updateAnnotations: updateAnnotations,\n    definitions: definitions,\n    updateDefinitions: updateDefinitions,\n    highlights: highlights,\n    updateHighlights: updateHighlights,\n    currentHighlight: currentHighlight,\n    setCurrentHighlight: setCurrentHighlight,\n    removedHighlights: removedHighlights,\n    updateRemovedHighlights: updateRemovedHighlights,\n    annotationSelection: annotationSelection,\n    updateAnnotationSelection: updateAnnotationSelection,\n    showAccordion: showAccordion,\n    updateShowAccordion: updateShowAccordion,\n    loadHighlights: loadHighlights,\n    updateLoadHighlights: updateLoadHighlights,\n  };\n  \n  return (\n    <div className=\"d-flex flex-row\">\n      <EditorSidebar />\n      <EditorHelper {...editorProps} />\n    </div>\n  );\n};\n\nexport default Editor;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\hooks\\authenticate.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\logout.js",["621","622"],"import React, {useEffect} from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport {Redirect} from 'react-router-dom';\nimport {logout} from './hooks/authenticate';\n\nexport default function Logout({loggedIn, setLoggedIn}) {\n  useEffect(() => logout(setLoggedIn), []);\n  return <>{loggedIn ? null : <Redirect to=\"/login\" />}</>\n};\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\forum.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640"],"import React, {useEffect, useState} from 'react';\nimport './forum.css';\nimport Sidebar from '../../components/Sidebar';\nimport ForumCard from './components/ForumCard';\nimport {Button, Tabs, Tab, Dropdown, DropdownButton} from 'react-bootstrap';\nimport TextField from \"@mui/material/TextField\";\nimport {getPosts, getAllPosts, getDirectPosts, getUserReplies, getTermResults, getOntology} from './hooks/postAPI';\nimport { Graph } from \"react-d3-graph\";\nimport {Link} from \"react-router-dom\";\nimport * as d3 from \"d3\"\n\n\nconst Forum = () => {\n  const [key, setKey] = useState('home');\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [directPosts, setDirectPosts] = useState([]);\n  const [searchForUser, setSearchUser] = useState(false);\n  const [searchMedicalTerm, setSearchMedicalTerm] = useState(false)\n  const [term, setTerm] = useState(false)\n  const [terminologyResults, setTerminologyResults] = useState([])\n  const [inputData, setInputData] = useState(\"\");\n  const [replies, setReplies] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [searchOntology, setSearchOntology] = useState([]);\n  const [title, setTitle] = useState(false)\n  const [ontology, setOntology] = useState(false)\n  const [ontologyResults, setOntologyResults] = useState([])\n    const[nodeArray, setNodeArray] = useState([]);\n    const[linkArray, setLinkArray] = useState([]);\n  let inputHandler = (e) => {\n\n    setInputData(e.target.value)\n  }\n\n  \n\n// add by asim for post deletion\nconst postCardProps = {\n  allPosts: allPosts,\n  setAllPosts: setAllPosts,\n  posts: posts,\n  //replies: replies,\n  setPosts:setPosts,\n  directPosts: directPosts,\n  setDirectPosts: setDirectPosts\n};\nconst resetGraph = () => {\n  setNodeArray([])\n  setLinkArray([])\n  setReplies([])\n  \n  setTitle(false)\n}\nconst searchInput = (a) => {\n  resetGraph()\n  d3.selectAll(\"svg\").remove()\n  if(searchForUser) { \n  \n  setTitle(true)\n  console.log(\"Before flush\",nodeArray)\n  \n  console.log(\"After flush\",nodeArray)\n  var name = a;\n  setName(a)\n  const myName = name.split(\" \");\n  console.log(myName[0],myName[1])\n  getUserReplies(myName[0], myName[1], replies => {\n    console.log(\"Retrieval of data successful\");\n    setReplies(replies);\n    console.log(replies[0].first_name)\n    console.log(replies)\n    setName(replies[0].first_name+\" \"+replies[0].last_name)\n    \n    nodeArray.push({id: name, color: \"purple\"})\n  \n  {replies.map((val)=> {\n    if(!nodeArray.find(n => n.id === val.reply_content)){\n    nodeArray.push({id: val.reply_content, group: 1})\n    }\n    if(!nodeArray.find(n => n.id === val.ontology)){\n      nodeArray.push({id: val.ontology, group: 2})\n    }\n    if(!nodeArray.find(n => n.id === val.profile_rank)){\n    nodeArray.push({id: val.profile_rank, group: 3})\n    }\n    if(!(val.vote_up == null)){\n      if(!nodeArray.find(n => n.id === val.vote_up)){\n      nodeArray.push({id: val.vote_up, group: 4})\n      \n      }\n      linkArray.push({source: val.vote_up, target: val.reply_content, value: 10, distance: 100})\n      \n      \n    }\n    if(!(val.vote_down == null)){\n      if(!nodeArray.find(n => n.id === val.vote_down)){\n      nodeArray.push({id: val.vote_down, group: 4})\n      \n      }\n      linkArray.push({source: val.vote_down, target: val.reply_content, value: 10, distance: 100})\n      \n      \n    }\n    \n     \n\n    linkArray.push({source: val.profile_rank, target: name, value: 10, distance: 100})\n\n    \n    linkArray.push({source: val.ontology, target: name, value: 10, distance: 100})\n    \n    \n    \n    \n    \n\n    linkArray.push({source: val.reply_content, target: val.ontology, value: 10, distance: 100});\n    \n   \n    \n    \n   console.log(nodeArray)    \n   console.log(linkArray)  \n  }\n  \n  )\n  \n  }\n  Chart(data, replies)\n  \n  });\n  \n}\nif(searchMedicalTerm){\n  resetGraph()\n  d3.selectAll(\"svg\").remove()\n  setTitle(true)\nconsole.log(\"Before flush\",nodeArray)\n\nconsole.log(\"After flush\",nodeArray)\nvar term = a;\nsetTerm(term)\ngetTermResults(term, terminology =>\n  {\n    console.log(\"Retrieval of data successful\", terminology);\n     setTerminologyResults(terminology)\n     console.log(terminologyResults)\n     nodeArray.push({id: term, group:5})\n     {terminology.map((val) => {\n      console.log(\"Start insertion\")\n      \n      if(!nodeArray.find(n => n.id === val.curr_ontology)){\n        nodeArray.push({id: val.curr_ontology, group: 1})\n      }\n      \n      nodeArray.push({id: val.post_content, group: 2})\n      \n      linkArray.push({source: val.curr_ontology, target: term, value: 10, distance: 100})\n      linkArray.push({source: val.post_content, target: val.curr_ontology, value: 10, distance: 100})\n      \n     \n     }\n      )\n     \n     }\n     Chart(data,terminologyResults)\n  });\n  \n  \n}\n  //setNodeArray({id:a, color: \"red\"})\n  //displayGraph();\n  if(searchOntology){\n    \n    setTitle(true)\n  console.log(\"Before flush\",nodeArray)\n  \n  console.log(\"After flush\",nodeArray)\n  var ontology_term = a;\n  setOntology(ontology_term)\n  getOntology(ontology_term, ontology_result =>\n    {\n      console.log(\"Retrieval of data successful\", ontology_result);\n       setOntologyResults(ontology_result)\n       console.log(ontologyResults)\n       nodeArray.push({id: ontology_term, group:5})\n       {ontology_result.map((val) => {\n        console.log(\"Start insertion\")\n        if(!nodeArray.find(n => n.id === val.terminology)){\n        nodeArray.push({id: val.terminology,  group: 1})\n        }\n        nodeArray.push({id: val.post_content, group: 2})\n        \n        linkArray.push({source: val.terminology, target: ontology_term, value: 10, distance: 100})\n        linkArray.push({source: val.post_content, target: val.terminology, value: 10, distance: 100})\n        \n       \n       }\n        )\n       \n       }\n       Chart(data, ontologyResults)\n    });\n    \n    \n  }\n}\n\n\nconst data = {\n  \n  nodes: nodeArray,\n  links: linkArray,\n};\n\nconst openUserSearchBar = () => {\n     setSearchMedicalTerm(false)\n     setSearchOntology(false)\n     setSearchUser(true)\n}\nconst openMedicalTerm = () => {\n     setSearchUser(false)\n     setSearchOntology(false)\n     setSearchMedicalTerm(true)\n}\nconst openOntologySearchBar = () => {\n  setSearchOntology(true)\n  setSearchMedicalTerm(false)\n  setSearchUser(false)\n}\nfunction redirectToPost (e, f){\nconsole.log(e[0].id)\nvar nodeData = e[0].id;\nf.map((val) => {\n if(val.reply_content == nodeData)\n    window.open(\"http://localhost:3000/post/\"+val.post_id)\n    if(val.terminology == nodeData)\n    window.open(\"http://localhost:3000/post/\"+val.post_id)\n    if(val.cur_ontology == nodeData)\n    window.open(\"http://localhost:3000/post/\"+val.post_id)\n})\n \n\n}\n//------------------------------------------------------------------//\n//Graph Generation code\nconst Chart = (data, replyData) => {\n    \n  // Specify the dimensions of the chart.\n  const width = 928;\n  const height = 600;\n\n  // Specify the color scale.\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  // The force simulation mutates links and nodes, so create a copy\n  // so that re-evaluating this cell produces the same result.\n  const links = data.links.map(d => ({...d}));\n  const nodes = data.nodes.map(d => ({...d}));\n  console.log(\"Links\",links)\n  console.log(\"Nodes\",nodes)\n  // Create a simulation with several forces.\n  const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(links).distance(linkDistance).id(d => d.id))\n      .force(\"charge\", d3.forceManyBody())\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      \n      .on(\"tick\", ticked);\n\n  // Create the SVG container.\n  const svg = d3.create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height])\n      .attr(\"style\", \"max-width: 100%; height: auto;\");\n\n  // Add a line for each link, and a circle for each node.\n  const link = svg.append(\"g\")\n      .attr(\"stroke\", \"#999\")\n      .attr(\"stroke-opacity\", 0.6)\n    .selectAll()\n    .data(links)\n    .join(\"line\")\n      .attr(\"stroke-width\", d => Math.sqrt(d.value))\n      .attr(\"stroke-length\", 100);\n\n  const node = svg.append(\"g\")\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1.5)\n    .selectAll()\n    .data(nodes)\n    .join(\"circle\")\n      .attr(\"r\", 20)\n      .attr(\"fill\", d => color(d.group))\n    .on(\"click\",function(d){\n      console.log(\"Clicked\",replyData)\n      \n      var data = d3.select(this).data()\n      \n      redirectToPost(data, replyData)\n        \n         \n      \n       \n      \n      \n      \n    });\n\n\n  node.append(\"title\")\n      .text(d => d.id);\n      \n      var label = svg.selectAll(\".mytext\")\n      .data(nodes)\n      .enter()\n      .append(\"text\")\n        .text(function (d) { return d.id; })\n        .style(\"text-anchor\", \"middle\")\n        .style(\"fill\", \"#000\")\n        .style(\"font-family\", \"Arial\")\n        .style(\"font-size\", 12);\n   /*\n  const text = node.append(\"text\")\n  .text(function(d) { return d.id; });\n*/\n  // Add a drag behavior.\n  node.call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n  \n        \n  // Set the position attributes of links and nodes each time the simulation ticks.\n  function ticked() {\n    link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n\n    node\n        .attr(\"cx\", d => d.x)\n        .attr(\"cy\", d => d.y);\n    label\n        .attr(\"x\", function(d){ return d.x; })\n        .attr(\"y\", function (d) {return d.y - 10; });\n  }\n  function linkDistance(d) {\n    return d.distance;\n  }\n\n  // Reheat the simulation when drag starts, and fix the subject position.\n  function dragstarted(event) {\n    if (!event.active) simulation.alphaTarget(0.3).restart();\n    event.subject.fx = event.subject.x;\n    event.subject.fy = event.subject.y;\n  }\n\n  // Update the subject (dragged node) position during drag.\n  function dragged(event) {\n    event.subject.fx = event.x;\n    event.subject.fy = event.y;\n  }\n\n  // Restore the target alpha so the simulation cools after dragging ends.\n  // Unfix the subject position now that it’s no longer being dragged.\n  function dragended(event) {\n    if (!event.active) simulation.alphaTarget(0);\n    event.subject.fx = null;\n    event.subject.fy = null;\n  }\n\n  // When this cell is re-run, stop the previous simulation. (This doesn’t\n  // really matter since the target alpha is zero and the simulation will\n  // stop naturally, but it’s a good practice.)\n  \n  console.log(svg.node())\n  d3.select('#graph').append(()=>svg.node());\n  return svg.node();\n};\n\n\n\nconst [del, setDelete] = useState(false);\n\n  // fetch posts\n  useEffect(() => getPosts(posts => {\n    // sort posts\n    posts.sort((post1, post2) => post2.responses - post1.responses);\n    setPosts(posts);\n  }), []);\n  useEffect(() => getAllPosts(posts => setAllPosts(posts)), []);\n  useEffect(() => getDirectPosts(posts => setDirectPosts(posts)), []);\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <div id=\"home-panel\">\n        <header>\n          <Button variant=\"light\" size=\"lg\" disabled>Ask Question</Button>\n        </header>\n        <main className=\"d-flex flex-column\">\n        <Tabs\n          id=\"controlled-tab-example\"\n          activeKey={key}\n          onSelect={(k) => setKey(k)}>\n          <Tab eventKey=\"home\" title=\"My Questions\">\n            <div className=\"py-4\">\n            {posts.map(post => <ForumCard {...post} publicPost={false} {...postCardProps}/>)}\n            </div>\n          </Tab>\n          <Tab eventKey=\"public\" title=\"Public\">\n            <div className=\"py-4\">\n              {allPosts.map(post => <ForumCard {...post} publicPost={true} {...postCardProps}/>)}\n            </div>\n          </Tab>\n          <Tab eventKey=\"direct_questions\" title=\"Direct Questions\">\n            <div className=\"py-4\">\n              {directPosts.map(post => <ForumCard {...post} publicPost={false} {...postCardProps}/>)}\n            </div> \n          </Tab>\n          \n          <Tab eventKey=\"knowledge_graph\" title=\"Knowledge Graph\">\n          <div class=\"jumbotron bg-dark text-white\">\n          <h1> Knowledge Graph </h1>\n          </div>\n        <p> Choose what to search for and input to the search bar for results</p>\n         <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Search type\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => openUserSearchBar()}> User </Dropdown.Item>\n        <Dropdown.Item onClick={() => openMedicalTerm()}> Medical term </Dropdown.Item>\n        <Dropdown.Item onClick={() => openOntologySearchBar()}> Ontology </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n\n          {searchForUser ?\n          (\n\n            <div className=\"py-4\">\n              <h2> Search for a user</h2>\n            <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          onChange={inputHandler}\n          label=\"Search for an expert\"\n        />\n        <Button onClick={() => searchInput(inputData)}> Search </Button>\n        </div>\n          ):null}\n          {searchMedicalTerm ?\n          (\n            <div className=\"py-4\">\n              <h2> Search for a medical term</h2>\n            <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          onChange={inputHandler}\n          label=\"Search for a medical term\"\n        />\n        <Button onClick={() => searchInput(inputData)}> Search </Button>\n        </div>\n          ):null}\n\n{searchOntology ?\n          (\n\n            <div className=\"py-4\">\n              <h2> Search for an ontology</h2>\n            <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          onChange={inputHandler}\n          label=\"Search for an ontology\"\n        />\n        <Button onClick={() => searchInput(inputData)}> Search </Button>\n        </div>\n          ):null}\n            <div className=\"py-4\">\n            \n        \n            \n            \n           \n            {title ? (\n              \n                 <h2> Search results for: {name} </h2>\n            ) :null}\n       <div id=\"graph\">\n\n       </div>\n       {replies.map((val) =>{\n        <li> {val.post_reply_id}</li>\n       })}\n            \n  \n                  \n              </div>\n\n\n            </Tab>\n            \n        </Tabs>\n\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Forum;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\login.js",["641","642","643","644"],"import React, {useState} from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport {Redirect, Link} from 'react-router-dom';\nimport {login} from './hooks/authenticate';\nimport {Col,Row, Image, Card} from \"react-bootstrap\";\n\n\nexport default function Login({loggedIn, setLoggedIn, setAlert}) {\n  return (\n    <>\n   \n    \n      {\n        loggedIn ?\n        <Redirect to=\"/\" /> :\n        <div className=\"text-center\">\n           <div class=\"card container w-25 text-center py-3 mt-5\">\n           <Image width=\"300\" src=\"logo.png\" style={{marginTop:'0px', marginBottom:'0px'}} />\n           </div>\n           \n          <div class=\"card container w-25 text-center py-3 mt-5\">\n            <div class=\"card-body\">\n            {/* Google authentication */}\n            <GoogleLogin\n              clientId=\"747358695027-vehsgoqad55lbl5jmdfbef9qm6ff4v7i.apps.googleusercontent.com\"\n              buttonText={\"Sign in\"}\n              onSuccess={(data) => {\n                console.log(data);\n                console.log(data['profile_rank']);\n                const email = data.profileObj.email;\n                const googleId = data.profileObj.googleId;\n                login(email, googleId, setLoggedIn, setAlert);\n              }}\n              onFailure={null}\n              isSignedIn={loggedIn}\n              />\n            </div>\n          </div>\n          <p className=\"text-muted mt-2\">Not registered? <Link to=\"/register\">click here!</Link></p>\n        </div>\n      }\n    </>\n  );\n}\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\survey.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\account\\account.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\authentication\\register.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\post.js",["645","646","647","648","649","650","651","652"],"C:\\xampp\\htdocs\\Semantically-master\\src\\components\\Sidebar.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\alertMessages.js",["653"],"export default {\n  unregisteredLogin: {\n    header: 'Unregistered User',\n    message: 'Please register before attempting to login.',\n    type: 'warning'\n  },\n  alreadyRegistered: {\n    header: 'Already Registered',\n    message: 'You have already registered for an account using this email.',\n    type: 'warning'\n  }\n};\n","C:\\xampp\\htdocs\\Semantically-master\\src\\appInfo.js",["654"],"import { getTermResults } from \"./pages/forum/hooks/postAPI\";\n\n// const apiAddress = 'https://api.gosemantically.com';\nconst apiAddress = \"http://localhost:8080/Semantically-master/api\";\n\nconst apiAddresses = {\n  checkLoggedIn: `${apiAddress}/authentication/loggedin.php`,\n  login: `${apiAddress}/authentication/login.php`,\n  logout: `${apiAddress}/authentication/logout.php`,\n  register: `${apiAddress}/authentication/register.php`,\n  createDocument: `${apiAddress}/document/create_document.php`,\n  deleteDocument: `${apiAddress}/document/delete_document.php`,\n  getDocuments: `${apiAddress}/document/get_documents.php`,\n  readDocument: `${apiAddress}/document/read_document.php`,\n  editDocument: `${apiAddress}/document/edit_document.php`,\n  createPost: `${apiAddress}/post/create_post.php`,\n  createDirectPost: `${apiAddress}/post/create_direct_post.php`,\n  getDirectPosts: `${apiAddress}/post/get_direct_posts.php`,\n  readPost: `${apiAddress}/post/read_post.php`,\n  replyPost: `${apiAddress}/post/reply_post.php`,\n  getPosts: `${apiAddress}/post/get_posts.php`,\n  getAllPosts: `${apiAddress}/post/get_all_posts.php`,\n  storeAnnotations: `${apiAddress}/document/store_annotations.php`,\n  deleteAllAnnotations: `${apiAddress}/document/delete_all_annotations.php`,\n  changeOntologySelection: `${apiAddress}/document/change_ontology_selection.php`,\n  changeDeleteAnnotation: `${apiAddress}/document/change_delete_annotation.php`,\n  getAnnotations: `${apiAddress}/document/get_annotations.php`,\n  checkRecommendation: `${apiAddress}/post/check_recommendation.php`,\n  recommendationFlag: `${apiAddress}/post/recommendation_flag.php`,\n  postVoting: `${apiAddress}/post/post_voting.php`,\n  deletePost: `${apiAddress}/post/delete_post.php`,\n  getUser_ID: `${apiAddress}/post/get_ID.php`,\n  getUserReplies: `${apiAddress}/post/get_replies.php`,\n  getTermResults: `${apiAddress}/post/get_replies_terms.php`,\n  getOntology: `${apiAddress}/post/get_ontology.php`\n};\n\nconst postAddresses = {\n  post: `${document.location.origin}/post`,\n};\n\nexport { apiAddresses, postAddresses };\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\components\\DocumentCard.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\components\\modals\\NewDocumentModal.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\hooks\\dashboardAPIs.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\editorsHelper.js",["655","656","657"],"import React, {useState, useEffect} from 'react';\nimport $ from 'jquery';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Publish from './publish';\nimport DocumentEditor from './editor/DocumentEditor';\n\nimport { storeAnnotations, getAnnotations, changeOntologySelection, changeDeleteAnnotation} from '../hooks/editor/documentAPI';\n\nimport getTermStr from '../hooks/sidebar/getTermString';\nimport getAnnotationSelection from '../hooks/editor/getAnnotationSelection';\n\nconst EditorHelper = editorProps => {\n\n  const {documentId, editor, content, annotations, updateAnnotations, \n    updateHighlights, setCurrentHighlight, annotationSelection, updateAnnotationSelection, currentHighlight,\n    updateDefinitions, updateShowAccordion, updateLoadHighlights } = editorProps;\n\n  const [annotationsLoaded, updateAnnotationsLoaded] = useState(false);\n\n  const resetAnnotations = () => {\n    updateAnnotations({});\n    updateHighlights({});\n    setCurrentHighlight('');\n    updateAnnotationSelection({});\n    updateDefinitions({});\n  }\n\n  const saveAnnotations = (annotations) => {\n    if (!$.isEmptyObject(annotations)) {\n      const storedAnnotations = {};\n      for (const term in annotations) {\n        storedAnnotations[term] = {};\n        const divider = term.indexOf('-');\n        const from = Number(term.substring(0, divider))-1;\n        const to = Number(term.substring(divider+1, term.length));\n\n        storedAnnotations[term].from = from;\n        storedAnnotations[term].to = to;\n        storedAnnotations[term].text = getTermStr(term, content);\n        storedAnnotations[term].onto_id = annotations[term][0].id;\n        storedAnnotations[term].ontologies = annotations[term];\n      }\n\n      console.log(\"Store annotation\",storedAnnotations);\n      storeAnnotations(documentId, JSON.stringify(storedAnnotations));\n    }\n  };\n\n  // save ontology change\n  useEffect(() => {\n    if (currentHighlight) {\n      if (annotationSelection[currentHighlight] != -1) {\n        const annotation = annotations[currentHighlight][annotationSelection[currentHighlight]];\n        changeOntologySelection(documentId, annotation.annotation_id, annotation.ontologyId);\n        changeDeleteAnnotation(documentId, annotation.annotation_id, -1);\n      } else {\n        const annotation = annotations[currentHighlight][0];\n        changeDeleteAnnotation(documentId, annotation.annotation_id, 1);\n      }\n    }\n  }, [annotationSelection]);\n\n  // retrieve annotations\n  useEffect(() => {\n    if (editor && content) {\n      console.log(\"editor update\");\n      getAnnotations(documentId, (annotations, ontologySelection, annotationDeletion) => {\n        console.log(\"annotations\",annotations, ontologySelection, annotationDeletion);\n        if (!$.isEmptyObject(annotations)) {\n          updateAnnotationsLoaded(true);\n          updateAnnotations(annotations);\n          updateAnnotationSelection(getAnnotationSelection(ontologySelection, annotationDeletion, annotations));\n          updateShowAccordion(true);\n          updateLoadHighlights(true);\n        }\n      });\n    }\n  }, [editor]);\n\n  const editorHelperProps = {\n    ...editorProps,\n    annotationsLoaded: annotationsLoaded, updateAnnotationsLoaded: updateAnnotationsLoaded,\n    resetAnnotations: resetAnnotations, saveAnnotations: saveAnnotations\n  };\n\t\n  return (\n    <div id=\"editor\">\n      <Sidebar {...editorHelperProps} />\n      <div style={{ width: '100%'}}>\n        <Publish {...editorHelperProps} />\n        <DocumentEditor {...editorHelperProps} />\n      </div>\n    </div>\n  );\n};\n\nexport default EditorHelper;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\components\\ForumCard.js",["658","659","660"],"import React,{useState} from 'react';\nimport { Card, Button, Badge } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport DeletePostModal from '../components/models/DeletePostModel';\nimport 'react-router-dom';\nexport default function ForumCard({\n  post_id,\n  post_title,\n  terminology,\n  curr_ontology,\n  post_content,\n  responses,\n  publicPost,\n  posts,\n  setPosts}) {\n  const [showDelPostModal, updateShowDelPostModal] = useState(false);\n  const [knowledgeGraph, updateKnowledgeGraph] = useState(false);\n  const deletePost = () => updateShowDelPostModal(true);  \n  const openKnowledgeGraph = () => updateKnowledgeGraph(true);\n  \n  const deletePostProps = {\n    post_id:post_id,\n    posts:posts,\n    setPosts:setPosts,\n    showDelPostModal: showDelPostModal, updateShowDelPostModal: updateShowDelPostModal\n  };\n\n  return (\n    <div className=\"d-inline-block forum-card mr-3 mb-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Header className=\"text-right p-1\">\n          <Badge variant={publicPost ? \"light\" : \"dark\"}>\n            {`${responses} ${responses == 1 ? \"response\" : \"responses\"}`}\n          </Badge>\n        </Card.Header>\n        <Card.Body>\n          <Card.Title className=\"\">\n            <span>{post_title}</span>\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted text-smal\">{`${terminology}: ${curr_ontology}`}</Card.Subtitle>\n          <Card.Text>{post_content}</Card.Text>\n          <Card.Link>\n            <Link to={`/post/${post_id}`}>open</Link>\n          </Card.Link>\n             \n          {!publicPost ? (\n            <Card.Link>\n              <Button variant=\"link\" onClick={deletePost}>\n                delete\n              </Button>\n            </Card.Link>\n          ) : null}\n          {/* {!publicPost ? <Card.Link href=\"#\">delete</Card.Link> : null} */}\n          <Card.Link>\n            \n             \n            \n          </Card.Link>\n        </Card.Body>\n      </Card>\n      {showDelPostModal ? <DeletePostModal {...deletePostProps} /> : null}\n      \n    </div>\n  );\n}\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\hooks\\postAPI.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\EditorSidebar.js",["661","662","663"],"import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Semantically_Logo from '../img/semantically-logo.png';\nimport Home from '../img/home-1.svg';\nimport Forum from '../img/forum.svg';\nimport Account from '../img/account.svg';\n\nconst EditorSidebar = () => {\n  const navItems = [\n    {link: \"/\", img: Home},\n    {link: \"/posts\", img: Forum},\n    {link: \"/myaccount\", img: Account},\n  ];\n\n  return (\n    <div id=\"editor-sidebar\">\n      <Link to=\"/\">\n        <img src={Semantically_Logo} className=\"editor-sidebar-icon mb-5 mt-0\"/>\n      </Link>\n      {navItems.map(nav =>\n        <Link to={nav.link}>\n          <img src={nav.img} className=\"editor-sidebar-icon\"/>\n        </Link>\n      )}\n    </div>\n  )\n}\n\nexport default EditorSidebar;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\dashboard\\components\\modals\\DeleteDocumentModal.js",["664","665"],"import React, {useState} from 'react';\nimport {Modal, Button, Form} from 'react-bootstrap';\n\nimport {deleteDocument} from '../../hooks/dashboardAPIs';\n\nexport default function DeleteDocumentModal({updateShowDelDocModal, documents, \n    updateDocuments, doc_id}) {\n  const handleClose = () => updateShowDelDocModal(false);\n  console.log(doc_id);\n\n  const submit = () => {\n    deleteDocument(doc_id, () => {\n        // remove deleted document\n        updateDocuments(documents.filter(doc => doc.doc_id !== doc_id));\n    });\n    handleClose();\n  };\n\n  return (\n    <>\n    <Modal\n          show={true}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n        <Modal.Header closeButton>\n        <Modal.Title>Deleting Document</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        Are you sure? This operation is permanent!\n        </Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n        </Button>\n        <Button variant=\"danger\" onClick={submit}>Delete</Button>\n        </Modal.Footer>\n    </Modal>\n    </>\n\n  )\n}\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\publish.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\Sidebar.js",["666"],"import React, { useState } from 'react';\nimport $ from 'jquery';\n\nimport SidebarHeader from './SidebarHeader';\nimport SidebarBody from './SidebarBody';\nimport Logo from '../../../../logo.png';\n\nconst Sidebar = editorProps => {\n  const [showLoader, updateShowLoader] = useState(false);\n\n  const sidebarProps = {\n    ...editorProps,\n    showLoader: showLoader, updateShowLoader: updateShowLoader\n  }\n\n  return (\n    <div id=\"sidebar-container\">\n      <div id=\"sidebar\">\n        <SidebarHeader {...sidebarProps} />\n        <SidebarBody {...sidebarProps} />\n      </div>\n      <div id=\"sidebar-logo\" className=\"text-center\">\n        <img alt=\"Add-on logo\" className=\"d-inline-block\" src={Logo} width=\"60%\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\editor\\DocumentEditor.js",["667","668","669","670","671","672"],"import 'trix/dist/trix';\nimport 'trix/dist/trix.css';\n\nimport React, {useEffect, useState} from 'react';\nimport $ from 'jquery';\nimport { TrixEditor } from \"react-trix\";\nimport RemoveAnnotationsModal from '../sidebar/RemoveAnnotationsModal';\n\nimport Highlights from './Highlights';\nimport {readDocument, editDocument} from '../../hooks/editor/documentAPI';\nimport {\n  Card,\n  Button,\n  Modal,\n  Form,\n  Col,\n  Row,\n  Container,\n} from \"react-bootstrap\";\n\nconst DocumentEditor = editorProps => {\n  const {documentId, content, updateContent, editor, updateEditor, annotations, resetAnnotations} = editorProps;\n  \n  const [awaitingContent, updateAwaitingContent] = useState(\"\");\n  const trixEditorProps = {\n    value: content,\n    placeHolder: 'Enter text here...',\n    onChange: (html, newContent) => {\n      if (!$.isEmptyObject(annotations) && !awaitingContent) {\n        console.log(\"new content\",newContent);\n        updateAwaitingContent(newContent);\n        editor.undo();\n        updateShowRemoveAnnotationsModalC(true);\n      } \n      else updateContent(newContent);\n    },\n    onEditorReady: editor => updateEditor(editor) && editor.insertString(content),\n    autoFocus: true,\n    awaitingContent: awaitingContent\n  };\n  const [contentRetrived, updateContentRetrieved] = useState(false);\n  const [retrievingContent, updateRetrievingContent] = useState(false);\n  const [showRemoveAnnotationsModalC, updateShowRemoveAnnotationsModalC] = useState(false);\n  const [contentSize, updateContentSize] = useState(false);\n\n  // fetch document content\n  if (!contentRetrived && !retrievingContent) {\n    updateRetrievingContent(true);\n    readDocument(documentId,\n      content => {\n        updateContent(content);\n        updateContentRetrieved(true);\n      });\n  }\n\n  const [timeoutId, updateTimeoutId] = useState(0);\n  useEffect(() => {\n    if(content.split(' ').length < 500){\n    if (contentRetrived) {\n      clearTimeout(timeoutId);\n      updateTimeoutId(setTimeout(() => editDocument(documentId, content), 1000));\n    }}\n    else{\n      console.log(\"content length is\",content.split(' ').length);\n      updateContentSize(true);\n    }\n  }, [content]);\n\n  useEffect(() => {\n    if (!showRemoveAnnotationsModalC) {\n      updateAwaitingContent('');\n    }\n  }, [showRemoveAnnotationsModalC]);\n  const removeAnnotationMsg = \"Semantically doesn't yet support maintaining annotations on dynamic content. To proceed with edits, all annotations will be removed. This operation is permanent!\";\n\n  return (\n    <div>\n      \n      {contentRetrived ?\n        <>\n          <TrixEditor {...trixEditorProps} />\n          <Highlights {...editorProps} />\n        </> : null\n      }\n      {showRemoveAnnotationsModalC ? <RemoveAnnotationsModal documentId={documentId}\n      resetAnnotations={resetAnnotations} \n      updateShowRemoveAnnotationsModal={updateShowRemoveAnnotationsModalC} \n      callback={() => {updateContent(awaitingContent); editor.redo();}}\n      removeAnnotationMsg={removeAnnotationMsg} /> : null}\n      {contentSize ? (<CheckContentSize updateContentSize={updateContentSize}/>) : null }\n    </div>\n  )\n}\n\nfunction CheckContentSize({updateContentSize}){\n  const closeModal = () => updateContentSize(false);\n  return (\n    <>\n    <Modal\n          show={true}\n          onHide={closeModal}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n        <Modal.Header closeButton>\n        <Modal.Title>Content Size</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        Content Word Size must be less than 100\n        </Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"danger\" onClick={closeModal}>OK</Button>\n        </Modal.Footer>\n    </Modal>\n    </>\n\n  )\n}\n\n\nexport default DocumentEditor;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\forum\\components\\models\\DeletePostModel.js",["673","674","675","676"],"import React, {useState} from 'react';\r\nimport {Modal, Button, Form} from 'react-bootstrap';\r\n\r\nimport {deletePost} from '../../hooks/postAPI';\r\n\r\nexport default function DeletePostModel({post_id,updateShowDelPostModal,posts,setPosts}) {\r\n\r\n    const handleClose = () => updateShowDelPostModal(false);\r\n    console.log('post_id is',post_id);\r\n    console.log('updateshow',updateShowDelPostModal);\r\n   // const[post_res,setPostRes]=useState([]);\r\n    \r\n    const submit = () => {\r\n      //deletePost(post_id,setPostRes);\r\n      deletePost(post_id, () => {\r\n        // remove deleted document\r\n        console.log(posts);\r\n        setPosts(posts.filter(post => post.post_id != post_id));\r\n        console.log(posts.filter(post => post.post_id != post_id));\r\n    });\r\n      handleClose();\r\n     //setDelete(true);\r\n     \r\n    };\r\n  \r\n    return (\r\n      <>\r\n      <Modal\r\n            show={true}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n          <Modal.Header closeButton>\r\n          <Modal.Title>Deleting Post</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          Are you sure? This operation is permanent!\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={submit}>Delete</Button>\r\n          </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n  \r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\editor\\getAnnotationSelection.js",["677","678"],"const getAnnotationSelection = (ontologySelection, annotationDeletion, annotations) => {\n    const annotationSelection = {};\n    for (const key in ontologySelection) {\n        let count = 0;\n        if (annotationDeletion[key] == 1) {\n            // annotation deleted\n            annotationSelection[key] = -1;\n            continue;\n        }\n\n        for (const ontology of annotations[key]) {\n            if (ontology.ontologyId == ontologySelection[key]) {\n                annotationSelection[key] = count;\n                break;\n            }\n            count++;\n        }\n    }\n    return annotationSelection;\n}\n\nexport default getAnnotationSelection;","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\getTermString.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\editor\\documentAPI.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\downloadAnnotations.js",["679","680","681","682","683","684","685","686"],"import getTermStr from './sidebar/getTermString';\nimport getDefinition from './sidebar/getDefinition';\nimport sortKeys from './sidebar/sortKeys';\n\nconst download = (filename, text) => {\n  const element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n\n  document.body.appendChild(element);\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nconst saveAsJSON = async (content, annotations, annotationSelection, definitions, updateDefinitions) => {\n  const schemaJson = {};\n\n  const onlySelectedAnnotations = {};\n  for (const term in annotationSelection) {\n    if (annotationSelection[term] !== -1)\n      onlySelectedAnnotations[term] = annotations[term][annotationSelection[term]];\n  }\n\n  for(const term in onlySelectedAnnotations) {\n    const annotation = onlySelectedAnnotations[term];\n    const url = annotation.link;\n    const def = url in definitions ? definitions[url] : await getDefinition(url);\n    updateDefinitions({...definitions, [url]: def});\n\n    schemaJson[getTermStr(term, content)] = def;\n  }\n\n  download('document.json', JSON.stringify(schemaJson));\n}\n\nconst saveAsHTML = async (content, annotations, annotationSelection, definitions, updateDefinitions, hasHighlights) => {\n  const schemaJson = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"MedicalEntity\",\n    \"code\": []\n  };\n\n  console.log(content);\n\n  const onlySelectedAnnotations = {};\n  for (const term in annotationSelection) {\n    if (annotationSelection[term] !== -1)\n      onlySelectedAnnotations[term] = annotations[term][annotationSelection[term]];\n  }\n\n  let addedLength = 0;\n  let text = content;\n  let annText = \"\";\n  let ended = 0;\n\n  for(const term of sortKeys(Object.keys(onlySelectedAnnotations))) {\n    const annotation = onlySelectedAnnotations[term];\n    schemaJson['code'].push({\"@type\": \"MedicalCode\", \"name\": getTermStr(term, text), \"codingSystem\": annotation.acronym, \"link\": annotation.ontologyId});\n    if(hasHighlights) {\n      const url = annotation.link;\n      const def = url in definitions ? definitions[url] : await getDefinition(url);\n      updateDefinitions({...definitions, [url]: def});\n      annText += text.substring(ended, annotation.from - 1) + `<span class=\"tippy\" title=\"${def}\">${text.substring(annotation.from - 1, annotation.to)}</span>`;\n      ended = annotation.to;\n    }\n  }\n  annText += text.substring(ended);\n\n  download('document.html', '<html><head><title><\\/title><link href=\"https://fonts.googleapis.com/css?family=Nunito+Sans:400,600,800\" rel=\"stylesheet\">' + ((hasHighlights) ? '<script src=\"https://unpkg.com/tippy.js@2.5.4/dist/tippy.all.min.js\"><\\/script>' : '') + '<style>.container { font-family: Nunito Sans,Avenir,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Ubuntu,Cantarell,Helvetica Neue,Helvetica,Arial,sans-serif; font-size: 1.125rem; padding: 4%; margin: 0 auto; }' + ((hasHighlights) ? ' .tippy { background: rgba(255,202,223,.5); color: #d22489; outline: 0; border-bottom: 1px solid #f27da6; padding: 0 4px; font-weight: 600; cursor: help; }' : '') + '<\\/style><script type=\"application/ld+json\">' + JSON.stringify(schemaJson) + '<\\/script><\\/head><body class=\"container\"' + ((hasHighlights) ? ' onload=\"tippy(\\'.tippy\\');\"' : '') + '>' + (hasHighlights ? annText : text) + '<\\/body><\\/html>');\n}\n\nexport {saveAsHTML, saveAsJSON};\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarHeader.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarBody.js",["687","688","689"],"import React, { useEffect } from 'react';\nimport $ from 'jquery';\n\nimport SidebarLoader from './SidebarLoader';\nimport SidebarAccordion from './SidebarAccordion';\n\nconst SidebarBody = sidebarProps => {\n  const { annotations, updateAnnotationSelection, showLoader, showAccordion, \n    saveAnnotations, annotationSelection, annotationsLoaded,  updateAnnotationsLoaded} = sidebarProps;\n    \n  // reset annotation selection\n  useEffect(() => {\n    if (!annotationsLoaded) {\n      const selection = {};\n      Object.keys(annotations)\n        .forEach(term => selection[term] = 0);\n      updateAnnotationSelection(selection);\n      console.log('here now');\n      console.log(annotations);\n      saveAnnotations(annotations);\n      updateAnnotationsLoaded(false);\n    }\n  }, [annotations]);\n\n  return (\n    <div className=\"flex-grow-1\">\n      {showLoader ? <SidebarLoader /> : null}\n      {showAccordion ? <SidebarAccordion {...sidebarProps} /> : null}\n    </div>\n  );\n}\n\nexport default SidebarBody;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\editor\\Highlights.js",["690","691","692"],"import $ from 'jquery';\nimport React, {useEffect, useState} from 'react';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport sortKeys from '../../hooks/sidebar/sortKeys';\nimport getRemovedHighlights from '../../hooks/editor/getRemovedHighlights';\n\nconst Highlights = ({ highlights, currentHighlight, setCurrentHighlight, annotationSelection, editor}) => {\n  const sortedKeys = sortKeys(Object.keys(highlights));\n  const [activeIndex, updateActiveIndex] = useState(0);\n\n  const removedHighlights = getRemovedHighlights(annotationSelection);\n\n  if (editor) {\n    $(document.querySelector(\"trix-editor\")).click(() => {\n        setTimeout(() => updateActiveIndex(editor.getSelectedRange()[0]), 200);\n    });\n  }\n\n  // display all highlights\n  useEffect(() => {\n    for (const term in highlights) {\n      const divider = term.indexOf('-');\n      const from = Number(term.substring(0, divider))-1;\n      const to = Number(term.substring(divider+1, term.length));\n\n      console.log(from + '-' + to);\n      const start = editor.getClientRectAtPosition(from);\n      const end = editor.getClientRectAtPosition(to);\n      const width = end.left - start.left;\n\n      $(`#highlight-${term}`).css({\n        width: `${width}px`,\n        top: `${start.top + 25}px`,\n        left: `${start.left}px`\n      });\n    }\n  });\n\n  useEffect(() => {\n    let set = false;\n    for (const key of sortedKeys) {\n    const divider = key.indexOf('-');\n    const highlightStart = Number(key.substring(0, divider))-1;\n    const highlightEnd = Number(key.substring(divider+1, key.length));\n    if (activeIndex <= highlightEnd) {\n//       $('.active').removeClass('active');\n//       $(`#highlight-${key}`).addClass('active');\n      if (activeIndex > highlightStart) {\n        setCurrentHighlight(key);\n        set = true;\n\n        // show accordion card\n//         const toggle = document.querySelector(`.toggle-${key}`);\n//         const collapse = document.querySelector(`.toggle-${key} + .collapse`);\n//         if (!collapse.classList.contains('show')) {\n//             toggle.click();\n//             setTimeout(() => toggle.scrollIntoView(), 300);\n//         }\n      }\n      break;\n    }\n  }\n  if (!set) setCurrentHighlight(null);\n  }, [activeIndex]);\n  return (\n    <div>\n      {Object.keys(highlights).map((term, key) => <div key={key} id={`highlight-${term}`}\n        className={`highlight ${term === currentHighlight ? 'active' : ''} ${removedHighlights.includes(term) ? 'deleted' : ''} ${highlights[term] != -1 ? 'selected' : ''}`}/>)\n      }\n    </div>\n  )\n};\n\nexport default Highlights;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\RemoveAnnotationsModal.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\sortKeys.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\getDefinition.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\ManualOntologySelector.js",["693","694","695"],"import React, {useState, useEffect} from 'react';\nimport $ from 'jquery';\nimport {Button} from 'react-bootstrap';\nimport Chips, { Chip } from 'react-chips';\n\nconst fetchAllOntologies = (updateAllOntologies) => {\n  $.ajax({\n    url: 'https://data.bioontology.org/ontologies?include=name,acronym&display_links=false&display_context=false&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f',\n    dataType: 'JSON',\n    xhrFields: {\n      withCredentials: false\n    },\n    success: data => {\n      const ontologies = {};\n      for (const ontology of data) {\n        ontologies[ontology.name.trim()] = ontology['acronym'];\n        // differentiate acronyms\n        ontologies[`${ontology['acronym']} `] = ontology.name;\n      }\n      updateAllOntologies(ontologies);\n    }});\n}\n\nconst limitResults = limit => {\n  if (limit < 0) return;\n  const resultList = $('#react-autowhatever-1 > ul');\n  const len = resultList.children().length;\n  if (len > limit) {\n    for (let i = limit; i < len; i++) resultList.children().remove('#react-autowhatever-1--item-' + i);\n  }\n}\n\nconst updateChips = (chips, allOntologies, updateManualOntologies) => {\n  updateManualOntologies(chips.reduce((ontologies, chip) => {\n    if (chip.endsWith(' ')) ontologies[chip.trim()] = allOntologies[chip];\n    else ontologies[`${allOntologies[chip]}`] = chip;\n    return ontologies;\n  }, {}));\n}\n\nconst getSuggestions = (allOntologies, manualOntologies) => {\n  return Object.keys(allOntologies).filter(\n    suggestion => !Object.keys(manualOntologies).concat(Object.values(manualOntologies)).includes(suggestion.trim())\n  );\n}\n\nconst ManualAnnotationPopUp = ({manualOntologies, updateManualOntologies}) => {\n\n  const [allOntologies, updateAllOntologies] = useState({});\n  const [loadedAllOntologies, updateLoadedAllOntologies] = useState(false);\n  const [hideOntologyField, updateHideOntologyField] = useState(false);\n\n  if (!loadedAllOntologies) {\n      fetchAllOntologies(updateAllOntologies);\n      updateLoadedAllOntologies(true);\n  }\n\n\n  return (\n    <div className=\"mb-3\">\n      {hideOntologyField ?\n        <Button variant=\"outline-secondary\" className=\"pt-1 pb-2 w-100\" onClick={() => updateHideOntologyField(false)}>show ontologies</Button> :\n        <React.Fragment>\n          <Chips\n            placeholder={\"Enter ontology\"}\n            value={Object.values(manualOntologies)}\n            onChange={chips => updateChips(chips, allOntologies, updateManualOntologies)}\n            suggestions={getSuggestions(allOntologies, manualOntologies)}\n            highlightFirstSuggestion={true}\n          />\n          <Button variant=\"link\" onClick={() => updateHideOntologyField(true)}>hide ontologies</Button>\n        </React.Fragment>\n      }\n      </div>\n  );\n}\n\nexport default ManualAnnotationPopUp;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarAccordion.js",["696","697","698","699","700","701","702","703"],"import React, { useState, useEffect } from \"react\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport {\n  Accordion,\n  Card,\n  Button,\n  Modal,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport Personalize from \"../Personalize\"\nimport sortKeys from \"../../hooks/sidebar/sortKeys\";\nimport getTermStr from \"../../hooks/sidebar/getTermString\";\nimport getDefinition from \"../../hooks/sidebar/getDefinition\";\nimport getRemovedHighlights from \"../../hooks/editor/getRemovedHighlights\";\nimport { checkRecommendation } from \"../../hooks/editor/documentAPI\";\nimport { apiAddresses } from \"../../../../appInfo\";\nimport LookUp from \"../LookUp\";\nimport AskQuestion from \"../AskQuestion\";\nimport PopupRecommendation from \"../PopupRecommendation\";\nconst setGetDefinitionListeners = (annotations, setDefinition) => {\n  for (const annotation of Object.values(annotations)) {\n    for (const { from, to, acronym, link } of annotation) {\n      const toggle = `${from}-${to}-${acronym}`;\n      console.log(\"toogle-1\",toggle, link);\n      $(`.${toggle}`).click(() => {\n        setDefinition(link);\n        console.log(\"toggle-2\",toggle);\n      });\n    }\n  }\n};\n\nconst removeHighlight = (\n  currentHighlight,\n  setCurrentHighlight,\n  highlights,\n  updateHighlights\n) => {\n  delete highlights[currentHighlight];\n  updateHighlights({ ...highlights });\n  setCurrentHighlight(\"\");\n};\n\n// show in NCBOTree\nconst showInTree = (text) => {\n  while (document.querySelector(\"#tree > .root > span\") !== null)\n    setTimeout(() => {}, 100);\n  const listItem = [...document.querySelectorAll(\"#tree li\")].filter(\n    (li) => li.innerText.toLowerCase() === text.toLowerCase()\n  );\n  if (listItem.length > 0) listItem[0].scrollIntoView();\n  console.log(listItem);\n};\n\nconst SidebarAccordion = ({\n  annotations,\n  updateAnnotations,\n  definitions,\n  updateDefinitions,\n  updateHighlights,\n  loadHighlights,\n  highlights,\n  updateLoadHighlights,\n  currentHighlight,\n  setCurrentHighlight,\n  annotationSelection,\n  updateAnnotationSelection,\n  content,\n  editor\n}) => {\n  const [openOntologyModal, updateOpenOntologyModal] = useState(false);\n  const [openLookUpModal, updateOpenLookUpModal] = useState(false);\n  const [openPostModal, updateOpenPostModal] = useState(false);\n  \n  const [setDefinitionListeners, updateSetDefinitionListeners] =\n    useState(false);\n  const [ontologyIdx, updateOntologyIdx] = useState(0);\n  // console.log(currentHighlight)\n  const annotatedTerms = sortKeys(Object.keys(annotations));\n  const removedHighlights = getRemovedHighlights(annotationSelection);\n  //   console.log(annotations);\n  console.log(\"refresh is\",currentHighlight);\n\n  const [menu, setMenu] = useState(false);\n  const [personalize, updatePersonalize] = useState(false);\n  const [expert, updateShowExpert] = useState([\"20\"])\n  const [showExpert, updateExpert] = useState(false)\n  const [ID, updateID] = useState(23)\n  //Displays Menu for choosing type of post\n  ////Sebastian Chalarca\n  //----------------------------------------------------------------//\n  const openAskQuestionModal = () => {\n    updateOpenPostModal(!openPostModal)\n    updateExpert(false)\n  }\n  \n  //Get Current user's ID for calculating personalized recommendations.\n    $.post({\n       url: apiAddresses.getUser_ID,\n       success: (data) => {\n          console.log(data[\"data\"][0]['user_id'])\n          updateID(data[\"data\"][0]['user_id'])\n          \n          \n       }\n       \n       \n          \n         \n      });\n    \n  const openPersonalizeModal = () => {\n   \n   updatePersonalize(!personalize)\n  }\n  \n  \n  const ShowMenu = () => {\n    \n    \n    return(\n     <div>\n        <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Select post type\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item onClick = {openAskQuestionModal}> Social Technical </Dropdown.Item>\n        <Dropdown.Item onClick = {openPersonalizeModal}> Personalized Recommendation </Dropdown.Item>\n        \n      </Dropdown.Menu>\n    </Dropdown>\n     </div>\n    )\n  }\n  \n  //---------------------------------------------------------------//\n  const setDefinition = (url) => {\n    if (!(url in definitions)) {\n      getDefinition(url).then((def) =>\n        updateDefinitions({ ...definitions, [url]: def })\n      );\n      return \"Loading...\";\n    } else {\n      return definitions[url];\n    }\n  };\n\n  if (!setDefinitionListeners) {\n    console.log(\"here setdef\");\n    setGetDefinitionListeners(annotations, setDefinition);\n    updateSetDefinitionListeners(true);\n  }\n\n  if (loadHighlights) {\n    const newHighlights = {};\n    for (const term of annotatedTerms) {\n      newHighlights[term] = -1;\n    }\n    updateHighlights(newHighlights);\n    updateLoadHighlights(false);\n  }\n\n  // Switch annotations\n  useEffect(() => {\n    updateOntologyIdx(0);\n  }, [currentHighlight]);\n\n  // Switch annotations or change ontology\n  useEffect(() => {\n    // change NCBO tree\n  }, [currentHighlight, ontologyIdx]);\n\n  ///////Asim\n  //// Asim\n  const [timeoutId, updateTimeoutId] = useState(0);\n  const [reply, setReply] = useState([]);\n  const [check, setCheck] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  //const[word, setWord] = useState(\"\");\n\n  useEffect(() => {\n    updateOntologyIdx(0);\n    if (currentHighlight) {\n      setCheck([]);\n      let current_word = getTermStr(currentHighlight, content);\n      clearTimeout(timeoutId);\n      updateTimeoutId(\n        setTimeout(() => checkRecommendation(current_word, setCheck), 1000)\n      );\n    }\n  }, [currentHighlight]);\n\n  const fetch_reply = () => {\n    setReply(check);\n    updateOpenLookUpModal(true);\n  };\n\n  if (!currentHighlight) return null;\n  return (\n    <React.Fragment>\n      {removedHighlights.includes(currentHighlight) ? (\n        <Card className=\"p-4 text-center\">\n          <Button\n            variant=\"outline-success\"\n            size=\"sm\"\n            style={{ width: \"fit-content\" }}\n            className=\"mx-auto\"\n            onClick={() =>\n              updateAnnotationSelection({\n                ...annotationSelection,\n                [currentHighlight]: 0,\n              })\n            }\n          >\n            reannotate\n          </Button>\n        </Card>\n      ) : (\n        <div>\n          <Card>\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span>\n                {\n                  annotations[currentHighlight][\n                    annotationSelection[currentHighlight]\n                  ].acronym\n                }\n              </span>\n              <div>\n                {annotations[currentHighlight].length > 1 ? (\n                  <Button\n                    variant=\"outline-info\"\n                    size=\"sm\"\n                    onClick={() => updateOpenOntologyModal(true)}\n                  >\n                    change\n                  </Button>\n                ) : null}{\" \"}\n                <Button\n                  variant=\"outline-danger\"\n                  size=\"sm\"\n                  onClick={() =>\n                    updateAnnotationSelection({\n                      ...annotationSelection,\n                      [currentHighlight]: -1,\n                    })\n                  }\n                >\n                  {\"delete\"}\n                </Button>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <Card.Text>\n                {setDefinition(\n                  annotations[currentHighlight][\n                    annotationSelection[currentHighlight]\n                  ].link\n                )}\n              </Card.Text>\n            </Card.Body>\n            {openOntologyModal ? (\n              <OntologyModal\n                term={currentHighlight}\n                updateOpenOntologyModal={updateOpenOntologyModal}\n                annotations={annotations}\n                definitions={definitions}\n                setDefinition={setDefinition}\n                annotationSelection={annotationSelection}\n                updateAnnotationSelection={updateAnnotationSelection}\n                content={content}\n              />\n            ) : null}\n            {openLookUpModal ? (\n              <LookUp\n                checkData={check}\n                term={currentHighlight}\n                updateOpenLookUpModal={updateOpenLookUpModal}\n              />\n            ) : null}\n             \n            {openPostModal ? (\n              <AskQuestion\n                word={getTermStr(currentHighlight, content)}\n                ontology={\n                  annotations[currentHighlight][\n                    annotationSelection[currentHighlight]\n                  ]\n                }\n                updateOpenPostModal={updateOpenPostModal}\n                updateOpenLookUpModal={updateOpenLookUpModal}\n                currentHighlight={currentHighlight}\n                annotationSelection={annotationSelection}\n                annotations={annotations}\n                showExpert={showExpert}\n                updateShowExpert={updateShowExpert}\n                updateExpert={updateExpert}\n                expert={expert}\n              >\n                \n                </AskQuestion>\n\n              \n            ) : null}\n            {personalize ? (\n                    <Personalize updatePersonalize = {updatePersonalize} updateOpenPostModal={updateOpenPostModal} updateExpert={updateExpert} showExpert={showExpert} updateShowExpert={updateShowExpert} expert={expert} updateID={updateID} ID={ID}/> \n                  ) : null}\n          </Card>\n          <div className=\"text-center\">\n            <Container>\n              <Row>\n                <Col>\n                  <Button\n                    variant=\"link\"\n                    style={{ \"box-shadow\": \"none\", color: \"red\" }}\n                    onClick={fetch_reply}\n                    className=\"recommendation\"\n                  >\n                    {console.log(\"check size\", Object.keys(check).length)}\n                    {/* {element.flag === \"0\" ? \"New Recommendation\" : \"\"} */}\n                    {Object.keys(check).length > 0 ? \"New Recommendation\" : \"\"}\n                  </Button>\n                </Col>\n                <Col>\n                  <Button\n                    variant=\"link\"\n                    style={{ \"box-shadow\": \"none\" }}\n                    onClick= {(() => setMenu(true))}\n                  >\n                    Need Help?\n                  </Button> \n                  {menu ? (\n                 <ShowMenu setMenu={setMenu}/>\n                      \n                \n            ) : null}\n                  \n  \n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst OntologyModal = ({\n  term,\n  updateOpenOntologyModal,\n  annotations,\n  definitions,\n  setDefinition,\n  ontologyIdx,\n  annotationSelection,\n  updateAnnotationSelection,\n  content,\n}) => {\n  const closeModal = () => updateOpenOntologyModal(false);\n  const getDef = (url) => {\n    return definitions[url] ? definitions[url] : \"loading...\";\n  };\n\n  useEffect(() => {\n    for (const ontology of annotations[term]) {\n      $(`.modal-toggle-${ontology.acronym}`).click(() =>\n        setDefinition(ontology.link)\n      );\n    }\n  });\n\n  return (\n    <Modal\n      show={true}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {getTermStr(term, content)}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Accordion defaultActiveKey={`${term}-modal-0`} id=\"sidebar-accordion\">\n          {annotations[term].map((ontology, idx) => (\n            <Card>\n              <Accordion.Toggle\n                as={Card.Header}\n                eventKey={`${term}-modal-${idx}`}\n                className={`d-flex justify-content-between ${ontology.from}-${ontology.to}-${ontology.acronym} modal-toggle-${ontology.acronym}`}\n              >\n                <span>{ontology.acronym}</span>\n                {ontologyIdx != idx ? (\n                  <Button\n                    variant=\"outline-primary\"\n                    size=\"sm\"\n                    onClick={() => {\n                      updateAnnotationSelection({\n                        ...annotationSelection,\n                        [term]: idx,\n                      });\n                      updateOpenOntologyModal(false);\n                    }}\n                  >\n                    select\n                  </Button>\n                ) : null}\n              </Accordion.Toggle>\n              <Accordion.Collapse\n                eventKey={`${term}-modal-${idx}`}\n                className={`p-2 p-0 accordion-card`}\n              >\n                <Card>\n                  <Card.Body>\n                    <Card.Text>{getDef(ontology.link)}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Accordion.Collapse>\n            </Card>\n          ))}\n        </Accordion>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={closeModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default SidebarAccordion;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\editor\\getRemovedHighlights.js",["704"],"const getRemovedHighlights = annotationSelection => {\n  return Object.keys(annotationSelection)\n      .filter(highlight => annotationSelection[highlight] == -1);\n}\n\nexport default getRemovedHighlights;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\sidebar\\SidebarLoader.js",[],"C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\hooks\\sidebar\\getRecommenderAnnotations.js",["705"],"import $ from 'jquery';\n\nconst parseRecommenderData = (data) => {\n  const results = [];\n  for(let i = 0; i < data.length; i++) {\n    results[i] = {};\n    results[i]['acronym'] = data[i]['ontologies'][0]['acronym'];\n    results[i]['annotations'] = [];\n    for (const annotation of data[i]['coverageResult']['annotations']) {\n      results[i]['annotations'].push(annotation);\n    }\n  }\n  return results;\n}\n\nconst formatAnnotations = (results) => {\n  const formattedRes = {};\n\n  for (const res of results) {\n    const acronym = res['acronym'];\n    for (const annotation of res['annotations']) {\n      let key = annotation['from'] + \"-\" + annotation['to'];\n      annotation['acronym'] = acronym;\n      annotation['link'] = annotation['annotatedClass']['links']['self'];\n      annotation['id'] = annotation['annotatedClass']['@id'];\n\n      if (key in formattedRes) {\n        formattedRes[key].push(annotation);\n      } else {\n        formattedRes[key] = [annotation];\n      }\n    }\n  }\n    console.log(formattedRes);\n  // remove overlapping annotations\n  for (const res in formattedRes) {\n      for (const res1 in formattedRes) {\n          if (res !== res1) {\n              const from1 = res.substring(0, res.indexOf(\"-\"));\n              const from2 = res1.substring(0, res1.indexOf(\"-\"));\n              const to1 = res.substring(res.indexOf(\"-\")+1, res.length);\n              const to2 = res1.substring(res1.indexOf(\"-\")+1, res1.length);\n\n              if (Number(from1) >= Number(from2) && Number(to1) <= Number(to2)) formattedRes[res] = [];\n              else if (Number(from2) >= Number(from1) && Number(to2) <= Number(to1)) formattedRes[res1] = [];\n          }\n      }\n  }\n  for (const res in formattedRes) {\n      if (formattedRes[res].length == 0) delete formattedRes[res];\n  }\n\n  console.log(formattedRes);\n  return formattedRes;\n}\n\nconst getRecommenderAnnotations = (text, ontologies, callback) => {\n  let ontologyUrl = '';\n  if (ontologies !== undefined) {\n    ontologyUrl += '&ontologies=';\n    for (const ontology of ontologies) {\n      ontologyUrl += ontology + ',';\n    }\n  }\n  console.log(encodeURI(text));\n  const url = 'https://data.bioontology.org/recommender?input='\n    + encodeURIComponent(text)\n    + ontologyUrl\n    + '&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f'\n  $.ajax({\n\t\turl: url,\n    dataType: 'JSON',\n    xhrFields: {\n        withCredentials: false\n    },\n\t\tsuccess: (data) => {\n      console.log(data);\n//           console.log(data);\n\t\t  // Converting retrieved data to an array of ontology ids\n      const results = parseRecommenderData(data);\n\t\t\t// Executing a callback function, passing an array of ontology IDs\n      callback(formatAnnotations(results));\n    },\n    error: () => {\n    \t// Executing callback function, passing an empty array\n\t\t  callback({});\n    }\n\t});\n}\n\nexport default getRecommenderAnnotations;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\Personalize.js",["706","707","708","709","710","711","712","713","714","715","716","717","718","719"],"import React,{useState, state, useEffect} from 'react';\nimport {Component} from 'react'\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl, Dropdown} from 'react-bootstrap';\nimport AskQuestion from './AskQuestion';\nimport {postAddresses} from '../../../appInfo';\nimport { getUser_ID } from '../hooks/editor/documentAPI';\nimport $ from \"jquery\";\n\nconst Personalize = ({updatePersonalize, updateOpenPostModal, expert, updateShowExpert, updateExpert, updateID, ID}) => {\n    \n       \n       \n       \n       \n       \n      \n       \n       \n       const [data, setData] = useState([])\n       \n       const fetchData = () => {\n       \n        //Add conditional statement \n        var url = \"https://recommend.gosemantically.com/searchExpert/\"+ID;\n        \n        fetch(url)\n        //Grab the api data\n        .then((response) => response.json())\n        //Then, add it to the array by updating the state.\n        .then((newData)=> setData(newData.message[0]))\n        console.log(data)\n        \n        console.log(\"It works\")\n       }\n       \n       const closeModal = () => updatePersonalize(false);\n       const goToAskQuestionModal = (e) => {\n        closeModal();\n        updateOpenPostModal(true)\n        updateExpert(true)\n        updateShowExpert(e)\n        \n       }\n       return (\n           <div>\n             <Modal \n             show={true}\n             size=\"lg\"\n             aria-labelledby=\"contained-modal-title-vcenter\"\n             centered\n             onShow = {fetchData}\n             >\n                <Modal.Header closeButton onHide={closeModal}>\n                    <Modal.Title id=\"contained-modal-title-vcenter\"> Recommended Experts </Modal.Title>\n                    \n                </Modal.Header>\n                <Modal.Body className=\"px-5\">\n                \n                    <h2 id = \"title\"> List of Experts </h2>\n             <table id = \"tableFormat\" class = \"table\">\n             <tbody>\n              <tr id = \"headerRow\">\n                 <th> User_ID </th>\n                 <th> Name </th>\n                 <th> Weighted Score </th>\n                 <th> Similarity Score </th>\n              </tr>\n              \n              {data.map((val)=> (\n                    \n                   \n                    <tr key={val.id}>\n                       <td > {val.user_id} </td>\n                       <td > {val.user_name} </td>\n                       <td > {val.Weighted_Score} </td>\n                       <td > {val.similarity_score} </td>\n                       <Button variant = \"primary\" onClick={() => goToAskQuestionModal([val.user_id, val.user_name, val.Weighted_Score,val.similarity_score])}> Select </Button> \n                    </tr>\n                   \n                  ))\n                \n                  }\n                   \n                 \n                 \n              </tbody>\n             </table>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button onClick={closeModal} variant=\"secondary\">Close</Button>\n                \n              \n                </Modal.Footer>\n             </Modal>\n             \n             </div>\n       );\n\n}\n\n\n\nexport default Personalize;\n\n\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\AskQuestion.js",["720","721","722","723","724","725","726"],"import React,{useState} from 'react';\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl, Dropdown} from 'react-bootstrap';\nimport {createPost} from '../../forum/hooks/postAPI';\nimport {postAddresses} from '../../../appInfo';\nimport {Link} from \"react-router-dom\";\nimport {createDirectPost} from '../../forum/hooks/postAPI';\n\nconst AskQuestion = ({word, ontology, updateOpenPostModal, currentHighlight, annotationSelection, annotations, expert, updateShowExpert, showExpert, updateExpert}) => {\n  \n  const [context, updateContext] = useState(\"\");\n  const [expertID, updateExpertID] = useState(0);\n  const questions = [\n    \"Which ontology should I use?\",\n    \"What is the suitable ontology vocabulary?\",\n    \"Does this ontology best describe this terminology?\"\n  ];\n  const [question, updateQuestion] = useState(0);\n  const [questionOntology, updateQuestionOntology] = useState(annotationSelection[currentHighlight]);\n\n  const acronyms = annotations[currentHighlight].reduce((ontologies, ontology) => ontologies.concat(ontology.acronym), []);\n\n  const closeModal = () => updateOpenPostModal(false);\n\n  const submit = () => {\n    updateExpertID(expert[0])\n    if(showExpert){\n      alert(expert[0])\n      createDirectPost(questions[question], word, acronyms[questionOntology], context, expert[0], post_id => {\n         window.open(`${postAddresses.post}/${post_id}`,\"_self\");\n         closeModal();\n       });\n    }\n    else {\n    createPost(questions[question], word, acronyms[questionOntology], context, post_id => {\n     window.open(`${postAddresses.post}/${post_id}`,\"_self\");\n      closeModal();\n    \n    });\n  }\n  }\n  return (\n    <Modal\n      show={true}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      \n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {'Ask Question'}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"px-5\">\n        \n        <Form>\n         \n         {showExpert ? (\n          <div>\n            <table id = \"tableFormat\" class = \"table\">\n              <th  id = \"headerRow\"> Expert Credentials </th>\n              <tbody> \n                  <tr>\n                    <th> ID </th>\n                    <th> User name </th>\n                    <th> Weighted score</th>\n                    <th> Similarity score</th>\n                  </tr>\n                  <tr>\n                    <td>{expert[0]}</td>\n                    <td>{expert[1]}</td>\n                    <td>{expert[2]}</td>\n                    <td>{expert[3]}</td>\n                  </tr>\n              </tbody>\n            </table> \n         </div>\n         ):null\n         \n         }\n       \n        <Row className=\"mb-1\">\n          <Form.Group as={Col} controlId=\"term\">\n            <Form.Label>Terminology</Form.Label>\n            <Form.Control type=\"text\" value={word} disabled />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n            <Form.Label>Question</Form.Label>\n            <Form.Control as=\"select\" size=\"md\" value={question} onChange={evt => updateQuestion(evt.target.value)} custom>\n            \n              {questions.map((question, index) => <option value={index}>{question}</option>)}\n            </Form.Control>\n          </Form.Group>\n        </Row>\n        <Row className=\"mb-1\">\n          <Form.Group as={Col} controlId=\"term\">\n            <Form.Label>Please explain</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} value={context} onChange={evt => updateContext(evt.target.value)} placeholder=\"Elaborate on your question...\" />\n          </Form.Group>\n        </Row>\n        {question == 2 ?\n        <Row className=\"mb-1\">\n        <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n          <Form.Label>Select Ontology</Form.Label>\n          <Form.Control as=\"select\" size=\"md\" value={questionOntology} onChange={evt => updateQuestionOntology(evt.target.value)} custom>\n            {acronyms.map((acronym, idx) => <option value={idx}>{acronym}</option>)}\n          </Form.Control>\n        </Form.Group>\n        </Row> : null }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n      <Button onClick={closeModal} variant=\"secondary\">Close</Button>\n    <Button variant=\"primary\" onClick={() => submit()}>Submit</Button>\n    \n      </Modal.Footer>\n    </Modal>\n  )\n};\n\nexport default AskQuestion;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\LookUp.js",["727","728","729","730"],"import React, { useState } from \"react\";\nimport {\n  Card,\n  Button,\n  Modal,\n  Row,\n  Form,\n  Col,\n  Accordion,\n  FormControl,\n  Container,\n} from \"react-bootstrap\";\nimport { recommendationFlag} from \"../hooks/editor/documentAPI\";\n//import EditorHelper from \"./components/editorsHelper\";\n\nimport { useParams } from \"react-router-dom\";\n\n\n\n\nconst LookUp = ({ checkData, term,updateOpenLookUpModal }) => {\n  const { documentId } = useParams();\n  // const documentId = '2';\n  console.log(\"docid\", documentId);\n  const [flag, setFlag] = useState(\"\");\n  //const [calleditor, setEditor] = useState(false);\n  const [timeoutId, updateTimeoutId] = useState(0);\n  const closeModal = () => {updateOpenLookUpModal(false);}\n  const askQuestion = () => {\n    closeModal();\n    //updateOpenPostModal(true);\n  };\n\n  //Accept recommendation\n  const acceptRecommendation = (post_reply_id,acronym,onto_link) => {\n    setFlag([]);\n    const divider = term.indexOf('-');\n    const from = Number(term.substring(0, divider))-1;\n    const to = Number(term.substring(divider+1, term.length));\n    console.log(\"while accpet\",from, 'asim',to);\n    clearTimeout(timeoutId);\n    updateTimeoutId(\n      setTimeout(() => recommendationFlag(documentId,post_reply_id,from,to,acronym,onto_link,\"1\",setFlag), 1000)\n    );\n    alert(\"Accepted\");\n    closeModal();\n    \n  };\n//reject recommendation\n  const rejectRecommendation = (post_reply_id) => {\n    setFlag([]);\n    const divider = term.indexOf('-');\n    const from = Number(term.substring(0, divider))-1;\n    const to = Number(term.substring(divider+1, term.length));\n    clearTimeout(timeoutId);\n    updateTimeoutId(\n      setTimeout(() => recommendationFlag(documentId,post_reply_id,from,to,\"\",\"\", \"-1\",setFlag), 1000)\n    );\n\n    alert(\"rejected\");\n    closeModal();\n  };\n\n  console.log(\"check data\", checkData);\n\n  return (\n    <>\n    <Modal\n      show={true}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Recommendations\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Accordion defaultActiveKey={`${\"1\"}-modal-0`} id=\"sidebar-accordion\">\n          <FormControl\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"mr-2 mb-3\"\n            aria-label=\"Search\"\n          />\n          {checkData.map((element, index) => {\n            return (\n              <Card>\n                <Accordion.Toggle\n                  as={Card.Header}\n                  eventKey={`${index}-modal-0`}\n                  className={`d-flex justify-content-between modal-toggle-`}\n                >\n                  <span>{element.terminology}</span>\n                  <div>\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      onClick={()=>acceptRecommendation(element.post_reply_id,element.ontology,element.onto_link)\n                      }\n                    >\n                      Accept\n                    </Button>{\" \"}\n                    <Button\n                      variant=\"outline-info\"\n                      size=\"sm\"\n                      onClick={() =>rejectRecommendation(element.post_reply_id)\n                      }\n                    >\n                      Reject\n                    </Button>\n                  </div>\n                </Accordion.Toggle>\n                <Accordion.Collapse\n                  eventKey={`${index}-modal-0`}\n                  className={`p-2 p-0 accordion-card`}\n                >\n                  <Container>\n                    <Row>\n                      <Col\n                        style={{\n                          fontWeight: \"bold\",\n                          color: \"green\",\n                          fontSize: 16,\n                        }}\n                      >\n                        Expert Confidence Level:\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>{element.confidence_score}%</Col>\n                    </Row>\n                    <Row>\n                      <Col\n                        style={{\n                          fontWeight: \"bold\",\n                          color: \"green\",\n                          fontSize: 16,\n                        }}\n                      >\n                        Recommended Ontology:\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>{element.ontology}</Col>\n                    </Row>\n                    <Row>\n                      <Col\n                        style={{\n                          fontWeight: \"bold\",\n                          color: \"green\",\n                          fontSize: 16,\n                        }}\n                      >\n                        <a\n                          href={\n                            element.ontology_link +\n                            \"?apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f\"\n                          }\n                          target={\"_blank\"}\n                        >\n                          Ontology Link:\n                        </a>\n                      </Col>\n                    </Row>\n                    {/* <Row>\n                      <Col>{element.ontology_link}</Col>\n                    </Row> */}\n                    <Row>\n                      <Col\n                        style={{\n                          fontWeight: \"bold\",\n                          color: \"green\",\n                          fontSize: 16,\n                        }}\n                      >\n                        Expert Reponse:\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>{element.reply_content}</Col>\n                    </Row>\n                  </Container>\n                </Accordion.Collapse>\n              </Card>\n            );\n          })}\n        </Accordion>\n        {/* <div className=\"text-right\"><Button variant=\"link\" style={{'box-shadow': 'none'}} onClick={() => askQuestion()}>{'Ask question'}</Button></div> */}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={closeModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n    </>\n  );\n};\n\nexport default LookUp;\n","C:\\xampp\\htdocs\\Semantically-master\\src\\pages\\editor\\components\\PopupRecommendation.js",["731","732","733","734","735","736","737","738","739"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Modal, Input, Col, Row, Container } from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport { recommendationFlag } from \"../hooks/editor/documentAPI\";\n\nexport default function PopupRecommendation(props) {\n  let {\n    terminology,\n    reply_content,\n    post_reply_id,\n    ontology_link,\n    flag_1,\n    flag_2,\n    show,\n    onHide,\n    confidence_score,\n  } = props;\n\n  const [message, setmessage] = useState(null);\n  //const [show, setShow] = useState(true);\n  const [timeoutId, updateTimeoutId] = useState(0);\n  const [flag, setFlag] = useState(\"\");\n  //console.log(\"show is\", show);\n  const handleClose = () => onHide(false);\n  // const handleClose = () => {\n  //   //setShow(false);\n  // };\n  //const handleShow = () => setShow(true);\n  const acceptRecommendation = () => {\n    setFlag([]);\n    clearTimeout(timeoutId);\n    updateTimeoutId(\n      setTimeout(() => recommendationFlag(post_reply_id, flag_1, setFlag), 1000)\n    );\n    handleClose();\n  };\n\n  const rejectRecommendation = () => {\n    setFlag([]);\n    clearTimeout(timeoutId);\n    updateTimeoutId(\n      setTimeout(() => recommendationFlag(post_reply_id, flag_2, setFlag), 1000)\n    );\n\n    handleClose();\n    //alert(\"rejected\");\n  };\n\n  return (\n    <>\n      <div className=\"container \">\n        {/* <!--- Model Box ---> */}\n\n        <div className=\"model_box\">\n          <Modal\n            show={show}\n            //onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton onHide={onHide}>\n              <Modal.Title>Recommendation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {/* <form> */}\n              <div className=\"form-group border border-light\">\n                {/* <p style={{ fontWeight: \"bold\", color: \"red\" }}>Terminology</p> */}\n                <tr>\n                  <td\n                    style={{\n                      fontWeight: \"bold\",\n                      color: \"green\",\n                      fontSize: 20,\n                    }}\n                  >\n                    Terminology:\n                  </td>\n                  <td\n                    style={{\n                      fontWeight: \"bold\",\n                      color: \"black\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {terminology}\n                  </td>\n                </tr>\n              </div>\n\n              <div className=\"form-group border border-light  \">\n                {/* <p style={{ fontWeight: \"bold\", color: \"red\" }}>Terminology</p> */}\n                <tr>\n                  <td\n                    style={{\n                      fontWeight: \"bold\",\n                      color: \"green\",\n                      fontSize: 20,\n                    }}\n                  >\n                    Expert Confidence Level:\n                  </td>\n                  <td\n                    style={{\n                      fontWeight: \"bold\",\n                      color: \"black\",\n                      fontSize: 20,\n                    }}\n                  >\n                    {confidence_score}%\n                  </td>\n                </tr>\n              </div>\n\n              <div className=\"form-group mt-3 border border-light\">\n                <tr>\n                  <td\n                    style={{\n                      fontWeight: \"bold\",\n                      color: \"green\",\n                      fontSize: 20,\n                    }}\n                  >\n                    Expert Reply:\n                  </td>\n                </tr>\n                <tr>\n                  <td>{reply_content}</td>\n                </tr>\n              </div>\n\n              <div className=\"form-group mt-3 border border-light\">\n                <tr>\n                  <td\n                    style={{\n                      fontWeight: \"bold\",\n                      color: \"green\",\n                      fontSize: 20,\n                    }}\n                  >\n                    Ontology Link:\n                  </td>\n                </tr>\n                <tr>\n                  <td>{ontology_link}</td>\n                </tr>\n              </div>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"success\" onClick={acceptRecommendation}>\n                Accept\n              </Button>\n              <Button variant=\"secondary\" onClick={rejectRecommendation}>\n                Reject\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          {/* Model Box Finsihs */}\n        </div>\n      </div>\n    </>\n  );\n}\n\n// const LookUp = ({\n//   word,\n//   ontology,\n//   updateOpenPostModal,\n//   updateOpenLookUpModal,\n// }) => {\n//   const closeModal = () => updateOpenLookUpModal(false);\n//   const askQuestion = () => {\n//     closeModal();\n//     updateOpenPostModal(true);\n//   };\n\n//   return (\n//     <Modal\n//       show={true}\n//       size=\"md\"\n//       aria-labelledby=\"contained-modal-title-vcenter\"\n//       centered\n//     >\n//       <Modal.Header closeButton onHide={closeModal}>\n//         <Modal.Title id=\"contained-modal-title-vcenter\">{word}</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <Accordion defaultActiveKey={`${word}-modal-0`} id=\"sidebar-accordion\">\n//           <FormControl\n//             type=\"search\"\n//             placeholder=\"Search\"\n//             className=\"mr-2 mb-3\"\n//             aria-label=\"Search\"\n//           />\n//           <Card>\n//             <Accordion.Toggle\n//               as={Card.Header}\n//               eventKey={`${word}-modal-0`}\n//               className={`d-flex justify-content-between modal-toggle-`}\n//             >\n//               <span>{\"NCIT\"}</span>\n//               <div>\n//                 <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>\n//                   select\n//                 </Button>{\" \"}\n//                 <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>\n//                   open\n//                 </Button>\n//               </div>\n//             </Accordion.Toggle>\n//             <Accordion.Collapse\n//               eventKey={`${word}-modal-0`}\n//               className={`p-2 p-0 accordion-card`}\n//             >\n//               <Card>\n//                 <Card.Body>\n//                   <Card.Text>\n//                     {\n//                       \"Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.\"\n//                     }\n//                   </Card.Text>\n//                 </Card.Body>\n//               </Card>\n//             </Accordion.Collapse>\n//           </Card>\n//           <Card>\n//             <Accordion.Toggle\n//               as={Card.Header}\n//               eventKey={`${word}-modal-1`}\n//               className={`d-flex justify-content-between modal-toggle-`}\n//             >\n//               <span>{\"OMIT\"}</span>\n//               <div>\n//                 <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>\n//                   select\n//                 </Button>{\" \"}\n//                 <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>\n//                   open\n//                 </Button>\n//               </div>\n//             </Accordion.Toggle>\n//             <Accordion.Collapse\n//               eventKey={`${word}-modal-1`}\n//               className={`p-2 p-0 accordion-card`}\n//             >\n//               <Card>\n//                 <Card.Body>\n//                   <Card.Text>\n//                     {\n//                       \"Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.\"\n//                     }\n//                   </Card.Text>\n//                 </Card.Body>\n//               </Card>\n//             </Accordion.Collapse>\n//           </Card>\n//           <Card>\n//             <Accordion.Toggle\n//               as={Card.Header}\n//               eventKey={`${word}-modal-2`}\n//               className={`d-flex justify-content-between modal-toggle-`}\n//             >\n//               <span>{\"MELO\"}</span>\n//               <div>\n//                 <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>\n//                   select\n//                 </Button>{\" \"}\n//                 <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>\n//                   open\n//                 </Button>\n//               </div>\n//             </Accordion.Toggle>\n//             <Accordion.Collapse\n//               eventKey={`${word}-modal-2`}\n//               className={`p-2 p-0 accordion-card`}\n//             >\n//               <Card>\n//                 <Card.Body>\n//                   <Card.Text>\n//                     {\n//                       \"Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.\"\n//                     }\n//                   </Card.Text>\n//                 </Card.Body>\n//               </Card>\n//             </Accordion.Collapse>\n//           </Card>\n//         </Accordion>\n//         {/* <div className=\"text-right\"><Button variant=\"link\" style={{'box-shadow': 'none'}} onClick={() => askQuestion()}>{'Ask question'}</Button></div> */}\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button onClick={closeModal}>Close</Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// };\n","C:\\xampp\\htdocs\\Semantically\\src\\index.js",[],["740","741"],"C:\\xampp\\htdocs\\Semantically\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\App.js",["742","743"],"import './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport {BrowserRouter, Switch, Route, useParams} from 'react-router-dom';\n\nimport $ from 'jquery';\n\nimport {checkLoggedIn} from './pages/authentication/hooks/authenticate';\n\nimport Editor from './pages/editor/editor';\nimport Dashboard from './pages/dashboard/dashboard';\nimport Forum from './pages/forum/forum';\nimport Post from './pages/forum/post';\nimport Login from './pages/authentication/login';\nimport Logout from './pages/authentication/logout';\nimport Register from './pages/authentication/register';\nimport Survey from './pages/authentication/survey';\nimport Account from './pages/account/account';\n\nimport AlertMessage from './components/Alert';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [alert, setAlert] = useState({});\n  const appProps = {\n    loggedIn: loggedIn,\n    setLoggedIn: setLoggedIn,\n    alert: alert,\n    setAlert: setAlert,\n  };\n  \n  // Check if session still active\n  if (!loggedIn) checkLoggedIn(setLoggedIn);\n\n  return (\n    <>\n    {!$.isEmptyObject(alert) ? <AlertMessage {...appProps} /> : null}\n    <BrowserRouter><Switch>\n      <Route path=\"/login\" render={() => <Login {...appProps} />} />\n      <Route path=\"/logout\" render={() => <Logout {...appProps} />} />\n      <Route path=\"/register\" render={() => <Register {...appProps} />} />\n      <Route path=\"/survey\" component={Survey} />\n      <Route path=\"/myaccount\" component={Account} />\n      <Route path=\"/posts\" component={Forum} />\n      <Route path=\"/post/:postId\" component={Post} />\n      <Route path=\"/document/:documentId\" component={Editor} />\n      \n      <Route path=\"/\" render={() => <Dashboard {...appProps} />} />\n    </Switch></BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\editor.js",["744"],"C:\\xampp\\htdocs\\Semantically\\src\\components\\Alert.js",["745"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\post.js",["746","747","748","749","750","751","752","753"],"import React, { useEffect, useState } from \"react\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readPost, replyPost,postVoting } from \"./hooks/postAPI\";\r\nimport { element } from \"prop-types\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Post() {\r\n  const { postId } = useParams();\r\n  const [openAnswerModal, updateOpenAnswerModal] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [terminology, setTerminology] = useState(\"\");\r\n  const [ontology, setOntology] = useState(\"\");\r\n  const [context, setContext] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [replies, setReplies] = useState([]);\r\n  //Asim\r\n  const [timeoutId, updateTimeoutId] = useState(0);\r\n  const [st_vote, setVote] = useState(\"\");\r\n  const [allOntologies, updateAllOntologies] = useState({});\r\n  \r\n  const getReplies = (e) =>{\r\nconst replyArray = e.map(newArr => ({post_id: newArr.post_id }))\r\nconsole.log(replyArray);\r\n  }\r\n  const updateReplies = () => {\r\n    readPost(\r\n      postId,\r\n      (\r\n        {\r\n          post_title,\r\n          terminology,\r\n          curr_ontology,\r\n          post_content,\r\n          first_name,\r\n          last_name,\r\n        },\r\n        replies\r\n      ) => {\r\n        setTitle(post_title);\r\n        setTerminology(terminology);\r\n        setOntology(curr_ontology);\r\n        setContext(post_content);\r\n        setName(`${first_name} ${last_name}`);\r\n        setReplies(replies);\r\n      }\r\n    );\r\n  };\r\n\r\n  ///// fetch all acronuyms\r\n  useEffect(()=>{\r\n    $.ajax({\r\n      url: 'https://data.bioontology.org/ontologies?include=name,acronym&display_links=false&display_context=false&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f',\r\n      dataType: 'JSON',\r\n      xhrFields: {\r\n        withCredentials: false\r\n      },\r\n      success: data => {\r\n        const ontologies = {};\r\n        console.log(\"data\",data);\r\n        for (const ontology of data) {\r\n          ontologies[ontology['acronym']] = ontology['acronym'];\r\n        }\r\n        console.log(\"acronyms\",ontologies);\r\n        updateAllOntologies(ontologies);\r\n        \r\n      }});\r\n  },[]);\r\n\r\n  //Up vote\r\nconst insertVoting = (post_reply_id,vote_up,vote_down) => {\r\n    setVote([]);\r\n    console.log(\"post reply id vote\",post_reply_id);\r\n    clearTimeout(timeoutId);\r\n    updateTimeoutId(\r\n      setTimeout(() => postVoting(post_reply_id,vote_up,vote_down,setVote), 1000)\r\n    );\r\n    console.log(\"setvotre\",st_vote);\r\n  };\r\n\r\n\r\n  // fetch post info\r\n  useEffect(() => updateReplies(), [st_vote]);\r\n  \r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar />\r\n      <div id=\"post-panel\" className=\"mx-auto\">\r\n        <header>\r\n          <Card style={{ width: \"auto\" }}>\r\n            <Card.Header as=\"h5\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <span>{terminology}</span>\r\n                <span>{ontology}</span>\r\n              </div>\r\n            </Card.Header>\r\n            <Card.Body style={{ padding: \".5rem\" }}>\r\n              <div className=\"p-4\">\r\n                <Card.Title style={{ fontSize: \"2rem\" }}>{title}</Card.Title>\r\n                <Card.Subtitle className=\"mb-5 text-muted\">\r\n                  {name}\r\n                </Card.Subtitle>\r\n                <Card.Text>{context}</Card.Text>\r\n                <div className=\"text-right mt-4\">\r\n                  {console.log()}\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    size=\"lg\"\r\n                    onClick={() => updateOpenAnswerModal(true)}\r\n                  >\r\n                    Answer\r\n                  </Button>\r\n                  \r\n                  \r\n\r\n                  \r\n                  \r\n          \r\n                </div>\r\n              </div>\r\n            \r\n            </Card.Body>\r\n          </Card>\r\n        </header>\r\n        <main>\r\n          {openAnswerModal ? (\r\n            <AnswerModal\r\n              updateOpenAnswerModal={updateOpenAnswerModal}\r\n              postId={postId}\r\n              updateReplies={updateReplies}\r\n              allOntologies={allOntologies}\r\n            />\r\n          ) : null}\r\n          {console.log(\"reply_post\",replies)} \r\n          {replies.map(({ post_reply_id,ontology, reply_content, first_name, last_name,upvote,downvote }) => (\r\n            <Card style={{ width: \"auto\" }} className=\"mt-5\">\r\n              <Card.Body>\r\n                <Card.Title>{ontology}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{`${first_name} ${last_name}`}</Card.Subtitle>\r\n                <Card.Text>{reply_content}</Card.Text>\r\n                <div className=\"text-right\">\r\n                <strong>{upvote}&nbsp;&nbsp;&nbsp;</strong>\r\n                  <Button\r\n                    variant=\"outline-success\"\r\n                    size=\"sm\"\r\n                    className=\"mr-3\"\r\n                    onClick={()=>insertVoting(post_reply_id,'1','0')}\r\n                  >\r\n                    UpVote  \r\n                  </Button>\r\n                  <strong>{downvote}</strong>\r\n                  <Button\r\n                    variant=\"outline-danger\"\r\n                    size=\"sm\"\r\n                    className=\"ml-3\"\r\n                    onClick={() =>insertVoting(post_reply_id,'0','1')}\r\n                  >\r\n                    DownVote\r\n                  </Button>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AnswerModal({ postId, updateReplies, updateOpenAnswerModal,allOntologies }) {\r\n  const closeModal = () => updateOpenAnswerModal(false);\r\n  const [ontology, setOntology] = useState(\"NCIT\");\r\n  const [content, setContent] = useState(\"\");\r\n  ///// Add by asim\r\n  const [tree, setTree] = useState(null);\r\n  const [confidence, setConfidence] = useState(0);\r\n  const [ontology_link, setOntologyLink] = useState(\"\");\r\n  \r\n  //const [loadedAllOntologies, updateLoadedAllOntologies] = useState(false);\r\n  console.log(\"all ontology\",allOntologies);\r\n  console.log(\"ontology type\",typeof(allOntologies));\r\n\r\n  useEffect(() => {\r\n    console.log(ontology);\r\n    $(\"#tree\").remove();\r\n    $(\"#tree-container\").append(\"<div id='tree'></div>\");\r\n    let tree = window.jQuery(\"#tree\").NCBOTree({\r\n      apikey: \"89f4c54e-aee8-4af5-95b6-dd7c608f057f\",\r\n      ontology: ontology,\r\n      autoclose: true,\r\n      autocompleteClass: \"ncboAutocomplete\",\r\n      width: 500,\r\n      afterSelect: function (event, classId, prefLabel, selectedNode) {\r\n        console.log(\"id\", classId);\r\n        console.log(\"Node\", selectedNode);\r\n        console.log(\"prefLabel\", prefLabel[0][\"href\"]);\r\n        setOntologyLink(prefLabel[0][\"href\"]);\r\n      },\r\n    });\r\n  }, [ontology]);\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <Modal.Dialog size=\"lg\">\r\n      <Modal.Body>\r\n        <Form className=\"p-5\">\r\n          <Row className=\"mb-1\">\r\n            <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\r\n              <Form.Label>Select Ontology</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                size=\"md\"\r\n                value={ontology}\r\n                onChange={(evt) => setOntology(evt.target.value)}\r\n                custom\r\n              >\r\n                {Object.keys(allOntologies).map((key) => {return (<option value={key}>{key}</option>)})}\r\n                {/* <option value=\"VO\">VO</option>\r\n                <option value=\"DOID\">DOID</option>\r\n                <option value=\"GSSO\">GSSO</option>\r\n                <option value=\"ICPC2P\">ICPC2P</option>\r\n                <option value=\"BAO\">BAO</option>\r\n                <option value=\"NIFSTD\">NIFSTD</option>\r\n                <option value=\"COVID\">COVID-19</option>\r\n                <option value=\"OHPI\">OHPI</option>\r\n                <option value=\"DTO\">DTO</option>\r\n                <option value=\"OHMI\">OHMI</option>\r\n                <option value=\"OBIB\">OBIB</option>\r\n                <option value=\"VICO\">VICO</option>\r\n                <option value=\"KTAO\">KTAO</option>\r\n                <option value=\"EFO\">EFO</option>\r\n                <option value=\"HTN\">HTN</option>\r\n                <option value=\"RBO\">RBO</option>\r\n                <option value=\"ODAE\">ODAE</option>\r\n                <option value=\"MELO\">MELO</option>\r\n                <option value=\"NCIT\">NCIT</option>\r\n                <option value=\"IOBC\">IOBC</option>\r\n                <option value=\"CANCO\">CANCO</option>\r\n                <option value=\"CCONT\">CCONT</option>\r\n                <option value=\"NCRO\">NCRO</option> */}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Row>\r\n          <Container>\r\n            <Row>\r\n              <Col id=\"tree-container\">\r\n                <div id=\"tree\"></div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\r\n            <Form.Label column sm=\"6\">\r\n              <strong>Expert Confidence Level</strong> \r\n              <p>Min value =0 and Max value=10</p>\r\n            </Form.Label>\r\n            <Col sm=\"8\">\r\n              <RangeSlider\r\n              min={0}\r\n              max={10}\r\n                value={confidence}\r\n                onChange={(e) => setConfidence(e.target.value)}\r\n                tooltipLabel={(currentValue) => `${currentValue}`}\r\n                tooltip=\"on\"\r\n              />\r\n              \r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\r\n              <Form.Label>Reason</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={content}\r\n                onChange={(evt) => setContent(evt.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </Form>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={closeModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() =>{ontology_link != \"\" && confidence > 0 ?\r\n            replyPost(\r\n              postId,\r\n              ontology,\r\n              ontology_link,\r\n              content,\r\n              confidence,\r\n              () => {\r\n                updateReplies();\r\n                closeModal();\r\n              }\r\n            ):alert(\"select vocubulary and cofidence score\")\r\n          }\r\n          }\r\n        >\r\n          Post\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal.Dialog>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\logout.js",["754","755"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\login.js",["756","757","758","759"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\survey.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\forum.js",["760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\dashboard.js",["782"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\hooks\\authenticate.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\account\\account.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\authentication\\register.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\components\\Sidebar.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\appInfo.js",["783"],"import { getTermResults } from \"./pages/forum/hooks/postAPI\";\r\n\r\n// const apiAddress = 'https://api.gosemantically.com';\r\nconst apiAddress = \"http://localhost:8080/Semantically-master/api\";\r\n\r\nconst apiAddresses = {\r\n  checkLoggedIn: `${apiAddress}/authentication/loggedin.php`,\r\n  login: `${apiAddress}/authentication/login.php`,\r\n  logout: `${apiAddress}/authentication/logout.php`,\r\n  register: `${apiAddress}/authentication/register.php`,\r\n  createDocument: `${apiAddress}/document/create_document.php`,\r\n  deleteDocument: `${apiAddress}/document/delete_document.php`,\r\n  getDocuments: `${apiAddress}/document/get_documents.php`,\r\n  readDocument: `${apiAddress}/document/read_document.php`,\r\n  editDocument: `${apiAddress}/document/edit_document.php`,\r\n  createPost: `${apiAddress}/post/create_post.php`,\r\n  createDirectPost: `${apiAddress}/post/create_direct_post.php`,\r\n  getDirectPosts: `${apiAddress}/post/get_direct_posts.php`,\r\n  readPost: `${apiAddress}/post/read_post.php`,\r\n  replyPost: `${apiAddress}/post/reply_post.php`,\r\n  getPosts: `${apiAddress}/post/get_posts.php`,\r\n  getAllPosts: `${apiAddress}/post/get_all_posts.php`,\r\n  storeAnnotations: `${apiAddress}/document/store_annotations.php`,\r\n  deleteAllAnnotations: `${apiAddress}/document/delete_all_annotations.php`,\r\n  changeOntologySelection: `${apiAddress}/document/change_ontology_selection.php`,\r\n  changeDeleteAnnotation: `${apiAddress}/document/change_delete_annotation.php`,\r\n  getAnnotations: `${apiAddress}/document/get_annotations.php`,\r\n  checkRecommendation: `${apiAddress}/post/check_recommendation.php`,\r\n  recommendationFlag: `${apiAddress}/post/recommendation_flag.php`,\r\n  postVoting: `${apiAddress}/post/post_voting.php`,\r\n  deletePost: `${apiAddress}/post/delete_post.php`,\r\n  getUser_ID: `${apiAddress}/post/get_ID.php`,\r\n  getUserReplies: `${apiAddress}/post/get_replies.php`,\r\n  getTermResults: `${apiAddress}/post/get_replies_terms.php`,\r\n  getOntology: `${apiAddress}/post/get_ontology.php`,\r\n  getAllUsers: `${apiAddress}/post/get_users.php`\r\n};\r\n\r\nconst postAddresses = {\r\n  post: `${document.location.origin}/post`,\r\n};\r\n\r\nexport { apiAddresses, postAddresses };\r\n","C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\components\\ForumCard.js",["784","785","786"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\editorsHelper.js",["787","788","789"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\EditorSidebar.js",["790","791","792"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\hooks\\postAPI.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\alertMessages.js",["793"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\components\\DocumentCard.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\components\\modals\\NewDocumentModal.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\hooks\\dashboardAPIs.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\publish.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\forum\\components\\models\\DeletePostModel.js",["794","795","796","797"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\Sidebar.js",["798"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\editor\\DocumentEditor.js",["799","800","801","802","803","804"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\dashboard\\components\\modals\\DeleteDocumentModal.js",["805","806"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\editor\\documentAPI.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\getTermString.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\editor\\getAnnotationSelection.js",["807","808"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\downloadAnnotations.js",["809","810","811","812","813","814","815","816"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\editor\\Highlights.js",["817","818","819"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\RemoveAnnotationsModal.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarBody.js",["820","821","822"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarHeader.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\sortKeys.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\editor\\getRemovedHighlights.js",["823"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\getDefinition.js",[],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarAccordion.js",["824","825","826","827","828","829","830","831"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\ManualOntologySelector.js",["832","833","834"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\PopupRecommendation.js",["835","836","837","838","839","840","841","842","843"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\AskQuestion.js",["844","845","846","847","848","849","850"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\LookUp.js",["851","852","853","854"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\hooks\\sidebar\\getRecommenderAnnotations.js",["855"],"C:\\xampp\\htdocs\\Semantically\\src\\pages\\editor\\components\\sidebar\\SidebarLoader.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\index.js",[],["856","857"],"C:\\xampp\\htdocs\\Semantically-old\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\App.js",["858","859"],"C:\\xampp\\htdocs\\Semantically-old\\src\\components\\Alert.js",["860"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\editor.js",["861"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\logout.js",["862","863"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\login.js",["864","865","866","867"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\dashboard.js",["868"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\survey.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\forum.js",["869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891"],"import React, {useEffect, useState} from 'react';\r\nimport './forum.css';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport ForumCard from './components/ForumCard';\r\nimport {Button, Tabs, Tab, Dropdown, DropdownButton} from 'react-bootstrap';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {getPosts, getAllPosts, getDirectPosts, getUserReplies, getTermResults, getOntology, getAllUsers} from './hooks/postAPI';\r\nimport natural from \"natural\"\r\nimport * as d3 from \"d3\"\r\nimport nlp from \"compromise\"\r\n\r\nconst Forum = () => {\r\n\r\n  //This is where all states of data are instantiated. These are used to store data for the graph components and user inputs in the Knowledge Graph tab\r\n  //States are a react component which are\r\n  const [key, setKey] = useState('home');\r\n  const [posts, setPosts] = useState([]);\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const [directPosts, setDirectPosts] = useState([]);\r\n  const [searchForUser, setSearchUser] = useState(false);\r\n  const [searchMedicalTerm, setSearchMedicalTerm] = useState(false)\r\n  const [term, setTerm] = useState(false)\r\n  const [terminologyResults, setTerminologyResults] = useState([])\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [replies, setReplies] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [searchOntology, setSearchOntology] = useState([]);\r\n  const [title, setTitle] = useState(false)\r\n  const [ontology, setOntology] = useState(false)\r\n  const [ontologyResults, setOntologyResults] = useState([])\r\n    const[nodeArray, setNodeArray] = useState([]);\r\n    const[linkArray, setLinkArray] = useState([]);\r\n    const[userNameArray, setUserNameArray] = useState([])\r\n  let inputHandler = (e) => {\r\n\r\n    setInputData(e.target.value)\r\n\r\n  }\r\n\r\n  \r\n\r\n// add by asim for post deletion\r\nconst postCardProps = {\r\n  allPosts: allPosts,\r\n  setAllPosts: setAllPosts,\r\n  posts: posts,\r\n  //replies: replies,\r\n  setPosts:setPosts,\r\n  directPosts: directPosts,\r\n  setDirectPosts: setDirectPosts\r\n};\r\n\r\n//This function resets the graph data to avoid duplication of data. All data is reset so that it reflects the current data being used for visualization.\r\nconst resetGraph = () => {\r\n  setNodeArray([])\r\n  setLinkArray([])\r\n  setReplies([]) \r\n  \r\n  setTitle(false)\r\n}\r\n\r\nconst processNameQuery = (a) => {\r\n  var tokenizer = new natural.WordTokenizer()\r\n  const getName = tokenizer.tokenize(a)\r\n  let doc = nlp(a).people().text()\r\n  \r\n  console.log(getName)\r\n  console.log(doc)\r\n  return doc\r\n}\r\nconst processOntologyQuery = (a) =>{\r\n  var tokenizer = new natural.SentenceTokenizer()\r\n  const getOntology = natural.PorterStemmer.tokenizeAndStem(a)\r\n\r\n}\r\nconst processTermQuery = (a) =>{\r\n  let doc = nlp(a)\r\n  \r\n}\r\n//This function is invoked when the user clicks the search button. The function first resets the graph and then determines whether the input is an ontology, medical term or expert user.\r\n//Once it parses the meaning of the input, it then sends an api call for the relevant data from the database. The backend will return an array of data containing the data related to the input.\r\n//For example, if the search input is the name of an expert, it will return all of their replies to forum posts, the ontologies and terminologies they recommend and the critical reception of their answers from other community members.\r\nconst searchInput = (a) => {\r\n\r\n  resetGraph()\r\n  d3.selectAll(\"svg\").remove()\r\n  if(searchForUser) { \r\n  var name = processNameQuery(a)\r\n  setTitle(true)\r\n  \r\n  setName(name)\r\n  console.log(name)\r\n  var nameArray = name.split(\" \")\r\n  console.log(nameArray)\r\n  //Sends an api call to the database.\r\n  getUserReplies(nameArray[0], nameArray[1], replies => {\r\n\r\n    console.log(\"Retrieval of data successful\");\r\n    //This line of code updates the state of the replies array to the replies retrieved from the database. This will be used for when users click on a node, the replies array will be used to compare to the node's reply content and then redirect to the page that leads to the page with the corresponding post id.\r\n    setReplies(replies);\r\n    setName(replies[0].first_name+\" \"+replies[0].last_name)\r\n    //Push the root node first.\r\n    nodeArray.push({id: name, color: \"purple\"})\r\n  //For every object in the array, a node will be generated and linked to its related node.\r\n  {replies.map((val)=> {\r\n    //If statements are used to make sure that no two nodes with the same exact data can be replicated. In d3.js, if a node with the same exact data is found in the array used to generate the nodes, it will not link with any nodes and will float away.\r\n    if(!nodeArray.find(n => n.id === val.reply_content)){\r\n    nodeArray.push({id: val.reply_content, group: 1})\r\n    }\r\n    if(!nodeArray.find(n => n.id === val.ontology)){\r\n      nodeArray.push({id: val.ontology, group: 2})\r\n    }\r\n    if(!nodeArray.find(n => n.id === val.profile_rank)){\r\n    nodeArray.push({id: val.profile_rank, group: 3})\r\n    }\r\n    //Also, if statements are used to ensure that no null values are used.\r\n    if(!(val.vote_up == null)){\r\n      if(!nodeArray.find(n => n.id === val.vote_up)){\r\n      nodeArray.push({id: val.vote_up, group: 4})\r\n      \r\n      }\r\n      linkArray.push({source: val.vote_up, target: val.reply_content, value: 10, distance: 200})\r\n      \r\n      \r\n    }\r\n    if(!(val.vote_down == null)){\r\n      if(!nodeArray.find(n => n.id === val.vote_down)){\r\n      nodeArray.push({id: val.vote_down, group: 4})\r\n      \r\n      }\r\n      linkArray.push({source: val.vote_down, target: val.reply_content, value: 10, distance: 200})\r\n      \r\n      \r\n    }\r\n    \r\n     \r\n\r\n    linkArray.push({source: val.profile_rank, target: name, value: 10, distance: 200})\r\n\r\n    \r\n    linkArray.push({source: val.ontology, target: name, value: 10, distance: 200})\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    linkArray.push({source: val.reply_content, target: val.ontology, value: 10, distance: 200});\r\n    \r\n   \r\n    \r\n    \r\n   \r\n  }\r\n  \r\n  )\r\n  \r\n  }\r\n  //After all the nodeArray and LinkArray arrays are populated, the function will generate a graph with the data.\r\n  //The process is the same for the medical term and ontology inputs but with different data being retrieved from the api.\r\n  Chart(data, replies)\r\n  \r\n  });\r\n  \r\n}\r\nif(searchMedicalTerm){\r\n  resetGraph()\r\n  d3.selectAll(\"svg\").remove()\r\n  setTitle(true)\r\nconsole.log(\"Before flush\",nodeArray)\r\n\r\nconsole.log(\"After flush\",nodeArray)\r\nvar term = a;\r\nsetTerm(term)\r\ngetTermResults(term, terminology =>\r\n  {\r\n    console.log(\"Retrieval of data successful\", terminology);\r\n     setTerminologyResults(terminology)\r\n     console.log(terminologyResults)\r\n     nodeArray.push({id: term, group:5})\r\n     {terminology.map((val) => {\r\n      console.log(\"Start insertion\")\r\n      \r\n      if(!nodeArray.find(n => n.id === val.curr_ontology)){\r\n        nodeArray.push({id: val.curr_ontology, group: 1})\r\n      }\r\n      \r\n      nodeArray.push({id: val.post_content, group: 2})\r\n      \r\n      linkArray.push({source: val.curr_ontology, target: term, value: 10, distance: 200})\r\n      linkArray.push({source: val.post_content, target: val.curr_ontology, value: 10, distance: 200})\r\n      \r\n     \r\n     }\r\n      )\r\n     \r\n     }\r\n     Chart(data,terminology)\r\n  });\r\n  \r\n  \r\n}\r\n  //setNodeArray({id:a, color: \"red\"})\r\n  //displayGraph();\r\n  if(searchOntology){\r\n    \r\n    setTitle(true)\r\n  console.log(\"Before flush\",nodeArray)\r\n  \r\n  console.log(\"After flush\",nodeArray)\r\n  var ontology_term = a;\r\n  setOntology(ontology_term)\r\n  getOntology(ontology_term, ontology_result =>\r\n    {\r\n      console.log(\"Retrieval of data successful\", ontology_result);\r\n       setOntologyResults(ontology_result)\r\n       console.log(ontologyResults)\r\n       nodeArray.push({id: ontology_term, group:5})\r\n       {ontology_result.map((val) => {\r\n        console.log(\"Start insertion\")\r\n        if(!nodeArray.find(n => n.id === val.terminology)){\r\n        nodeArray.push({id: val.terminology,  group: 1})\r\n        }\r\n        if(!nodeArray.find(n => n.id === val.post_content)){\r\n        nodeArray.push({id: val.post_content, group: 2})\r\n        }\r\n        linkArray.push({source: val.terminology, target: ontology_term, value: 10, distance: 200})\r\n        linkArray.push({source: val.post_content, target: val.terminology, value: 10, distance: 200})\r\n        \r\n       \r\n       }\r\n        )\r\n       \r\n       }\r\n       Chart(data, ontology_result)\r\n    });\r\n    \r\n    \r\n  }\r\n}\r\n\r\n// This is the data that will be used for generating the nodes, links and their values to represent the data as a knowledge graph.\r\nconst data = {\r\n  \r\n  nodes: nodeArray,\r\n  links: linkArray,\r\n};\r\n//These functions are used for switching between different search query prompts when the user selects a dropdown item.\r\nconst openUserSearchBar = () => {\r\n     setSearchMedicalTerm(false)\r\n     setSearchOntology(false)\r\n     setSearchUser(true)\r\n}\r\nconst openMedicalTerm = () => {\r\n     setSearchUser(false)\r\n     setSearchOntology(false)\r\n     setSearchMedicalTerm(true)\r\n}\r\nconst openOntologySearchBar = () => {\r\n  setSearchOntology(true)\r\n  setSearchMedicalTerm(false)\r\n  setSearchUser(false)\r\n}\r\n\r\n//This function is for redirecting a user to a specific post based on the data from the node that was clicked.\r\nfunction redirectToPost (e, f){\r\nconsole.log(e[0].id)\r\nvar nodeData = e[0].id;\r\nf.map((val) => {\r\n\r\n   if(val.reply_content == nodeData)\r\n    window.open(\"http://localhost:3000/post/\"+val.post_id)\r\n\r\n   else if(val.post_content == nodeData)\r\n    window.open(\"http://localhost:3000/post/\"+val.post_id)\r\n\r\n   \r\n})\r\n \r\n\r\n}\r\n//------------------------------------------------------------------//\r\n//Graph Generation code\r\nconst Chart = (data, replyData) => {\r\n    \r\n  // Specify the dimensions of the chart.\r\n  const width = 1500;\r\n  const height = 800;\r\n\r\n  // Specify the color scale.\r\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n  // The force simulation mutates links and nodes, so create a copy\r\n  // so that re-evaluating this cell produces the same result.\r\n  const links = data.links.map(d => ({...d}));\r\n  const nodes = data.nodes.map(d => ({...d}));\r\n  console.log(\"Links\",links)\r\n  console.log(\"Nodes\",nodes)\r\n  // Create a simulation with several forces.\r\n  const simulation = d3.forceSimulation(nodes)\r\n      .force(\"link\", d3.forceLink(links).distance(linkDistance).id(d => d.id))\r\n      .force(\"charge\", d3.forceManyBody())\r\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\r\n      \r\n      .on(\"tick\", ticked);\r\n\r\n  // Create the SVG container.\r\n  const svg = d3.create(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .attr(\"viewBox\", [0, 0, width, height])\r\n      .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n\r\n  // Add a line for each link, and a circle for each node.\r\n  const link = svg.append(\"g\")\r\n      .attr(\"stroke\", \"#999\")\r\n      .attr(\"stroke-opacity\", 0.6)\r\n    .selectAll()\r\n    .data(links)\r\n    .join(\"line\")\r\n      .attr(\"stroke-width\", d => Math.sqrt(d.value))\r\n      .attr(\"stroke-length\", 100);\r\n\r\n  const node = svg.append(\"g\")\r\n      .attr(\"stroke\", \"#fff\")\r\n      .attr(\"stroke-width\", 1.5)\r\n    .selectAll()\r\n    .data(nodes)\r\n    .join(\"circle\")\r\n      .attr(\"r\", 40)\r\n      .attr(\"fill\", d => color(d.group))\r\n    .on(\"click\",function(d){\r\n      console.log(\"Clicked\",replyData)\r\n      \r\n      var data = d3.select(this).data()\r\n      console.log(data)\r\n      redirectToPost(data, replyData)\r\n        \r\n         \r\n      \r\n       \r\n      \r\n      \r\n      \r\n    });\r\n\r\n\r\n  node.append(\"title\")\r\n      .text(d => d.id);\r\n      \r\n      var label = svg.selectAll(\".mytext\")\r\n      .data(nodes)\r\n      .enter()\r\n      .append(\"text\")\r\n      //Sets the text for each node.\r\n        .text(function (d) { return d.id; })\r\n        .style(\"text-anchor\", \"middle\")\r\n        .style(\"fill\", \"#000\")\r\n        .style(\"font-family\", \"Arial\")\r\n        .style(\"font-size\", 16);\r\n   /*\r\n  const text = node.append(\"text\")\r\n  .text(function(d) { return d.id; });\r\n*/\r\n  // Add a drag behavior.\r\n  node.call(d3.drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended));\r\n  \r\n        \r\n  // Set the position attributes of links and nodes each time the simulation ticks.\r\n  function ticked() {\r\n    link\r\n        .attr(\"x1\", d => d.source.x)\r\n        .attr(\"y1\", d => d.source.y)\r\n        .attr(\"x2\", d => d.target.x)\r\n        .attr(\"y2\", d => d.target.y);\r\n\r\n    node\r\n        .attr(\"cx\", d => d.x)\r\n        .attr(\"cy\", d => d.y);\r\n    label\r\n        .attr(\"x\", function(d){ return d.x; })\r\n        .attr(\"y\", function (d) {return d.y - 10; });\r\n  }\r\n  function linkDistance(d) {\r\n    return d.distance;\r\n  }\r\n\r\n  // Reheat the simulation when drag starts, and fix the subject position.\r\n  function dragstarted(event) {\r\n    if (!event.active) simulation.alphaTarget(0.3).restart();\r\n    event.subject.fx = event.subject.x;\r\n    event.subject.fy = event.subject.y;\r\n  }\r\n\r\n  // Update the subject (dragged node) position during drag.\r\n  function dragged(event) {\r\n    event.subject.fx = event.x;\r\n    event.subject.fy = event.y;\r\n  }\r\n\r\n  // Restore the target alpha so the simulation cools after dragging ends.\r\n  // Unfix the subject position now that it’s no longer being dragged.\r\n  function dragended(event) {\r\n    if (!event.active) simulation.alphaTarget(0);\r\n    event.subject.fx = null;\r\n    event.subject.fy = null;\r\n  }\r\n\r\n  // When this cell is re-run, stop the previous simulation. (This doesn’t\r\n  // really matter since the target alpha is zero and the simulation will\r\n  // stop naturally, but it’s a good practice.)\r\n  \r\n  console.log(svg.node())\r\n  d3.select('#graph').append(()=>svg.node());\r\n  return svg.node();\r\n};\r\n\r\n\r\n\r\nconst [del, setDelete] = useState(false);\r\n\r\n  // fetch posts\r\n  useEffect(() => getPosts(posts => {\r\n    // sort posts\r\n    posts.sort((post1, post2) => post2.responses - post1.responses);\r\n    setPosts(posts);\r\n  }), []);\r\n  useEffect(() => getAllPosts(posts => setAllPosts(posts)), []);\r\n  useEffect(() => getDirectPosts(posts => setDirectPosts(posts)), []);\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar />\r\n      <div id=\"home-panel\">\r\n        <header>\r\n          <Button variant=\"light\" size=\"lg\" disabled>Ask Question</Button>\r\n        </header>\r\n        <main className=\"d-flex flex-column\">\r\n        <Tabs\r\n          id=\"controlled-tab-example\"\r\n          activeKey={key}\r\n          onSelect={(k) => setKey(k)}>\r\n          <Tab eventKey=\"home\" title=\"My Questions\">\r\n            <div className=\"py-4\">\r\n            {posts.map(post => <ForumCard {...post} publicPost={false} {...postCardProps}/>)}\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"public\" title=\"Public\">\r\n            <div className=\"py-4\">\r\n              {allPosts.map(post => <ForumCard {...post} publicPost={true} {...postCardProps}/>)}\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"direct_questions\" title=\"Direct Questions\">\r\n            <div className=\"py-4\">\r\n              {directPosts.map(post => <ForumCard {...post} publicPost={false} {...postCardProps}/>)}\r\n            </div> \r\n          </Tab>\r\n          \r\n\r\n          {/* \r\n          From down here, you will find the code that defines the knowledge graph tab.\r\n          \r\n\r\n          */}\r\n          <Tab eventKey=\"knowledge_graph\" title=\"Knowledge Graph\">\r\n          <div class=\"jumbotron bg-dark text-white\">\r\n\r\n\r\n          <h1> Knowledge Graph </h1>\r\n          </div>\r\n        <p> Choose what to search for and input to the search bar for results. To redirect to a post, click on a node.</p>\r\n\r\n        {/* Dropdown component for the user to select between different search query types (Expert, Medical term, Ontology) */}\r\n         <Dropdown>\r\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n        Search type\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => openUserSearchBar()}> User </Dropdown.Item>\r\n        <Dropdown.Item onClick={() => openMedicalTerm()}> Medical term </Dropdown.Item>\r\n        <Dropdown.Item onClick={() => openOntologySearchBar()}> Ontology </Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n         \r\n          {searchForUser ?\r\n          (\r\n\r\n            <div className=\"py-4\">\r\n              <h2> Search for a user</h2>\r\n            <TextField\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          onChange={inputHandler}\r\n          label=\"Search for an expert\"\r\n        />\r\n        <Button onClick={() => searchInput(inputData)}> Search </Button>\r\n        </div>\r\n          ):null}\r\n\r\n          \r\n          {searchMedicalTerm ?\r\n          (\r\n            <div className=\"py-4\">\r\n              <h2> Search for a medical term</h2>\r\n            <TextField\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          onChange={inputHandler}\r\n          label=\"Search for a medical term\"\r\n        />\r\n        <Button onClick={() => searchInput(inputData)}> Search </Button>\r\n        </div>\r\n          ):null}\r\n\r\n{searchOntology ?\r\n          (\r\n\r\n            <div className=\"py-4\">\r\n              <h2> Search for an ontology</h2>\r\n            <TextField\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          onChange={inputHandler}\r\n          label=\"Search for an ontology\"\r\n        />\r\n        <Button onClick={() => searchInput(inputData)}> Search </Button>\r\n        </div>\r\n          ):null}\r\n            <div className=\"py-4\">\r\n            \r\n        \r\n            \r\n            \r\n           \r\n            {title ? (\r\n              \r\n                 <h2> Search results for: {name} </h2>\r\n            ) :null}\r\n            <div>\r\n              <button type=\"button\" class=\"btn btn-success\" onClick={() => processNameQuery()}> Test </button>\r\n            </div>\r\n       <div id=\"graph\">\r\n\r\n       </div>\r\n       {replies.map((val) =>{\r\n        <li> {val.post_reply_id}</li>\r\n       })}\r\n            \r\n  \r\n                  \r\n              </div>\r\n\r\n\r\n            </Tab>\r\n            \r\n        </Tabs>\r\n\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forum;\r\n","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\post.js",["892","893","894","895","896","897","898","899"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\register.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\authentication\\hooks\\authenticate.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\account\\account.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\components\\Sidebar.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\appInfo.js",["900"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\components\\modals\\NewDocumentModal.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\components\\DocumentCard.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\alertMessages.js",["901"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\EditorSidebar.js",["902","903","904"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\components\\ForumCard.js",["905","906","907"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\hooks\\dashboardAPIs.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\editorsHelper.js",["908","909","910"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\hooks\\postAPI.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\dashboard\\components\\modals\\DeleteDocumentModal.js",["911","912"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\publish.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\editor\\DocumentEditor.js",["913","914","915","916","917","918"],"import 'trix/dist/trix';\r\nimport 'trix/dist/trix.css';\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport $ from 'jquery';\r\nimport { TrixEditor } from \"react-trix\";\r\nimport RemoveAnnotationsModal from '../sidebar/RemoveAnnotationsModal';\r\n\r\nimport Highlights from './Highlights';\r\nimport {readDocument, editDocument} from '../../hooks/editor/documentAPI';\r\nimport {\r\n  Card,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst DocumentEditor = editorProps => {\r\n  const {documentId, content, updateContent, editor, updateEditor, annotations, resetAnnotations} = editorProps;\r\n  \r\n  const [awaitingContent, updateAwaitingContent] = useState(\"\");\r\n  const trixEditorProps = {\r\n    value: content,\r\n    placeHolder: 'Enter text here...',\r\n    onChange: (html, newContent) => {\r\n      if (!$.isEmptyObject(annotations) && !awaitingContent) {\r\n        console.log(\"new content\",newContent);\r\n        updateAwaitingContent(newContent);\r\n        editor.undo();\r\n        updateShowRemoveAnnotationsModalC(true);\r\n      } \r\n      else updateContent(newContent);\r\n    },\r\n    onEditorReady: editor => updateEditor(editor) && editor.insertString(content),\r\n    autoFocus: true,\r\n    awaitingContent: awaitingContent\r\n  };\r\n  const [contentRetrived, updateContentRetrieved] = useState(false);\r\n  const [retrievingContent, updateRetrievingContent] = useState(false);\r\n  const [showRemoveAnnotationsModalC, updateShowRemoveAnnotationsModalC] = useState(false);\r\n  const [contentSize, updateContentSize] = useState(false);\r\n\r\n  // fetch document content\r\n  if (!contentRetrived && !retrievingContent) {\r\n    updateRetrievingContent(true);\r\n    readDocument(documentId,\r\n      content => {\r\n        updateContent(content);\r\n        updateContentRetrieved(true);\r\n      });\r\n  }\r\n\r\n  const [timeoutId, updateTimeoutId] = useState(0);\r\n  useEffect(() => {\r\n    if(content.split(' ').length < 500){\r\n    if (contentRetrived) {\r\n      clearTimeout(timeoutId);\r\n      updateTimeoutId(setTimeout(() => editDocument(documentId, content), 1000));\r\n    }}\r\n    else{\r\n      console.log(\"content length is\",content.split(' ').length);\r\n      updateContentSize(true);\r\n    }\r\n  }, [content]);\r\n\r\n  useEffect(() => {\r\n    if (!showRemoveAnnotationsModalC) {\r\n      updateAwaitingContent('');\r\n    }\r\n  }, [showRemoveAnnotationsModalC]);\r\n  const removeAnnotationMsg = \"Semantically doesn't yet support maintaining annotations on dynamic content. To proceed with edits, all annotations will be removed. This operation is permanent!\";\r\n\r\n  return (\r\n    <div>\r\n      \r\n      {contentRetrived ?\r\n        <>\r\n          <TrixEditor {...trixEditorProps} />\r\n          <Highlights {...editorProps} />\r\n        </> : null\r\n      }\r\n      {showRemoveAnnotationsModalC ? <RemoveAnnotationsModal documentId={documentId}\r\n      resetAnnotations={resetAnnotations} \r\n      updateShowRemoveAnnotationsModal={updateShowRemoveAnnotationsModalC} \r\n      callback={() => {updateContent(awaitingContent); editor.redo();}}\r\n      removeAnnotationMsg={removeAnnotationMsg} /> : null}\r\n      {contentSize ? (<CheckContentSize updateContentSize={updateContentSize}/>) : null }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CheckContentSize({updateContentSize}){\r\n  const closeModal = () => updateContentSize(false);\r\n  return (\r\n    <>\r\n    <Modal\r\n          show={true}\r\n          onHide={closeModal}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Content Size</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        Content Word Size must be less than 100\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={closeModal}>OK</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default DocumentEditor;\r\n","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\forum\\components\\models\\DeletePostModel.js",["919","920","921","922"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\Sidebar.js",["923"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\editor\\documentAPI.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\getTermString.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\editor\\getAnnotationSelection.js",["924","925"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\downloadAnnotations.js",["926","927","928","929","930","931","932","933"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarBody.js",["934","935","936"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarHeader.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\editor\\Highlights.js",["937","938","939"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\RemoveAnnotationsModal.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\sortKeys.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\getDefinition.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarAccordion.js",["940","941","942","943","944","945","946","947"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\ManualOntologySelector.js",["948","949","950"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\editor\\getRemovedHighlights.js",["951"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\PopupRecommendation.js",["952","953","954","955","956","957","958","959","960"],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\AskQuestion.js",["961","962","963","964","965","966","967"],"import React,{useState} from 'react';\r\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl, Dropdown} from 'react-bootstrap';\r\nimport {createPost} from '../../forum/hooks/postAPI';\r\nimport {postAddresses} from '../../../appInfo';\r\nimport {Link} from \"react-router-dom\";\r\nimport {createDirectPost} from '../../forum/hooks/postAPI';\r\n\r\nconst AskQuestion = ({word, ontology, updateOpenPostModal, currentHighlight, annotationSelection, annotations, expert, updateShowExpert, showExpert, updateExpert}) => {\r\n  \r\n  const [context, updateContext] = useState(\"\");\r\n  const [expertID, updateExpertID] = useState(0);\r\n  const questions = [\r\n    \"Which ontology should I use?\",\r\n    \"What is the suitable ontology vocabulary?\",\r\n    \"Does this ontology best describe this terminology?\"\r\n  ];\r\n  const [question, updateQuestion] = useState(0);\r\n  const [questionOntology, updateQuestionOntology] = useState(annotationSelection[currentHighlight]);\r\n\r\n  const acronyms = annotations[currentHighlight].reduce((ontologies, ontology) => ontologies.concat(ontology.acronym), []);\r\n\r\n  const closeModal = () => updateOpenPostModal(false);\r\n\r\n  const submit = () => {\r\n    updateExpertID(expert[0])\r\n    if(showExpert){\r\n      alert(expert[0])\r\n      createDirectPost(questions[question], word, acronyms[questionOntology], context, expert[0], post_id => {\r\n         window.open(`${postAddresses.post}/${post_id}`,\"_self\");\r\n         closeModal();\r\n       });\r\n    }\r\n    else {\r\n    createPost(questions[question], word, acronyms[questionOntology], context, post_id => {\r\n     window.open(`${postAddresses.post}/${post_id}`,\"_self\");\r\n      closeModal();\r\n    \r\n    });\r\n  }\r\n  }\r\n  return (\r\n    <Modal\r\n      show={true}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      \r\n    >\r\n      <Modal.Header closeButton onHide={closeModal}>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {'Ask Question'}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"px-5\">\r\n        \r\n        <Form>\r\n         \r\n         {showExpert ? (\r\n          <div>\r\n            <table id = \"tableFormat\" class = \"table\">\r\n              <th  id = \"headerRow\"> Expert Credentials </th>\r\n              <tbody> \r\n                  <tr>\r\n                    <th> ID </th>\r\n                    <th> User name </th>\r\n                    <th> Weighted score</th>\r\n                    <th> Similarity score</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{expert[0]}</td>\r\n                    <td>{expert[1]}</td>\r\n                    <td>{expert[2]}</td>\r\n                    <td>{expert[3]}</td>\r\n                  </tr>\r\n              </tbody>\r\n            </table> \r\n         </div>\r\n         ):null\r\n         \r\n         }\r\n       \r\n        <Row className=\"mb-1\">\r\n          <Form.Group as={Col} controlId=\"term\">\r\n            <Form.Label>Terminology</Form.Label>\r\n            <Form.Control type=\"text\" value={word} disabled />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\r\n            <Form.Label>Question</Form.Label>\r\n            <Form.Control as=\"select\" size=\"md\" value={question} onChange={evt => updateQuestion(evt.target.value)} custom>\r\n            \r\n              {questions.map((question, index) => <option value={index}>{question}</option>)}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-1\">\r\n          <Form.Group as={Col} controlId=\"term\">\r\n            <Form.Label>Please explain</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} value={context} onChange={evt => updateContext(evt.target.value)} placeholder=\"Elaborate on your question...\" />\r\n          </Form.Group>\r\n        </Row>\r\n        {question == 2 ?\r\n        <Row className=\"mb-1\">\r\n        <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\r\n          <Form.Label>Select Ontology</Form.Label>\r\n          <Form.Control as=\"select\" size=\"md\" value={questionOntology} onChange={evt => updateQuestionOntology(evt.target.value)} custom>\r\n            {acronyms.map((acronym, idx) => <option value={idx}>{acronym}</option>)}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        </Row> : null }\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n      <Button onClick={closeModal} variant=\"secondary\">Close</Button>\r\n    <Button variant=\"primary\" onClick={() => submit()}>Submit</Button>\r\n    \r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AskQuestion;\r\n","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\LookUp.js",["968","969","970","971"],"import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Modal,\r\n  Row,\r\n  Form,\r\n  Col,\r\n  Accordion,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { recommendationFlag} from \"../hooks/editor/documentAPI\";\r\n//import EditorHelper from \"./components/editorsHelper\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst LookUp = ({ checkData, term,updateOpenLookUpModal }) => {\r\n  const { documentId } = useParams();\r\n  // const documentId = '2';\r\n  console.log(\"docid\", documentId);\r\n  const [flag, setFlag] = useState(\"\");\r\n  //const [calleditor, setEditor] = useState(false);\r\n  const [timeoutId, updateTimeoutId] = useState(0);\r\n  const closeModal = () => {updateOpenLookUpModal(false);}\r\n  const askQuestion = () => {\r\n    closeModal();\r\n    //updateOpenPostModal(true);\r\n  };\r\n\r\n  //Accept recommendation\r\n  const acceptRecommendation = (post_reply_id,acronym,onto_link) => {\r\n    setFlag([]);\r\n    const divider = term.indexOf('-');\r\n    const from = Number(term.substring(0, divider))-1;\r\n    const to = Number(term.substring(divider+1, term.length));\r\n    console.log(\"while accpet\",from, 'asim',to);\r\n    clearTimeout(timeoutId);\r\n    updateTimeoutId(\r\n      setTimeout(() => recommendationFlag(documentId,post_reply_id,from,to,acronym,onto_link,\"1\",setFlag), 1000)\r\n    );\r\n    alert(\"Accepted\");\r\n    closeModal();\r\n    \r\n  };\r\n//reject recommendation\r\n  const rejectRecommendation = (post_reply_id) => {\r\n    setFlag([]);\r\n    const divider = term.indexOf('-');\r\n    const from = Number(term.substring(0, divider))-1;\r\n    const to = Number(term.substring(divider+1, term.length));\r\n    clearTimeout(timeoutId);\r\n    updateTimeoutId(\r\n      setTimeout(() => recommendationFlag(documentId,post_reply_id,from,to,\"\",\"\", \"-1\",setFlag), 1000)\r\n    );\r\n\r\n    alert(\"rejected\");\r\n    closeModal();\r\n  };\r\n\r\n  console.log(\"check data\", checkData);\r\n\r\n  return (\r\n    <>\r\n    <Modal\r\n      show={true}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton onHide={closeModal}>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Recommendations\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Accordion defaultActiveKey={`${\"1\"}-modal-0`} id=\"sidebar-accordion\">\r\n          <FormControl\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            className=\"mr-2 mb-3\"\r\n            aria-label=\"Search\"\r\n          />\r\n          {checkData.map((element, index) => {\r\n            return (\r\n              <Card>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={`${index}-modal-0`}\r\n                  className={`d-flex justify-content-between modal-toggle-`}\r\n                >\r\n                  <span>{element.terminology}</span>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"outline-primary\"\r\n                      size=\"sm\"\r\n                      onClick={()=>acceptRecommendation(element.post_reply_id,element.ontology,element.onto_link)\r\n                      }\r\n                    >\r\n                      Accept\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      variant=\"outline-info\"\r\n                      size=\"sm\"\r\n                      onClick={() =>rejectRecommendation(element.post_reply_id)\r\n                      }\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </div>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse\r\n                  eventKey={`${index}-modal-0`}\r\n                  className={`p-2 p-0 accordion-card`}\r\n                >\r\n                  <Container>\r\n                    <Row>\r\n                      <Col\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"green\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Expert Confidence Level:\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>{element.confidence_score}%</Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"green\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Recommended Ontology:\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>{element.ontology}</Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"green\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        <a\r\n                          href={\r\n                            element.ontology_link +\r\n                            \"?apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f\"\r\n                          }\r\n                          target={\"_blank\"}\r\n                        >\r\n                          Ontology Link:\r\n                        </a>\r\n                      </Col>\r\n                    </Row>\r\n                    {/* <Row>\r\n                      <Col>{element.ontology_link}</Col>\r\n                    </Row> */}\r\n                    <Row>\r\n                      <Col\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          color: \"green\",\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Expert Reponse:\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>{element.reply_content}</Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Accordion>\r\n        {/* <div className=\"text-right\"><Button variant=\"link\" style={{'box-shadow': 'none'}} onClick={() => askQuestion()}>{'Ask question'}</Button></div> */}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={closeModal}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LookUp;\r\n","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\Personalize.js",["972","973","974","975","976","977","978","979","980","981","982","983","984","985"],"import React,{useState, state, useEffect} from 'react';\nimport {Component} from 'react'\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl, Dropdown} from 'react-bootstrap';\nimport AskQuestion from './AskQuestion';\nimport {postAddresses} from '../../../appInfo';\nimport { getUser_ID } from '../hooks/editor/documentAPI';\nimport $ from \"jquery\";\n\nconst Personalize = ({updatePersonalize, updateOpenPostModal, expert, updateShowExpert, updateExpert, updateID, ID}) => {\n    \n       \n       \n       \n       \n       \n      \n       \n       \n       const [data, setData] = useState([])\n       //This function retrieves data from a web server that has the data for experts and their names and ranks.\n       //This code currently does not work as the web server hosting this data requires private access.\n       const fetchData = () => {\n       \n        //Add conditional statement \n        var url = \"https://recommend.gosemantically.com/searchExpert/\"+ID;\n        \n        fetch(url)\n        //Grab the api data\n        .then((response) => response.json())\n        //Then, add it to the array by updating the state.\n        .then((newData)=> setData(newData.message[0]))\n        console.log(data)\n        \n        console.log(\"It works\")\n       }\n       \n       const closeModal = () => updatePersonalize(false);\n       const goToAskQuestionModal = (e) => {\n        closeModal();\n        updateOpenPostModal(true)\n        updateExpert(true)\n        updateShowExpert(e)\n        \n       }\n       return (\n           <div>\n\n            {/* When the dropdown item for personalized recommendations is clicked in the document editor interface, it will open this modal and prompt the user to select an expert.*/}\n             <Modal \n             show={true}\n             size=\"lg\"\n             aria-labelledby=\"contained-modal-title-vcenter\"\n             centered\n             onShow = {fetchData}\n             >\n                <Modal.Header closeButton onHide={closeModal}>\n                    <Modal.Title id=\"contained-modal-title-vcenter\"> Recommended Experts </Modal.Title>\n                    \n                </Modal.Header>\n                <Modal.Body className=\"px-5\">\n                \n                    <h2 id = \"title\"> List of Experts </h2>\n             <table id = \"tableFormat\" class = \"table\">\n             <tbody>\n              <tr id = \"headerRow\">\n                 <th> User_ID </th>\n                 <th> Name </th>\n                 <th> Weighted Score </th>\n                 <th> Similarity Score </th>\n              </tr>\n              \n              {data.map((val)=> (\n                    \n                   \n                    <tr key={val.id}>\n                       <td > {val.user_id} </td>\n                       <td > {val.user_name} </td>\n                       <td > {val.Weighted_Score} </td>\n                       <td > {val.similarity_score} </td>\n                       <Button variant = \"primary\" onClick={() => goToAskQuestionModal([val.user_id, val.user_name, val.Weighted_Score,val.similarity_score])}> Select </Button> \n                    </tr>\n                   \n                  ))\n                \n                  }\n                   \n                 \n                 \n              </tbody>\n             </table>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button onClick={closeModal} variant=\"secondary\">Close</Button>\n                \n              \n                </Modal.Footer>\n             </Modal>\n             \n             </div>\n       );\n\n}\n\n\n\nexport default Personalize;\n\n\n","C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\components\\sidebar\\SidebarLoader.js",[],"C:\\xampp\\htdocs\\Semantically-old\\src\\pages\\editor\\hooks\\sidebar\\getRecommenderAnnotations.js",["986"],{"ruleId":"987","replacedBy":"988"},{"ruleId":"989","replacedBy":"990"},{"ruleId":"991","severity":1,"message":"992","line":3,"column":27,"nodeType":"993","messageId":"994","endLine":3,"endColumn":36},{"ruleId":"991","severity":1,"message":"995","line":4,"column":39,"nodeType":"993","messageId":"994","endLine":4,"endColumn":48},{"ruleId":"991","severity":1,"message":"996","line":5,"column":10,"nodeType":"993","messageId":"994","endLine":5,"endColumn":14},{"ruleId":"997","severity":1,"message":"998","line":45,"column":39,"nodeType":"999","endLine":45,"endColumn":41,"suggestions":"1000"},{"ruleId":"991","severity":1,"message":"992","line":3,"column":27,"nodeType":"993","messageId":"994","endLine":3,"endColumn":36},{"ruleId":"991","severity":1,"message":"1001","line":2,"column":10,"nodeType":"993","messageId":"994","endLine":2,"endColumn":21},{"ruleId":"997","severity":1,"message":"1002","line":7,"column":40,"nodeType":"999","endLine":7,"endColumn":42,"suggestions":"1003"},{"ruleId":"991","severity":1,"message":"1004","line":5,"column":38,"nodeType":"993","messageId":"994","endLine":5,"endColumn":52},{"ruleId":"991","severity":1,"message":"1005","line":8,"column":10,"nodeType":"993","messageId":"994","endLine":8,"endColumn":15},{"ruleId":"991","severity":1,"message":"1006","line":9,"column":9,"nodeType":"993","messageId":"994","endLine":9,"endColumn":13},{"ruleId":"991","severity":1,"message":"1007","line":20,"column":10,"nodeType":"993","messageId":"994","endLine":20,"endColumn":14},{"ruleId":"991","severity":1,"message":"1008","line":27,"column":10,"nodeType":"993","messageId":"994","endLine":27,"endColumn":18},{"ruleId":"1009","severity":1,"message":"1010","line":77,"column":3,"nodeType":"1011","messageId":"1012","endLine":129,"endColumn":4},{"ruleId":"1013","severity":1,"message":"1014","line":77,"column":21,"nodeType":"1015","messageId":"1016","endLine":77,"endColumn":23},{"ruleId":"1009","severity":1,"message":"1010","line":150,"column":6,"nodeType":"1011","messageId":"1012","endLine":166,"endColumn":7},{"ruleId":"1013","severity":1,"message":"1014","line":150,"column":29,"nodeType":"1015","messageId":"1016","endLine":150,"endColumn":31},{"ruleId":"1009","severity":1,"message":"1010","line":188,"column":8,"nodeType":"1011","messageId":"1012","endLine":202,"endColumn":9},{"ruleId":"1013","severity":1,"message":"1014","line":188,"column":35,"nodeType":"1015","messageId":"1016","endLine":188,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":235,"column":13,"nodeType":"1015","messageId":"1016","endLine":235,"endColumn":15},{"ruleId":"1017","severity":1,"message":"1018","line":236,"column":23,"nodeType":"1019","messageId":"1020","endLine":236,"endColumn":25},{"ruleId":"1017","severity":1,"message":"1018","line":238,"column":24,"nodeType":"1019","messageId":"1020","endLine":238,"endColumn":26},{"ruleId":"1017","severity":1,"message":"1018","line":240,"column":25,"nodeType":"1019","messageId":"1020","endLine":240,"endColumn":27},{"ruleId":"991","severity":1,"message":"1021","line":386,"column":8,"nodeType":"993","messageId":"994","endLine":386,"endColumn":11},{"ruleId":"991","severity":1,"message":"1022","line":386,"column":13,"nodeType":"993","messageId":"994","endLine":386,"endColumn":22},{"ruleId":"1013","severity":1,"message":"1014","line":496,"column":27,"nodeType":"1015","messageId":"1016","endLine":496,"endColumn":29},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1024","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":12},{"ruleId":"991","severity":1,"message":"1025","line":5,"column":13,"nodeType":"993","messageId":"994","endLine":5,"endColumn":16},{"ruleId":"991","severity":1,"message":"1026","line":5,"column":25,"nodeType":"993","messageId":"994","endLine":5,"endColumn":29},{"ruleId":"991","severity":1,"message":"1027","line":16,"column":10,"nodeType":"993","messageId":"994","endLine":16,"endColumn":17},{"ruleId":"991","severity":1,"message":"1006","line":17,"column":9,"nodeType":"993","messageId":"994","endLine":17,"endColumn":13},{"ruleId":"991","severity":1,"message":"1028","line":33,"column":9,"nodeType":"993","messageId":"994","endLine":33,"endColumn":19},{"ruleId":"997","severity":1,"message":"1029","line":94,"column":36,"nodeType":"999","endLine":94,"endColumn":45,"suggestions":"1030"},{"ruleId":"991","severity":1,"message":"1031","line":186,"column":10,"nodeType":"993","messageId":"994","endLine":186,"endColumn":14},{"ruleId":"991","severity":1,"message":"1032","line":186,"column":16,"nodeType":"993","messageId":"994","endLine":186,"endColumn":23},{"ruleId":"991","severity":1,"message":"1031","line":198,"column":9,"nodeType":"993","messageId":"994","endLine":198,"endColumn":13},{"ruleId":"1017","severity":1,"message":"1033","line":304,"column":40,"nodeType":"1019","messageId":"1020","endLine":304,"endColumn":42},{"ruleId":"1034","severity":1,"message":"1035","line":1,"column":1,"nodeType":"1036","endLine":12,"endColumn":3},{"ruleId":"991","severity":1,"message":"1037","line":1,"column":10,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"1017","severity":1,"message":"1033","line":53,"column":49,"nodeType":"1019","messageId":"1020","endLine":53,"endColumn":51},{"ruleId":"997","severity":1,"message":"1038","line":62,"column":6,"nodeType":"999","endLine":62,"endColumn":27,"suggestions":"1039"},{"ruleId":"997","severity":1,"message":"1040","line":79,"column":6,"nodeType":"999","endLine":79,"endColumn":14,"suggestions":"1041"},{"ruleId":"991","severity":1,"message":"1042","line":18,"column":10,"nodeType":"993","messageId":"994","endLine":18,"endColumn":24},{"ruleId":"991","severity":1,"message":"1043","line":20,"column":9,"nodeType":"993","messageId":"994","endLine":20,"endColumn":27},{"ruleId":"1017","severity":1,"message":"1018","line":34,"column":40,"nodeType":"1019","messageId":"1020","endLine":34,"endColumn":42},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"1044","severity":1,"message":"1045","line":18,"column":9,"nodeType":"1046","endLine":18,"endColumn":81},{"ruleId":"1044","severity":1,"message":"1045","line":22,"column":11,"nodeType":"1046","endLine":22,"endColumn":63},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1047","line":2,"column":24,"nodeType":"993","messageId":"994","endLine":2,"endColumn":28},{"ruleId":"991","severity":1,"message":"1048","line":2,"column":8,"nodeType":"993","messageId":"994","endLine":2,"endColumn":9},{"ruleId":"991","severity":1,"message":"1026","line":12,"column":3,"nodeType":"993","messageId":"994","endLine":12,"endColumn":7},{"ruleId":"991","severity":1,"message":"1047","line":15,"column":3,"nodeType":"993","messageId":"994","endLine":15,"endColumn":7},{"ruleId":"991","severity":1,"message":"1024","line":16,"column":3,"nodeType":"993","messageId":"994","endLine":16,"endColumn":6},{"ruleId":"991","severity":1,"message":"1025","line":17,"column":3,"nodeType":"993","messageId":"994","endLine":17,"endColumn":6},{"ruleId":"991","severity":1,"message":"1049","line":18,"column":3,"nodeType":"993","messageId":"994","endLine":18,"endColumn":12},{"ruleId":"997","severity":1,"message":"1050","line":67,"column":6,"nodeType":"999","endLine":67,"endColumn":15,"suggestions":"1051"},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1047","line":2,"column":24,"nodeType":"993","messageId":"994","endLine":2,"endColumn":28},{"ruleId":"1017","severity":1,"message":"1033","line":18,"column":52,"nodeType":"1019","messageId":"1020","endLine":18,"endColumn":54},{"ruleId":"1017","severity":1,"message":"1033","line":19,"column":55,"nodeType":"1019","messageId":"1020","endLine":19,"endColumn":57},{"ruleId":"1017","severity":1,"message":"1018","line":5,"column":37,"nodeType":"1019","messageId":"1020","endLine":5,"endColumn":39},{"ruleId":"1017","severity":1,"message":"1018","line":12,"column":37,"nodeType":"1019","messageId":"1020","endLine":12,"endColumn":39},{"ruleId":"991","severity":1,"message":"1052","line":53,"column":7,"nodeType":"993","messageId":"994","endLine":53,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":50,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":51,"suggestions":"1057"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":246,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":247,"suggestions":"1058"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":669,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":670,"suggestions":"1059"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":747,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":748,"suggestions":"1060"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":757,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":758,"suggestions":"1061"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":892,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":893,"suggestions":"1062"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":900,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":901,"suggestions":"1063"},{"ruleId":"991","severity":1,"message":"1048","line":2,"column":8,"nodeType":"993","messageId":"994","endLine":2,"endColumn":9},{"ruleId":"991","severity":1,"message":"1064","line":9,"column":22,"nodeType":"993","messageId":"994","endLine":9,"endColumn":41},{"ruleId":"997","severity":1,"message":"1065","line":23,"column":6,"nodeType":"999","endLine":23,"endColumn":19,"suggestions":"1066"},{"ruleId":"991","severity":1,"message":"1067","line":3,"column":10,"nodeType":"993","messageId":"994","endLine":3,"endColumn":28},{"ruleId":"997","severity":1,"message":"1068","line":65,"column":6,"nodeType":"999","endLine":65,"endColumn":19,"suggestions":"1069"},{"ruleId":"1017","severity":1,"message":"1033","line":69,"column":148,"nodeType":"1019","messageId":"1020","endLine":69,"endColumn":150},{"ruleId":"991","severity":1,"message":"992","line":1,"column":26,"nodeType":"993","messageId":"994","endLine":1,"endColumn":35},{"ruleId":"991","severity":1,"message":"1070","line":4,"column":17,"nodeType":"993","messageId":"994","endLine":4,"endColumn":21},{"ruleId":"991","severity":1,"message":"1071","line":24,"column":7,"nodeType":"993","messageId":"994","endLine":24,"endColumn":19},{"ruleId":"991","severity":1,"message":"1072","line":22,"column":8,"nodeType":"993","messageId":"994","endLine":22,"endColumn":27},{"ruleId":"991","severity":1,"message":"1073","line":36,"column":7,"nodeType":"993","messageId":"994","endLine":36,"endColumn":22},{"ruleId":"991","severity":1,"message":"1074","line":48,"column":7,"nodeType":"993","messageId":"994","endLine":48,"endColumn":17},{"ruleId":"991","severity":1,"message":"1075","line":181,"column":10,"nodeType":"993","messageId":"994","endLine":181,"endColumn":15},{"ruleId":"991","severity":1,"message":"1076","line":183,"column":10,"nodeType":"993","messageId":"994","endLine":183,"endColumn":19},{"ruleId":"991","severity":1,"message":"1077","line":183,"column":21,"nodeType":"993","messageId":"994","endLine":183,"endColumn":33},{"ruleId":"997","severity":1,"message":"1078","line":196,"column":6,"nodeType":"999","endLine":196,"endColumn":24,"suggestions":"1079"},{"ruleId":"1017","severity":1,"message":"1033","line":400,"column":30,"nodeType":"1019","messageId":"1020","endLine":400,"endColumn":32},{"ruleId":"1017","severity":1,"message":"1018","line":3,"column":59,"nodeType":"1019","messageId":"1020","endLine":3,"endColumn":61},{"ruleId":"1017","severity":1,"message":"1018","line":50,"column":36,"nodeType":"1019","messageId":"1020","endLine":50,"endColumn":38},{"ruleId":"991","severity":1,"message":"1080","line":1,"column":25,"nodeType":"993","messageId":"994","endLine":1,"endColumn":30},{"ruleId":"991","severity":1,"message":"992","line":1,"column":32,"nodeType":"993","messageId":"994","endLine":1,"endColumn":41},{"ruleId":"991","severity":1,"message":"1081","line":2,"column":9,"nodeType":"993","messageId":"994","endLine":2,"endColumn":18},{"ruleId":"991","severity":1,"message":"1026","line":3,"column":9,"nodeType":"993","messageId":"994","endLine":3,"endColumn":13},{"ruleId":"991","severity":1,"message":"1025","line":3,"column":30,"nodeType":"993","messageId":"994","endLine":3,"endColumn":33},{"ruleId":"991","severity":1,"message":"1047","line":3,"column":35,"nodeType":"993","messageId":"994","endLine":3,"endColumn":39},{"ruleId":"991","severity":1,"message":"1024","line":3,"column":41,"nodeType":"993","messageId":"994","endLine":3,"endColumn":44},{"ruleId":"991","severity":1,"message":"1082","line":3,"column":46,"nodeType":"993","messageId":"994","endLine":3,"endColumn":55},{"ruleId":"991","severity":1,"message":"1083","line":3,"column":57,"nodeType":"993","messageId":"994","endLine":3,"endColumn":68},{"ruleId":"991","severity":1,"message":"1084","line":3,"column":70,"nodeType":"993","messageId":"994","endLine":3,"endColumn":78},{"ruleId":"991","severity":1,"message":"1085","line":4,"column":8,"nodeType":"993","messageId":"994","endLine":4,"endColumn":19},{"ruleId":"991","severity":1,"message":"1086","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":22},{"ruleId":"991","severity":1,"message":"1087","line":6,"column":10,"nodeType":"993","messageId":"994","endLine":6,"endColumn":20},{"ruleId":"991","severity":1,"message":"1048","line":7,"column":8,"nodeType":"993","messageId":"994","endLine":7,"endColumn":9},{"ruleId":"991","severity":1,"message":"1026","line":2,"column":9,"nodeType":"993","messageId":"994","endLine":2,"endColumn":13},{"ruleId":"991","severity":1,"message":"1082","line":2,"column":46,"nodeType":"993","messageId":"994","endLine":2,"endColumn":55},{"ruleId":"991","severity":1,"message":"1083","line":2,"column":57,"nodeType":"993","messageId":"994","endLine":2,"endColumn":68},{"ruleId":"991","severity":1,"message":"1084","line":2,"column":70,"nodeType":"993","messageId":"994","endLine":2,"endColumn":78},{"ruleId":"991","severity":1,"message":"1006","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":13},{"ruleId":"991","severity":1,"message":"1088","line":11,"column":10,"nodeType":"993","messageId":"994","endLine":11,"endColumn":18},{"ruleId":"1017","severity":1,"message":"1018","line":101,"column":19,"nodeType":"1019","messageId":"1020","endLine":101,"endColumn":21},{"ruleId":"991","severity":1,"message":"1047","line":7,"column":3,"nodeType":"993","messageId":"994","endLine":7,"endColumn":7},{"ruleId":"991","severity":1,"message":"1089","line":25,"column":10,"nodeType":"993","messageId":"994","endLine":25,"endColumn":14},{"ruleId":"991","severity":1,"message":"1090","line":29,"column":9,"nodeType":"993","messageId":"994","endLine":29,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1092","line":156,"column":25,"nodeType":"1046","messageId":"1093","endLine":162,"endColumn":26,"fix":"1094"},{"ruleId":"991","severity":1,"message":"992","line":1,"column":27,"nodeType":"993","messageId":"994","endLine":1,"endColumn":36},{"ruleId":"991","severity":1,"message":"1095","line":3,"column":25,"nodeType":"993","messageId":"994","endLine":3,"endColumn":30},{"ruleId":"991","severity":1,"message":"1024","line":3,"column":32,"nodeType":"993","messageId":"994","endLine":3,"endColumn":35},{"ruleId":"991","severity":1,"message":"1025","line":3,"column":37,"nodeType":"993","messageId":"994","endLine":3,"endColumn":40},{"ruleId":"991","severity":1,"message":"1049","line":3,"column":42,"nodeType":"993","messageId":"994","endLine":3,"endColumn":51},{"ruleId":"991","severity":1,"message":"1048","line":4,"column":8,"nodeType":"993","messageId":"994","endLine":4,"endColumn":9},{"ruleId":"991","severity":1,"message":"1096","line":20,"column":10,"nodeType":"993","messageId":"994","endLine":20,"endColumn":17},{"ruleId":"991","severity":1,"message":"1097","line":20,"column":19,"nodeType":"993","messageId":"994","endLine":20,"endColumn":29},{"ruleId":"991","severity":1,"message":"1089","line":23,"column":10,"nodeType":"993","messageId":"994","endLine":23,"endColumn":14},{"ruleId":"987","replacedBy":"1098"},{"ruleId":"989","replacedBy":"1099"},{"ruleId":"991","severity":1,"message":"992","line":3,"column":27,"nodeType":"993","messageId":"994","endLine":3,"endColumn":36},{"ruleId":"991","severity":1,"message":"995","line":4,"column":39,"nodeType":"993","messageId":"994","endLine":4,"endColumn":48},{"ruleId":"991","severity":1,"message":"992","line":3,"column":27,"nodeType":"993","messageId":"994","endLine":3,"endColumn":36},{"ruleId":"991","severity":1,"message":"996","line":5,"column":10,"nodeType":"993","messageId":"994","endLine":5,"endColumn":14},{"ruleId":"991","severity":1,"message":"1027","line":16,"column":10,"nodeType":"993","messageId":"994","endLine":16,"endColumn":17},{"ruleId":"991","severity":1,"message":"1006","line":17,"column":9,"nodeType":"993","messageId":"994","endLine":17,"endColumn":13},{"ruleId":"991","severity":1,"message":"1028","line":33,"column":9,"nodeType":"993","messageId":"994","endLine":33,"endColumn":19},{"ruleId":"997","severity":1,"message":"1029","line":94,"column":36,"nodeType":"999","endLine":94,"endColumn":45,"suggestions":"1100"},{"ruleId":"991","severity":1,"message":"1031","line":186,"column":10,"nodeType":"993","messageId":"994","endLine":186,"endColumn":14},{"ruleId":"991","severity":1,"message":"1032","line":186,"column":16,"nodeType":"993","messageId":"994","endLine":186,"endColumn":23},{"ruleId":"991","severity":1,"message":"1031","line":198,"column":9,"nodeType":"993","messageId":"994","endLine":198,"endColumn":13},{"ruleId":"1017","severity":1,"message":"1033","line":304,"column":40,"nodeType":"1019","messageId":"1020","endLine":304,"endColumn":42},{"ruleId":"991","severity":1,"message":"1001","line":2,"column":10,"nodeType":"993","messageId":"994","endLine":2,"endColumn":21},{"ruleId":"997","severity":1,"message":"1002","line":7,"column":40,"nodeType":"999","endLine":7,"endColumn":42,"suggestions":"1101"},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1024","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":12},{"ruleId":"991","severity":1,"message":"1025","line":5,"column":13,"nodeType":"993","messageId":"994","endLine":5,"endColumn":16},{"ruleId":"991","severity":1,"message":"1026","line":5,"column":25,"nodeType":"993","messageId":"994","endLine":5,"endColumn":29},{"ruleId":"991","severity":1,"message":"1004","line":5,"column":38,"nodeType":"993","messageId":"994","endLine":5,"endColumn":52},{"ruleId":"991","severity":1,"message":"1102","line":7,"column":93,"nodeType":"993","messageId":"994","endLine":7,"endColumn":104},{"ruleId":"991","severity":1,"message":"1007","line":22,"column":10,"nodeType":"993","messageId":"994","endLine":22,"endColumn":14},{"ruleId":"991","severity":1,"message":"1008","line":29,"column":10,"nodeType":"993","messageId":"994","endLine":29,"endColumn":18},{"ruleId":"991","severity":1,"message":"1103","line":33,"column":11,"nodeType":"993","messageId":"994","endLine":33,"endColumn":24},{"ruleId":"991","severity":1,"message":"1104","line":33,"column":26,"nodeType":"993","messageId":"994","endLine":33,"endColumn":42},{"ruleId":"991","severity":1,"message":"1105","line":71,"column":7,"nodeType":"993","messageId":"994","endLine":71,"endColumn":27},{"ruleId":"991","severity":1,"message":"1106","line":72,"column":7,"nodeType":"993","messageId":"994","endLine":72,"endColumn":16},{"ruleId":"991","severity":1,"message":"1107","line":73,"column":9,"nodeType":"993","messageId":"994","endLine":73,"endColumn":20},{"ruleId":"991","severity":1,"message":"1108","line":76,"column":7,"nodeType":"993","messageId":"994","endLine":76,"endColumn":23},{"ruleId":"1009","severity":1,"message":"1010","line":103,"column":3,"nodeType":"1011","messageId":"1012","endLine":156,"endColumn":4},{"ruleId":"1013","severity":1,"message":"1014","line":103,"column":21,"nodeType":"1015","messageId":"1016","endLine":103,"endColumn":23},{"ruleId":"1009","severity":1,"message":"1010","line":179,"column":6,"nodeType":"1011","messageId":"1012","endLine":195,"endColumn":7},{"ruleId":"1013","severity":1,"message":"1014","line":179,"column":29,"nodeType":"1015","messageId":"1016","endLine":179,"endColumn":31},{"ruleId":"1009","severity":1,"message":"1010","line":217,"column":8,"nodeType":"1011","messageId":"1012","endLine":232,"endColumn":9},{"ruleId":"1013","severity":1,"message":"1014","line":217,"column":35,"nodeType":"1015","messageId":"1016","endLine":217,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":267,"column":13,"nodeType":"1015","messageId":"1016","endLine":267,"endColumn":15},{"ruleId":"1017","severity":1,"message":"1018","line":269,"column":25,"nodeType":"1019","messageId":"1020","endLine":269,"endColumn":27},{"ruleId":"1017","severity":1,"message":"1018","line":272,"column":29,"nodeType":"1019","messageId":"1020","endLine":272,"endColumn":31},{"ruleId":"991","severity":1,"message":"1021","line":421,"column":8,"nodeType":"993","messageId":"994","endLine":421,"endColumn":11},{"ruleId":"991","severity":1,"message":"1022","line":421,"column":13,"nodeType":"993","messageId":"994","endLine":421,"endColumn":22},{"ruleId":"1013","severity":1,"message":"1014","line":546,"column":27,"nodeType":"1015","messageId":"1016","endLine":546,"endColumn":29},{"ruleId":"997","severity":1,"message":"998","line":45,"column":39,"nodeType":"999","endLine":45,"endColumn":41,"suggestions":"1109"},{"ruleId":"991","severity":1,"message":"1037","line":1,"column":10,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1042","line":18,"column":10,"nodeType":"993","messageId":"994","endLine":18,"endColumn":24},{"ruleId":"991","severity":1,"message":"1043","line":20,"column":9,"nodeType":"993","messageId":"994","endLine":20,"endColumn":27},{"ruleId":"1017","severity":1,"message":"1018","line":34,"column":40,"nodeType":"1019","messageId":"1020","endLine":34,"endColumn":42},{"ruleId":"1017","severity":1,"message":"1033","line":53,"column":49,"nodeType":"1019","messageId":"1020","endLine":53,"endColumn":51},{"ruleId":"997","severity":1,"message":"1038","line":62,"column":6,"nodeType":"999","endLine":62,"endColumn":27,"suggestions":"1110"},{"ruleId":"997","severity":1,"message":"1040","line":79,"column":6,"nodeType":"999","endLine":79,"endColumn":14,"suggestions":"1111"},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"1044","severity":1,"message":"1045","line":18,"column":9,"nodeType":"1046","endLine":18,"endColumn":81},{"ruleId":"1044","severity":1,"message":"1045","line":22,"column":11,"nodeType":"1046","endLine":22,"endColumn":63},{"ruleId":"1034","severity":1,"message":"1035","line":1,"column":1,"nodeType":"1036","endLine":12,"endColumn":3},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1047","line":2,"column":24,"nodeType":"993","messageId":"994","endLine":2,"endColumn":28},{"ruleId":"1017","severity":1,"message":"1033","line":18,"column":52,"nodeType":"1019","messageId":"1020","endLine":18,"endColumn":54},{"ruleId":"1017","severity":1,"message":"1033","line":19,"column":55,"nodeType":"1019","messageId":"1020","endLine":19,"endColumn":57},{"ruleId":"991","severity":1,"message":"1048","line":2,"column":8,"nodeType":"993","messageId":"994","endLine":2,"endColumn":9},{"ruleId":"991","severity":1,"message":"1026","line":12,"column":3,"nodeType":"993","messageId":"994","endLine":12,"endColumn":7},{"ruleId":"991","severity":1,"message":"1047","line":15,"column":3,"nodeType":"993","messageId":"994","endLine":15,"endColumn":7},{"ruleId":"991","severity":1,"message":"1024","line":16,"column":3,"nodeType":"993","messageId":"994","endLine":16,"endColumn":6},{"ruleId":"991","severity":1,"message":"1025","line":17,"column":3,"nodeType":"993","messageId":"994","endLine":17,"endColumn":6},{"ruleId":"991","severity":1,"message":"1049","line":18,"column":3,"nodeType":"993","messageId":"994","endLine":18,"endColumn":12},{"ruleId":"997","severity":1,"message":"1050","line":67,"column":6,"nodeType":"999","endLine":67,"endColumn":15,"suggestions":"1112"},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1047","line":2,"column":24,"nodeType":"993","messageId":"994","endLine":2,"endColumn":28},{"ruleId":"1017","severity":1,"message":"1018","line":5,"column":37,"nodeType":"1019","messageId":"1020","endLine":5,"endColumn":39},{"ruleId":"1017","severity":1,"message":"1018","line":12,"column":37,"nodeType":"1019","messageId":"1020","endLine":12,"endColumn":39},{"ruleId":"991","severity":1,"message":"1052","line":53,"column":7,"nodeType":"993","messageId":"994","endLine":53,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":50,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":51,"suggestions":"1113"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":246,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":247,"suggestions":"1114"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":669,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":670,"suggestions":"1115"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":747,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":748,"suggestions":"1116"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":757,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":758,"suggestions":"1117"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":892,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":893,"suggestions":"1118"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":900,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":901,"suggestions":"1119"},{"ruleId":"991","severity":1,"message":"1067","line":3,"column":10,"nodeType":"993","messageId":"994","endLine":3,"endColumn":28},{"ruleId":"997","severity":1,"message":"1068","line":65,"column":6,"nodeType":"999","endLine":65,"endColumn":19,"suggestions":"1120"},{"ruleId":"1017","severity":1,"message":"1033","line":69,"column":148,"nodeType":"1019","messageId":"1020","endLine":69,"endColumn":150},{"ruleId":"991","severity":1,"message":"1048","line":2,"column":8,"nodeType":"993","messageId":"994","endLine":2,"endColumn":9},{"ruleId":"991","severity":1,"message":"1064","line":9,"column":22,"nodeType":"993","messageId":"994","endLine":9,"endColumn":41},{"ruleId":"997","severity":1,"message":"1065","line":23,"column":6,"nodeType":"999","endLine":23,"endColumn":19,"suggestions":"1121"},{"ruleId":"1017","severity":1,"message":"1018","line":3,"column":59,"nodeType":"1019","messageId":"1020","endLine":3,"endColumn":61},{"ruleId":"991","severity":1,"message":"1072","line":22,"column":8,"nodeType":"993","messageId":"994","endLine":22,"endColumn":27},{"ruleId":"991","severity":1,"message":"1073","line":36,"column":7,"nodeType":"993","messageId":"994","endLine":36,"endColumn":22},{"ruleId":"991","severity":1,"message":"1074","line":48,"column":7,"nodeType":"993","messageId":"994","endLine":48,"endColumn":17},{"ruleId":"991","severity":1,"message":"1075","line":181,"column":10,"nodeType":"993","messageId":"994","endLine":181,"endColumn":15},{"ruleId":"991","severity":1,"message":"1076","line":183,"column":10,"nodeType":"993","messageId":"994","endLine":183,"endColumn":19},{"ruleId":"991","severity":1,"message":"1077","line":183,"column":21,"nodeType":"993","messageId":"994","endLine":183,"endColumn":33},{"ruleId":"997","severity":1,"message":"1078","line":196,"column":6,"nodeType":"999","endLine":196,"endColumn":24,"suggestions":"1122"},{"ruleId":"1017","severity":1,"message":"1033","line":400,"column":30,"nodeType":"1019","messageId":"1020","endLine":400,"endColumn":32},{"ruleId":"991","severity":1,"message":"992","line":1,"column":26,"nodeType":"993","messageId":"994","endLine":1,"endColumn":35},{"ruleId":"991","severity":1,"message":"1070","line":4,"column":17,"nodeType":"993","messageId":"994","endLine":4,"endColumn":21},{"ruleId":"991","severity":1,"message":"1071","line":24,"column":7,"nodeType":"993","messageId":"994","endLine":24,"endColumn":19},{"ruleId":"991","severity":1,"message":"992","line":1,"column":27,"nodeType":"993","messageId":"994","endLine":1,"endColumn":36},{"ruleId":"991","severity":1,"message":"1095","line":3,"column":25,"nodeType":"993","messageId":"994","endLine":3,"endColumn":30},{"ruleId":"991","severity":1,"message":"1024","line":3,"column":32,"nodeType":"993","messageId":"994","endLine":3,"endColumn":35},{"ruleId":"991","severity":1,"message":"1025","line":3,"column":37,"nodeType":"993","messageId":"994","endLine":3,"endColumn":40},{"ruleId":"991","severity":1,"message":"1049","line":3,"column":42,"nodeType":"993","messageId":"994","endLine":3,"endColumn":51},{"ruleId":"991","severity":1,"message":"1048","line":4,"column":8,"nodeType":"993","messageId":"994","endLine":4,"endColumn":9},{"ruleId":"991","severity":1,"message":"1096","line":20,"column":10,"nodeType":"993","messageId":"994","endLine":20,"endColumn":17},{"ruleId":"991","severity":1,"message":"1097","line":20,"column":19,"nodeType":"993","messageId":"994","endLine":20,"endColumn":29},{"ruleId":"991","severity":1,"message":"1089","line":23,"column":10,"nodeType":"993","messageId":"994","endLine":23,"endColumn":14},{"ruleId":"991","severity":1,"message":"1026","line":2,"column":9,"nodeType":"993","messageId":"994","endLine":2,"endColumn":13},{"ruleId":"991","severity":1,"message":"1082","line":2,"column":46,"nodeType":"993","messageId":"994","endLine":2,"endColumn":55},{"ruleId":"991","severity":1,"message":"1083","line":2,"column":57,"nodeType":"993","messageId":"994","endLine":2,"endColumn":68},{"ruleId":"991","severity":1,"message":"1084","line":2,"column":70,"nodeType":"993","messageId":"994","endLine":2,"endColumn":78},{"ruleId":"991","severity":1,"message":"1006","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":13},{"ruleId":"991","severity":1,"message":"1088","line":11,"column":10,"nodeType":"993","messageId":"994","endLine":11,"endColumn":18},{"ruleId":"1017","severity":1,"message":"1018","line":101,"column":19,"nodeType":"1019","messageId":"1020","endLine":101,"endColumn":21},{"ruleId":"991","severity":1,"message":"1047","line":7,"column":3,"nodeType":"993","messageId":"994","endLine":7,"endColumn":7},{"ruleId":"991","severity":1,"message":"1089","line":25,"column":10,"nodeType":"993","messageId":"994","endLine":25,"endColumn":14},{"ruleId":"991","severity":1,"message":"1090","line":29,"column":9,"nodeType":"993","messageId":"994","endLine":29,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1092","line":156,"column":25,"nodeType":"1046","messageId":"1093","endLine":162,"endColumn":26,"fix":"1123"},{"ruleId":"1017","severity":1,"message":"1018","line":50,"column":36,"nodeType":"1019","messageId":"1020","endLine":50,"endColumn":38},{"ruleId":"987","replacedBy":"1124"},{"ruleId":"989","replacedBy":"1125"},{"ruleId":"991","severity":1,"message":"992","line":3,"column":27,"nodeType":"993","messageId":"994","endLine":3,"endColumn":36},{"ruleId":"991","severity":1,"message":"995","line":4,"column":39,"nodeType":"993","messageId":"994","endLine":4,"endColumn":48},{"ruleId":"991","severity":1,"message":"996","line":5,"column":10,"nodeType":"993","messageId":"994","endLine":5,"endColumn":14},{"ruleId":"991","severity":1,"message":"992","line":3,"column":27,"nodeType":"993","messageId":"994","endLine":3,"endColumn":36},{"ruleId":"991","severity":1,"message":"1001","line":2,"column":10,"nodeType":"993","messageId":"994","endLine":2,"endColumn":21},{"ruleId":"997","severity":1,"message":"1002","line":7,"column":40,"nodeType":"999","endLine":7,"endColumn":42,"suggestions":"1126"},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1024","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":12},{"ruleId":"991","severity":1,"message":"1025","line":5,"column":13,"nodeType":"993","messageId":"994","endLine":5,"endColumn":16},{"ruleId":"991","severity":1,"message":"1026","line":5,"column":25,"nodeType":"993","messageId":"994","endLine":5,"endColumn":29},{"ruleId":"997","severity":1,"message":"998","line":45,"column":39,"nodeType":"999","endLine":45,"endColumn":41,"suggestions":"1127"},{"ruleId":"991","severity":1,"message":"1004","line":5,"column":38,"nodeType":"993","messageId":"994","endLine":5,"endColumn":52},{"ruleId":"991","severity":1,"message":"1102","line":7,"column":93,"nodeType":"993","messageId":"994","endLine":7,"endColumn":104},{"ruleId":"991","severity":1,"message":"1007","line":22,"column":10,"nodeType":"993","messageId":"994","endLine":22,"endColumn":14},{"ruleId":"991","severity":1,"message":"1008","line":29,"column":10,"nodeType":"993","messageId":"994","endLine":29,"endColumn":18},{"ruleId":"991","severity":1,"message":"1103","line":33,"column":11,"nodeType":"993","messageId":"994","endLine":33,"endColumn":24},{"ruleId":"991","severity":1,"message":"1104","line":33,"column":26,"nodeType":"993","messageId":"994","endLine":33,"endColumn":42},{"ruleId":"991","severity":1,"message":"1105","line":71,"column":7,"nodeType":"993","messageId":"994","endLine":71,"endColumn":27},{"ruleId":"991","severity":1,"message":"1106","line":72,"column":7,"nodeType":"993","messageId":"994","endLine":72,"endColumn":16},{"ruleId":"991","severity":1,"message":"1107","line":73,"column":9,"nodeType":"993","messageId":"994","endLine":73,"endColumn":20},{"ruleId":"991","severity":1,"message":"1108","line":76,"column":7,"nodeType":"993","messageId":"994","endLine":76,"endColumn":23},{"ruleId":"991","severity":1,"message":"1128","line":77,"column":7,"nodeType":"993","messageId":"994","endLine":77,"endColumn":10},{"ruleId":"1009","severity":1,"message":"1010","line":105,"column":3,"nodeType":"1011","messageId":"1012","endLine":158,"endColumn":4},{"ruleId":"1013","severity":1,"message":"1014","line":105,"column":21,"nodeType":"1015","messageId":"1016","endLine":105,"endColumn":23},{"ruleId":"1009","severity":1,"message":"1010","line":181,"column":6,"nodeType":"1011","messageId":"1012","endLine":197,"endColumn":7},{"ruleId":"1013","severity":1,"message":"1014","line":181,"column":29,"nodeType":"1015","messageId":"1016","endLine":181,"endColumn":31},{"ruleId":"1009","severity":1,"message":"1010","line":219,"column":8,"nodeType":"1011","messageId":"1012","endLine":234,"endColumn":9},{"ruleId":"1013","severity":1,"message":"1014","line":219,"column":35,"nodeType":"1015","messageId":"1016","endLine":219,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":269,"column":13,"nodeType":"1015","messageId":"1016","endLine":269,"endColumn":15},{"ruleId":"1017","severity":1,"message":"1018","line":271,"column":25,"nodeType":"1019","messageId":"1020","endLine":271,"endColumn":27},{"ruleId":"1017","severity":1,"message":"1018","line":274,"column":29,"nodeType":"1019","messageId":"1020","endLine":274,"endColumn":31},{"ruleId":"991","severity":1,"message":"1021","line":423,"column":8,"nodeType":"993","messageId":"994","endLine":423,"endColumn":11},{"ruleId":"991","severity":1,"message":"1022","line":423,"column":13,"nodeType":"993","messageId":"994","endLine":423,"endColumn":22},{"ruleId":"1013","severity":1,"message":"1014","line":548,"column":27,"nodeType":"1015","messageId":"1016","endLine":548,"endColumn":29},{"ruleId":"991","severity":1,"message":"1027","line":16,"column":10,"nodeType":"993","messageId":"994","endLine":16,"endColumn":17},{"ruleId":"991","severity":1,"message":"1006","line":17,"column":9,"nodeType":"993","messageId":"994","endLine":17,"endColumn":13},{"ruleId":"991","severity":1,"message":"1028","line":33,"column":9,"nodeType":"993","messageId":"994","endLine":33,"endColumn":19},{"ruleId":"997","severity":1,"message":"1029","line":94,"column":36,"nodeType":"999","endLine":94,"endColumn":45,"suggestions":"1129"},{"ruleId":"991","severity":1,"message":"1031","line":186,"column":10,"nodeType":"993","messageId":"994","endLine":186,"endColumn":14},{"ruleId":"991","severity":1,"message":"1032","line":186,"column":16,"nodeType":"993","messageId":"994","endLine":186,"endColumn":23},{"ruleId":"991","severity":1,"message":"1031","line":198,"column":9,"nodeType":"993","messageId":"994","endLine":198,"endColumn":13},{"ruleId":"1017","severity":1,"message":"1033","line":304,"column":40,"nodeType":"1019","messageId":"1020","endLine":304,"endColumn":42},{"ruleId":"991","severity":1,"message":"1037","line":1,"column":10,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"1034","severity":1,"message":"1035","line":1,"column":1,"nodeType":"1036","endLine":12,"endColumn":3},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"1044","severity":1,"message":"1045","line":18,"column":9,"nodeType":"1046","endLine":18,"endColumn":81},{"ruleId":"1044","severity":1,"message":"1045","line":22,"column":11,"nodeType":"1046","endLine":22,"endColumn":63},{"ruleId":"991","severity":1,"message":"1042","line":18,"column":10,"nodeType":"993","messageId":"994","endLine":18,"endColumn":24},{"ruleId":"991","severity":1,"message":"1043","line":20,"column":9,"nodeType":"993","messageId":"994","endLine":20,"endColumn":27},{"ruleId":"1017","severity":1,"message":"1018","line":34,"column":40,"nodeType":"1019","messageId":"1020","endLine":34,"endColumn":42},{"ruleId":"1017","severity":1,"message":"1033","line":53,"column":49,"nodeType":"1019","messageId":"1020","endLine":53,"endColumn":51},{"ruleId":"997","severity":1,"message":"1038","line":62,"column":6,"nodeType":"999","endLine":62,"endColumn":27,"suggestions":"1130"},{"ruleId":"997","severity":1,"message":"1040","line":79,"column":6,"nodeType":"999","endLine":79,"endColumn":14,"suggestions":"1131"},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1047","line":2,"column":24,"nodeType":"993","messageId":"994","endLine":2,"endColumn":28},{"ruleId":"991","severity":1,"message":"1026","line":12,"column":3,"nodeType":"993","messageId":"994","endLine":12,"endColumn":7},{"ruleId":"991","severity":1,"message":"1047","line":15,"column":3,"nodeType":"993","messageId":"994","endLine":15,"endColumn":7},{"ruleId":"991","severity":1,"message":"1024","line":16,"column":3,"nodeType":"993","messageId":"994","endLine":16,"endColumn":6},{"ruleId":"991","severity":1,"message":"1025","line":17,"column":3,"nodeType":"993","messageId":"994","endLine":17,"endColumn":6},{"ruleId":"991","severity":1,"message":"1049","line":18,"column":3,"nodeType":"993","messageId":"994","endLine":18,"endColumn":12},{"ruleId":"997","severity":1,"message":"1050","line":67,"column":6,"nodeType":"999","endLine":67,"endColumn":15,"suggestions":"1132"},{"ruleId":"991","severity":1,"message":"1023","line":1,"column":16,"nodeType":"993","messageId":"994","endLine":1,"endColumn":24},{"ruleId":"991","severity":1,"message":"1047","line":2,"column":24,"nodeType":"993","messageId":"994","endLine":2,"endColumn":28},{"ruleId":"1017","severity":1,"message":"1033","line":18,"column":52,"nodeType":"1019","messageId":"1020","endLine":18,"endColumn":54},{"ruleId":"1017","severity":1,"message":"1033","line":19,"column":55,"nodeType":"1019","messageId":"1020","endLine":19,"endColumn":57},{"ruleId":"991","severity":1,"message":"1048","line":2,"column":8,"nodeType":"993","messageId":"994","endLine":2,"endColumn":9},{"ruleId":"1017","severity":1,"message":"1018","line":5,"column":37,"nodeType":"1019","messageId":"1020","endLine":5,"endColumn":39},{"ruleId":"1017","severity":1,"message":"1018","line":12,"column":37,"nodeType":"1019","messageId":"1020","endLine":12,"endColumn":39},{"ruleId":"991","severity":1,"message":"1052","line":53,"column":7,"nodeType":"993","messageId":"994","endLine":53,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":50,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":51,"suggestions":"1133"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":246,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":247,"suggestions":"1134"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":669,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":670,"suggestions":"1135"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":747,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":748,"suggestions":"1136"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":757,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":758,"suggestions":"1137"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":892,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":893,"suggestions":"1138"},{"ruleId":"1053","severity":1,"message":"1054","line":71,"column":900,"nodeType":"1055","messageId":"1056","endLine":71,"endColumn":901,"suggestions":"1139"},{"ruleId":"991","severity":1,"message":"1048","line":2,"column":8,"nodeType":"993","messageId":"994","endLine":2,"endColumn":9},{"ruleId":"991","severity":1,"message":"1064","line":9,"column":22,"nodeType":"993","messageId":"994","endLine":9,"endColumn":41},{"ruleId":"997","severity":1,"message":"1065","line":23,"column":6,"nodeType":"999","endLine":23,"endColumn":19,"suggestions":"1140"},{"ruleId":"991","severity":1,"message":"1067","line":3,"column":10,"nodeType":"993","messageId":"994","endLine":3,"endColumn":28},{"ruleId":"997","severity":1,"message":"1068","line":65,"column":6,"nodeType":"999","endLine":65,"endColumn":19,"suggestions":"1141"},{"ruleId":"1017","severity":1,"message":"1033","line":69,"column":148,"nodeType":"1019","messageId":"1020","endLine":69,"endColumn":150},{"ruleId":"991","severity":1,"message":"1072","line":22,"column":8,"nodeType":"993","messageId":"994","endLine":22,"endColumn":27},{"ruleId":"991","severity":1,"message":"1073","line":36,"column":7,"nodeType":"993","messageId":"994","endLine":36,"endColumn":22},{"ruleId":"991","severity":1,"message":"1074","line":48,"column":7,"nodeType":"993","messageId":"994","endLine":48,"endColumn":17},{"ruleId":"991","severity":1,"message":"1075","line":181,"column":10,"nodeType":"993","messageId":"994","endLine":181,"endColumn":15},{"ruleId":"991","severity":1,"message":"1076","line":183,"column":10,"nodeType":"993","messageId":"994","endLine":183,"endColumn":19},{"ruleId":"991","severity":1,"message":"1077","line":183,"column":21,"nodeType":"993","messageId":"994","endLine":183,"endColumn":33},{"ruleId":"997","severity":1,"message":"1078","line":196,"column":6,"nodeType":"999","endLine":196,"endColumn":24,"suggestions":"1142"},{"ruleId":"1017","severity":1,"message":"1033","line":400,"column":30,"nodeType":"1019","messageId":"1020","endLine":400,"endColumn":32},{"ruleId":"991","severity":1,"message":"992","line":1,"column":26,"nodeType":"993","messageId":"994","endLine":1,"endColumn":35},{"ruleId":"991","severity":1,"message":"1070","line":4,"column":17,"nodeType":"993","messageId":"994","endLine":4,"endColumn":21},{"ruleId":"991","severity":1,"message":"1071","line":24,"column":7,"nodeType":"993","messageId":"994","endLine":24,"endColumn":19},{"ruleId":"1017","severity":1,"message":"1018","line":3,"column":59,"nodeType":"1019","messageId":"1020","endLine":3,"endColumn":61},{"ruleId":"991","severity":1,"message":"992","line":1,"column":27,"nodeType":"993","messageId":"994","endLine":1,"endColumn":36},{"ruleId":"991","severity":1,"message":"1095","line":3,"column":25,"nodeType":"993","messageId":"994","endLine":3,"endColumn":30},{"ruleId":"991","severity":1,"message":"1024","line":3,"column":32,"nodeType":"993","messageId":"994","endLine":3,"endColumn":35},{"ruleId":"991","severity":1,"message":"1025","line":3,"column":37,"nodeType":"993","messageId":"994","endLine":3,"endColumn":40},{"ruleId":"991","severity":1,"message":"1049","line":3,"column":42,"nodeType":"993","messageId":"994","endLine":3,"endColumn":51},{"ruleId":"991","severity":1,"message":"1048","line":4,"column":8,"nodeType":"993","messageId":"994","endLine":4,"endColumn":9},{"ruleId":"991","severity":1,"message":"1096","line":20,"column":10,"nodeType":"993","messageId":"994","endLine":20,"endColumn":17},{"ruleId":"991","severity":1,"message":"1097","line":20,"column":19,"nodeType":"993","messageId":"994","endLine":20,"endColumn":29},{"ruleId":"991","severity":1,"message":"1089","line":23,"column":10,"nodeType":"993","messageId":"994","endLine":23,"endColumn":14},{"ruleId":"991","severity":1,"message":"1026","line":2,"column":9,"nodeType":"993","messageId":"994","endLine":2,"endColumn":13},{"ruleId":"991","severity":1,"message":"1082","line":2,"column":46,"nodeType":"993","messageId":"994","endLine":2,"endColumn":55},{"ruleId":"991","severity":1,"message":"1083","line":2,"column":57,"nodeType":"993","messageId":"994","endLine":2,"endColumn":68},{"ruleId":"991","severity":1,"message":"1084","line":2,"column":70,"nodeType":"993","messageId":"994","endLine":2,"endColumn":78},{"ruleId":"991","severity":1,"message":"1006","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":13},{"ruleId":"991","severity":1,"message":"1088","line":11,"column":10,"nodeType":"993","messageId":"994","endLine":11,"endColumn":18},{"ruleId":"1017","severity":1,"message":"1018","line":101,"column":19,"nodeType":"1019","messageId":"1020","endLine":101,"endColumn":21},{"ruleId":"991","severity":1,"message":"1047","line":7,"column":3,"nodeType":"993","messageId":"994","endLine":7,"endColumn":7},{"ruleId":"991","severity":1,"message":"1089","line":25,"column":10,"nodeType":"993","messageId":"994","endLine":25,"endColumn":14},{"ruleId":"991","severity":1,"message":"1090","line":29,"column":9,"nodeType":"993","messageId":"994","endLine":29,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1092","line":156,"column":25,"nodeType":"1046","messageId":"1093","endLine":162,"endColumn":26,"fix":"1143"},{"ruleId":"991","severity":1,"message":"1080","line":1,"column":25,"nodeType":"993","messageId":"994","endLine":1,"endColumn":30},{"ruleId":"991","severity":1,"message":"992","line":1,"column":32,"nodeType":"993","messageId":"994","endLine":1,"endColumn":41},{"ruleId":"991","severity":1,"message":"1081","line":2,"column":9,"nodeType":"993","messageId":"994","endLine":2,"endColumn":18},{"ruleId":"991","severity":1,"message":"1026","line":3,"column":9,"nodeType":"993","messageId":"994","endLine":3,"endColumn":13},{"ruleId":"991","severity":1,"message":"1025","line":3,"column":30,"nodeType":"993","messageId":"994","endLine":3,"endColumn":33},{"ruleId":"991","severity":1,"message":"1047","line":3,"column":35,"nodeType":"993","messageId":"994","endLine":3,"endColumn":39},{"ruleId":"991","severity":1,"message":"1024","line":3,"column":41,"nodeType":"993","messageId":"994","endLine":3,"endColumn":44},{"ruleId":"991","severity":1,"message":"1082","line":3,"column":46,"nodeType":"993","messageId":"994","endLine":3,"endColumn":55},{"ruleId":"991","severity":1,"message":"1083","line":3,"column":57,"nodeType":"993","messageId":"994","endLine":3,"endColumn":68},{"ruleId":"991","severity":1,"message":"1084","line":3,"column":70,"nodeType":"993","messageId":"994","endLine":3,"endColumn":78},{"ruleId":"991","severity":1,"message":"1085","line":4,"column":8,"nodeType":"993","messageId":"994","endLine":4,"endColumn":19},{"ruleId":"991","severity":1,"message":"1086","line":5,"column":9,"nodeType":"993","messageId":"994","endLine":5,"endColumn":22},{"ruleId":"991","severity":1,"message":"1087","line":6,"column":10,"nodeType":"993","messageId":"994","endLine":6,"endColumn":20},{"ruleId":"991","severity":1,"message":"1048","line":7,"column":8,"nodeType":"993","messageId":"994","endLine":7,"endColumn":9},{"ruleId":"1017","severity":1,"message":"1018","line":50,"column":36,"nodeType":"1019","messageId":"1020","endLine":50,"endColumn":38},"no-native-reassign",["1144"],"no-negated-in-lhs",["1145"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'show' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lower_bound'. Either include it or remove the dependency array.","ArrayExpression",["1146"],"'GoogleLogin' is defined but never used.","React Hook useEffect has a missing dependency: 'setLoggedIn'. Either include it or remove the dependency array.",["1147"],"'DropdownButton' is defined but never used.","'Graph' is defined but never used.","'Link' is defined but never used.","'term' is assigned a value but never used.","'ontology' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'del' is assigned a value but never used.","'setDelete' is assigned a value but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'element' is defined but never used.","'getReplies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateReplies'. Either include it or remove the dependency array.",["1148"],"'tree' is assigned a value but never used.","'setTree' is assigned a value but never used.","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'getTermResults' is defined but never used.","React Hook useEffect has missing dependencies: 'annotations', 'currentHighlight', and 'documentId'. Either include them or remove the dependency array.",["1149"],"React Hook useEffect has missing dependencies: 'content', 'documentId', 'updateAnnotationSelection', 'updateAnnotations', 'updateLoadHighlights', and 'updateShowAccordion'. Either include them or remove the dependency array.",["1150"],"'knowledgeGraph' is assigned a value but never used.","'openKnowledgeGraph' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'$' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'contentRetrived', 'documentId', and 'timeoutId'. Either include them or remove the dependency array.",["1151"],"'addedLength' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["1152","1153"],["1154","1155"],["1156","1157"],["1158","1159"],["1160","1161"],["1162","1163"],["1164","1165"],"'annotationSelection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'annotationsLoaded', 'saveAnnotations', 'updateAnnotationSelection', and 'updateAnnotationsLoaded'. Either include them or remove the dependency array.",["1166"],"'useAccordionToggle' is defined but never used.","React Hook useEffect has missing dependencies: 'setCurrentHighlight' and 'sortedKeys'. Either include them or remove the dependency array. If 'setCurrentHighlight' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1167"],"'Chip' is defined but never used.","'limitResults' is assigned a value but never used.","'PopupRecommendation' is defined but never used.","'removeHighlight' is assigned a value but never used.","'showInTree' is assigned a value but never used.","'reply' is assigned a value but never used.","'modalShow' is assigned a value but never used.","'setModalShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'content' and 'timeoutId'. Either include them or remove the dependency array.",["1168"],"'state' is defined but never used.","'Component' is defined but never used.","'Accordion' is defined but never used.","'FormControl' is defined but never used.","'Dropdown' is defined but never used.","'AskQuestion' is defined but never used.","'postAddresses' is defined but never used.","'getUser_ID' is defined but never used.","'expertID' is assigned a value but never used.","'flag' is assigned a value but never used.","'askQuestion' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1169","text":"1170"},"'Input' is defined but never used.","'message' is assigned a value but never used.","'setmessage' is assigned a value but never used.",["1144"],["1145"],["1171"],["1172"],"'getAllUsers' is defined but never used.","'userNameArray' is assigned a value but never used.","'setUserNameArray' is assigned a value but never used.","'processOntologyQuery' is assigned a value but never used.","'tokenizer' is assigned a value but never used.","'getOntology' is assigned a value but never used.","'processTermQuery' is assigned a value but never used.",["1173"],["1174"],["1175"],["1176"],["1177","1178"],["1179","1180"],["1181","1182"],["1183","1184"],["1185","1186"],["1187","1188"],["1189","1190"],["1191"],["1192"],["1193"],{"range":"1194","text":"1170"},["1144"],["1145"],["1195"],["1196"],"'doc' is assigned a value but never used.",["1197"],["1198"],["1199"],["1200"],["1201","1202"],["1203","1204"],["1205","1206"],["1207","1208"],["1209","1210"],["1211","1212"],["1213","1214"],["1215"],["1216"],["1217"],{"range":"1218","text":"1170"},"no-global-assign","no-unsafe-negation",{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},{"messageId":"1231","fix":"1232","desc":"1233"},{"messageId":"1234","fix":"1235","desc":"1236"},{"messageId":"1231","fix":"1237","desc":"1233"},{"messageId":"1234","fix":"1238","desc":"1236"},{"messageId":"1231","fix":"1239","desc":"1233"},{"messageId":"1234","fix":"1240","desc":"1236"},{"messageId":"1231","fix":"1241","desc":"1233"},{"messageId":"1234","fix":"1242","desc":"1236"},{"messageId":"1231","fix":"1243","desc":"1233"},{"messageId":"1234","fix":"1244","desc":"1236"},{"messageId":"1231","fix":"1245","desc":"1233"},{"messageId":"1234","fix":"1246","desc":"1236"},{"messageId":"1231","fix":"1247","desc":"1233"},{"messageId":"1234","fix":"1248","desc":"1236"},{"desc":"1249","fix":"1250"},{"desc":"1251","fix":"1252"},{"desc":"1253","fix":"1254"},[5141,5141]," rel=\"noreferrer\"",{"desc":"1223","fix":"1255"},{"desc":"1221","fix":"1256"},{"desc":"1219","fix":"1257"},{"desc":"1225","fix":"1258"},{"desc":"1227","fix":"1259"},{"desc":"1229","fix":"1260"},{"messageId":"1231","fix":"1261","desc":"1233"},{"messageId":"1234","fix":"1262","desc":"1236"},{"messageId":"1231","fix":"1263","desc":"1233"},{"messageId":"1234","fix":"1264","desc":"1236"},{"messageId":"1231","fix":"1265","desc":"1233"},{"messageId":"1234","fix":"1266","desc":"1236"},{"messageId":"1231","fix":"1267","desc":"1233"},{"messageId":"1234","fix":"1268","desc":"1236"},{"messageId":"1231","fix":"1269","desc":"1233"},{"messageId":"1234","fix":"1270","desc":"1236"},{"messageId":"1231","fix":"1271","desc":"1233"},{"messageId":"1234","fix":"1272","desc":"1236"},{"messageId":"1231","fix":"1273","desc":"1233"},{"messageId":"1234","fix":"1274","desc":"1236"},{"desc":"1251","fix":"1275"},{"desc":"1249","fix":"1276"},{"desc":"1253","fix":"1277"},[5141,5141],{"desc":"1221","fix":"1278"},{"desc":"1219","fix":"1279"},{"desc":"1223","fix":"1280"},{"desc":"1225","fix":"1281"},{"desc":"1227","fix":"1282"},{"desc":"1229","fix":"1283"},{"messageId":"1231","fix":"1284","desc":"1233"},{"messageId":"1234","fix":"1285","desc":"1236"},{"messageId":"1231","fix":"1286","desc":"1233"},{"messageId":"1234","fix":"1287","desc":"1236"},{"messageId":"1231","fix":"1288","desc":"1233"},{"messageId":"1234","fix":"1289","desc":"1236"},{"messageId":"1231","fix":"1290","desc":"1233"},{"messageId":"1234","fix":"1291","desc":"1236"},{"messageId":"1231","fix":"1292","desc":"1233"},{"messageId":"1234","fix":"1293","desc":"1236"},{"messageId":"1231","fix":"1294","desc":"1233"},{"messageId":"1234","fix":"1295","desc":"1236"},{"messageId":"1231","fix":"1296","desc":"1233"},{"messageId":"1234","fix":"1297","desc":"1236"},{"desc":"1249","fix":"1298"},{"desc":"1251","fix":"1299"},{"desc":"1253","fix":"1300"},[5301,5301],"Update the dependencies array to be: [lower_bound]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [setLoggedIn]",{"range":"1303","text":"1304"},"Update the dependencies array to be: [st_vote, updateReplies]",{"range":"1305","text":"1306"},"Update the dependencies array to be: [annotationSelection, annotations, currentHighlight, documentId]",{"range":"1307","text":"1308"},"Update the dependencies array to be: [content, documentId, editor, updateAnnotationSelection, updateAnnotations, updateLoadHighlights, updateShowAccordion]",{"range":"1309","text":"1310"},"Update the dependencies array to be: [content, contentRetrived, documentId, timeoutId]",{"range":"1311","text":"1312"},"removeEscape",{"range":"1313","text":"1314"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1315","text":"1316"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1317","text":"1314"},{"range":"1318","text":"1316"},{"range":"1319","text":"1314"},{"range":"1320","text":"1316"},{"range":"1321","text":"1314"},{"range":"1322","text":"1316"},{"range":"1323","text":"1314"},{"range":"1324","text":"1316"},{"range":"1325","text":"1314"},{"range":"1326","text":"1316"},{"range":"1327","text":"1314"},{"range":"1328","text":"1316"},"Update the dependencies array to be: [annotations, annotationsLoaded, saveAnnotations, updateAnnotationSelection, updateAnnotationsLoaded]",{"range":"1329","text":"1330"},"Update the dependencies array to be: [activeIndex, setCurrentHighlight, sortedKeys]",{"range":"1331","text":"1332"},"Update the dependencies array to be: [content, currentHighlight, timeoutId]",{"range":"1333","text":"1334"},{"range":"1335","text":"1306"},{"range":"1336","text":"1304"},{"range":"1337","text":"1302"},{"range":"1338","text":"1308"},{"range":"1339","text":"1310"},{"range":"1340","text":"1312"},{"range":"1341","text":"1314"},{"range":"1342","text":"1316"},{"range":"1343","text":"1314"},{"range":"1344","text":"1316"},{"range":"1345","text":"1314"},{"range":"1346","text":"1316"},{"range":"1347","text":"1314"},{"range":"1348","text":"1316"},{"range":"1349","text":"1314"},{"range":"1350","text":"1316"},{"range":"1351","text":"1314"},{"range":"1352","text":"1316"},{"range":"1353","text":"1314"},{"range":"1354","text":"1316"},{"range":"1355","text":"1332"},{"range":"1356","text":"1330"},{"range":"1357","text":"1334"},{"range":"1358","text":"1304"},{"range":"1359","text":"1302"},{"range":"1360","text":"1306"},{"range":"1361","text":"1308"},{"range":"1362","text":"1310"},{"range":"1363","text":"1312"},{"range":"1364","text":"1314"},{"range":"1365","text":"1316"},{"range":"1366","text":"1314"},{"range":"1367","text":"1316"},{"range":"1368","text":"1314"},{"range":"1369","text":"1316"},{"range":"1370","text":"1314"},{"range":"1371","text":"1316"},{"range":"1372","text":"1314"},{"range":"1373","text":"1316"},{"range":"1374","text":"1314"},{"range":"1375","text":"1316"},{"range":"1376","text":"1314"},{"range":"1377","text":"1316"},{"range":"1378","text":"1330"},{"range":"1379","text":"1332"},{"range":"1380","text":"1334"},[1538,1540],"[lower_bound]",[276,278],"[setLoggedIn]",[2660,2669],"[st_vote, updateReplies]",[2393,2414],"[annotationSelection, annotations, currentHighlight, documentId]",[3054,3062],"[content, documentId, editor, updateAnnotationSelection, updateAnnotations, updateLoadHighlights, updateShowAccordion]",[2142,2151],"[content, contentRetrived, documentId, timeoutId]",[2550,2551],"",[2550,2550],"\\",[2746,2747],[2746,2746],[3169,3170],[3169,3169],[3247,3248],[3247,3247],[3257,3258],[3257,3257],[3392,3393],[3392,3392],[3400,3401],[3400,3400],[768,781],"[annotations, annotationsLoaded, saveAnnotations, updateAnnotationSelection, updateAnnotationsLoaded]",[2234,2247],"[activeIndex, setCurrentHighlight, sortedKeys]",[5554,5572],"[content, currentHighlight, timeoutId]",[2753,2762],[276,278],[1538,1540],[2393,2414],[3054,3062],[2142,2151],[2550,2551],[2550,2550],[2746,2747],[2746,2746],[3169,3170],[3169,3169],[3247,3248],[3247,3247],[3257,3258],[3257,3257],[3392,3393],[3392,3392],[3400,3401],[3400,3400],[2234,2247],[768,781],[5554,5572],[276,278],[1538,1540],[2753,2762],[2393,2414],[3054,3062],[2208,2217],[2550,2551],[2550,2550],[2746,2747],[2746,2746],[3169,3170],[3169,3169],[3247,3248],[3247,3247],[3257,3258],[3257,3257],[3392,3393],[3392,3392],[3400,3401],[3400,3400],[768,781],[2234,2247],[5554,5572]]