[{"/home/Semantically/src/index.js":"1","/home/Semantically/src/reportWebVitals.js":"2","/home/Semantically/src/App.js":"3","/home/Semantically/src/components/Sidebar.js":"4","/home/Semantically/src/components/Highlights.js":"5","/home/Semantically/src/pages/Post.js":"6","/home/Semantically/src/hooks/documentAPI.js":"7","/home/Semantically/src/hooks/NCBOTree.js":"8","/home/Semantically/src/components/SidebarHeader.js":"9","/home/Semantically/src/components/SidebarFooter.js":"10","/home/Semantically/src/hooks/sortKeys.js":"11","/home/Semantically/src/components/SidebarBody.js":"12","/home/Semantically/src/hooks/getRemovedHighlights.js":"13","/home/Semantically/src/hooks/downloadAnnotations.js":"14","/home/Semantically/src/hooks/getText.js":"15","/home/Semantically/src/hooks/getRecommenderAnnotations.js":"16","/home/Semantically/src/components/ManualOntologySelector.js":"17","/home/Semantically/src/components/SidebarLoader.js":"18","/home/Semantically/src/hooks/getTermString.js":"19","/home/Semantically/src/components/SidebarAccordion.js":"20","/home/Semantically/src/hooks/getDefinition.js":"21","/home/Semantically/src/components/AskQuestion.js":"22","/home/Semantically/src/components/LookUp.js":"23","/home/Semantically/src/pages/editor/editor.js":"24","/home/Semantically/src/pages/editor/components/editor/DocumentEditor.js":"25","/home/Semantically/src/pages/editor/components/editor/Highlights.js":"26","/home/Semantically/src/pages/editor/components/sidebar/Sidebar.js":"27","/home/Semantically/src/pages/editor/components/sidebar/SidebarHeader.js":"28","/home/Semantically/src/pages/editor/components/sidebar/SidebarBody.js":"29","/home/Semantically/src/pages/editor/hooks/editor/getRemovedHighlights.js":"30","/home/Semantically/src/pages/editor/hooks/sidebar/sortKeys.js":"31","/home/Semantically/src/pages/editor/hooks/sidebar/getRecommenderAnnotations.js":"32","/home/Semantically/src/pages/editor/components/sidebar/SidebarLoader.js":"33","/home/Semantically/src/pages/editor/components/sidebar/SidebarAccordion.js":"34","/home/Semantically/src/pages/editor/hooks/sidebar/getTermString.js":"35","/home/Semantically/src/pages/editor/hooks/sidebar/getDefinition.js":"36","/home/Semantically/src/pages/editor/hooks/downloadAnnotations.js":"37","/home/Semantically/src/pages/editor/components/LookUp.js":"38","/home/Semantically/src/pages/editor/components/AskQuestion.js":"39","/home/Semantically/src/pages/editor/hooks/editor/documentAPI.js":"40","/home/Semantically/src/pages/editor/components/sidebar/ManualOntologySelector.js":"41","/home/Semantically/src/pages/editor/components/publish.js":"42"},{"size":500,"mtime":1636766523626,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1636766523628,"results":"45","hashOfConfig":"44"},{"size":443,"mtime":1636993207080,"results":"46","hashOfConfig":"44"},{"size":2286,"mtime":1636766523593,"results":"47","hashOfConfig":"44"},{"size":2616,"mtime":1636766523592,"results":"48","hashOfConfig":"44"},{"size":3488,"mtime":1636766523627,"results":"49","hashOfConfig":"44"},{"size":1190,"mtime":1636766523621,"results":"50","hashOfConfig":"44"},{"size":14261,"mtime":1636766523620,"results":"51","hashOfConfig":"44"},{"size":2433,"mtime":1636766523594,"results":"52","hashOfConfig":"44"},{"size":78,"mtime":1636766523594,"results":"53","hashOfConfig":"44"},{"size":550,"mtime":1636766523625,"results":"54","hashOfConfig":"44"},{"size":1427,"mtime":1636766523593,"results":"55","hashOfConfig":"44"},{"size":202,"mtime":1636766523622,"results":"56","hashOfConfig":"44"},{"size":3454,"mtime":1636766523621,"results":"57","hashOfConfig":"44"},{"size":138,"mtime":1636766523624,"results":"58","hashOfConfig":"44"},{"size":2624,"mtime":1636766523621,"results":"59","hashOfConfig":"44"},{"size":2710,"mtime":1636766523593,"results":"60","hashOfConfig":"44"},{"size":198,"mtime":1636766523618,"results":"61","hashOfConfig":"44"},{"size":305,"mtime":1636766523623,"results":"62","hashOfConfig":"44"},{"size":9440,"mtime":1636766523593,"results":"63","hashOfConfig":"44"},{"size":398,"mtime":1636766523621,"results":"64","hashOfConfig":"44"},{"size":3056,"mtime":1636766523591,"results":"65","hashOfConfig":"44"},{"size":4185,"mtime":1636766523592,"results":"66","hashOfConfig":"44"},{"size":1721,"mtime":1636993225183,"results":"67","hashOfConfig":"44"},{"size":686,"mtime":1636994983337,"results":"68","hashOfConfig":"44"},{"size":2556,"mtime":1636821708075,"results":"69","hashOfConfig":"44"},{"size":1284,"mtime":1636994914925,"results":"70","hashOfConfig":"44"},{"size":2445,"mtime":1636994920547,"results":"71","hashOfConfig":"44"},{"size":704,"mtime":1636835351095,"results":"72","hashOfConfig":"44"},{"size":202,"mtime":1636814782834,"results":"73","hashOfConfig":"44"},{"size":550,"mtime":1636814755091,"results":"74","hashOfConfig":"44"},{"size":2624,"mtime":1636814924429,"results":"75","hashOfConfig":"44"},{"size":198,"mtime":1636815103841,"results":"76","hashOfConfig":"44"},{"size":8169,"mtime":1636835399986,"results":"77","hashOfConfig":"44"},{"size":280,"mtime":1636832874209,"results":"78","hashOfConfig":"44"},{"size":398,"mtime":1636814914325,"results":"79","hashOfConfig":"44"},{"size":3470,"mtime":1636832986085,"results":"80","hashOfConfig":"44"},{"size":4185,"mtime":1636816153050,"results":"81","hashOfConfig":"44"},{"size":3063,"mtime":1636816200034,"results":"82","hashOfConfig":"44"},{"size":1190,"mtime":1636814870207,"results":"83","hashOfConfig":"44"},{"size":2710,"mtime":1636816235973,"results":"84","hashOfConfig":"44"},{"size":1150,"mtime":1636833034771,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1hmmlye",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/Semantically/src/index.js",[],["180","181"],"/home/Semantically/src/reportWebVitals.js",[],"/home/Semantically/src/App.js",["182","183","184","185"],"/home/Semantically/src/components/Sidebar.js",[],"/home/Semantically/src/components/Highlights.js",["186","187","188"],"/home/Semantically/src/pages/Post.js",[],"/home/Semantically/src/hooks/documentAPI.js",[],"/home/Semantically/src/hooks/NCBOTree.js",["189"],"/home/Semantically/src/components/SidebarHeader.js",["190","191"],"/home/Semantically/src/components/SidebarFooter.js",[],"/home/Semantically/src/hooks/sortKeys.js",[],"/home/Semantically/src/components/SidebarBody.js",["192"],"/home/Semantically/src/hooks/getRemovedHighlights.js",["193"],"/home/Semantically/src/hooks/downloadAnnotations.js",["194","195","196","197","198","199","200","201"],"/home/Semantically/src/hooks/getText.js",[],"/home/Semantically/src/hooks/getRecommenderAnnotations.js",["202"],"/home/Semantically/src/components/ManualOntologySelector.js",["203","204","205"],"/home/Semantically/src/components/SidebarLoader.js",[],"/home/Semantically/src/hooks/getTermString.js",[],"/home/Semantically/src/components/SidebarAccordion.js",["206","207","208","209"],"/home/Semantically/src/hooks/getDefinition.js",[],"/home/Semantically/src/components/AskQuestion.js",["210","211","212","213","214"],"/home/Semantically/src/components/LookUp.js",["215","216","217"],"/home/Semantically/src/pages/editor/editor.js",["218","219"],"/home/Semantically/src/pages/editor/components/editor/DocumentEditor.js",["220","221","222"],"/home/Semantically/src/pages/editor/components/editor/Highlights.js",["223","224","225"],"import $ from 'jquery';\nimport React, {useEffect, useState} from 'react';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport sortKeys from '../../hooks/sidebar/sortKeys';\nimport getRemovedHighlights from '../../hooks/editor/getRemovedHighlights';\n\nconst Highlights = ({ highlights, currentHighlight, setCurrentHighlight, annotationSelection, editor}) => {\n  const sortedKeys = sortKeys(Object.keys(highlights));\n  const [activeIndex, updateActiveIndex] = useState(0);\n\n  const removedHighlights = getRemovedHighlights(annotationSelection);\n\n  if (editor) {\n    $(document.querySelector(\"trix-editor\")).click(() => {\n        setTimeout(() => updateActiveIndex(editor.getSelectedRange()[0]), 200);\n    });\n  }\n\n  // display all highlights\n  useEffect(() => {\n    for (const term in highlights) {\n      const divider = term.indexOf('-');\n      const from = Number(term.substring(0, divider))-1;\n      const to = Number(term.substring(divider+1, term.length));\n\n      const start = editor.getClientRectAtPosition(from);\n      const end = editor.getClientRectAtPosition(to);\n      const width = end.left - start.left;\n\n      $(`#highlight-${term}`).css({\n        width: `${width}px`,\n        top: `${start.top + 25}px`,\n        left: `${start.left}px`\n      });\n    }\n  });\n\n  useEffect(() => {\n    let set = false;\n    for (const key of sortedKeys) {\n    const divider = key.indexOf('-');\n    const highlightStart = Number(key.substring(0, divider))-1;\n    const highlightEnd = Number(key.substring(divider+1, key.length));\n    if (activeIndex <= highlightEnd) {\n//       $('.active').removeClass('active');\n//       $(`#highlight-${key}`).addClass('active');\n      if (activeIndex > highlightStart) {\n        setCurrentHighlight(key);\n        set = true;\n\n        // show accordion card\n//         const toggle = document.querySelector(`.toggle-${key}`);\n//         const collapse = document.querySelector(`.toggle-${key} + .collapse`);\n//         if (!collapse.classList.contains('show')) {\n//             toggle.click();\n//             setTimeout(() => toggle.scrollIntoView(), 300);\n//         }\n      }\n      break;\n    }\n  }\n  if (!set) setCurrentHighlight(null);\n  }, [activeIndex]);\n  return (\n    <div>\n      {Object.keys(highlights).map((term, key) => <div key={key} id={`highlight-${term}`}\n        className={`highlight ${term === currentHighlight ? 'active' : ''} ${removedHighlights.includes(term) ? 'deleted' : ''} ${highlights[term] != -1 ? 'selected' : ''}`}/>)\n      }\n    </div>\n  )\n};\n\nexport default Highlights;\n","/home/Semantically/src/pages/editor/components/sidebar/Sidebar.js",["226"],"/home/Semantically/src/pages/editor/components/sidebar/SidebarHeader.js",[],"/home/Semantically/src/pages/editor/components/sidebar/SidebarBody.js",["227"],"import React, { useEffect } from 'react';\n\nimport SidebarLoader from './SidebarLoader';\nimport SidebarAccordion from './SidebarAccordion';\n\nconst SidebarBody = sidebarProps => {\n  const { annotations, updateAnnotationSelection,\n    showLoader, showAccordion } = sidebarProps;\n    \n  // reset annotation selection\n  useEffect(() => {\n    const selection = {};\n    Object.keys(annotations)\n      .forEach(term => selection[term] = 0);\n    updateAnnotationSelection(selection);\n  }, [annotations])\n\n  return (\n    <div className=\"flex-grow-1\">\n      {showLoader ? <SidebarLoader /> : null}\n      {showAccordion ? <SidebarAccordion {...sidebarProps} /> : null}\n    </div>\n  );\n}\n\nexport default SidebarBody;\n","/home/Semantically/src/pages/editor/hooks/editor/getRemovedHighlights.js",["228"],"const getRemovedHighlights = annotationSelection => {\n  return Object.keys(annotationSelection)\n      .filter(highlight => annotationSelection[highlight] == -1);\n}\n\nexport default getRemovedHighlights;\n","/home/Semantically/src/pages/editor/hooks/sidebar/sortKeys.js",[],"/home/Semantically/src/pages/editor/hooks/sidebar/getRecommenderAnnotations.js",["229"],"import $ from 'jquery';\n\nconst parseRecommenderData = (data) => {\n  const results = [];\n  for(let i = 0; i < data.length; i++) {\n    results[i] = {};\n    results[i]['acronym'] = data[i]['ontologies'][0]['acronym'];\n    results[i]['annotations'] = [];\n    for (const annotation of data[i]['coverageResult']['annotations']) {\n      results[i]['annotations'].push(annotation);\n    }\n  }\n  return results;\n}\n\nconst formatAnnotations = (results) => {\n  const formattedRes = {};\n\n  for (const res of results) {\n    const acronym = res['acronym'];\n    for (const annotation of res['annotations']) {\n      let key = annotation['from'] + \"-\" + annotation['to'];\n      annotation['acronym'] = acronym;\n      if (key in formattedRes) {\n        formattedRes[key].push(annotation);\n      } else {\n        formattedRes[key] = [annotation];\n      }\n    }\n  }\n    console.log(formattedRes);\n  // remove overlapping annotations\n  for (const res in formattedRes) {\n      for (const res1 in formattedRes) {\n          if (res !== res1) {\n              const from1 = res.substring(0, res.indexOf(\"-\"));\n              const from2 = res1.substring(0, res1.indexOf(\"-\"));\n              const to1 = res.substring(res.indexOf(\"-\")+1, res.length);\n              const to2 = res1.substring(res1.indexOf(\"-\")+1, res1.length);\n\n              if (Number(from1) >= Number(from2) && Number(to1) <= Number(to2)) formattedRes[res] = [];\n              else if (Number(from2) >= Number(from1) && Number(to2) <= Number(to1)) formattedRes[res1] = [];\n          }\n      }\n  }\n  for (const res in formattedRes) {\n      if (formattedRes[res].length == 0) delete formattedRes[res];\n  }\n\n  console.log(formattedRes);\n  return formattedRes;\n}\n\nconst getRecommenderAnnotations = (text, ontologies, callback) => {\n  let ontologyUrl = '';\n  if (ontologies !== undefined) {\n    ontologyUrl += '&ontologies=';\n    for (const ontology of ontologies) {\n      ontologyUrl += ontology + ',';\n    }\n  }\n  const url = 'https://data.bioontology.org/recommender?input='\n    + encodeURIComponent(text)\n    + ontologyUrl\n    + '&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f'\n  $.ajax({\n\t\turl: url,\n    dataType: 'JSON',\n\t\tsuccess: (data) => {\n      console.log(data);\n//           console.log(data);\n\t\t  // Converting retrieved data to an array of ontology ids\n      const results = parseRecommenderData(data);\n\t\t\t// Executing a callback function, passing an array of ontology IDs\n      callback(formatAnnotations(results));\n    },\n    error: () => {\n    \t// Executing callback function, passing an empty array\n\t\t  callback({});\n    }\n\t});\n}\n\nexport default getRecommenderAnnotations;\n","/home/Semantically/src/pages/editor/components/sidebar/SidebarLoader.js",[],"/home/Semantically/src/pages/editor/components/sidebar/SidebarAccordion.js",["230","231","232"],"import React, {useState, useEffect} from 'react';\nimport {Accordion, Card, Button, Modal} from 'react-bootstrap';\nimport $ from 'jquery';\n\nimport sortKeys from '../../hooks/sidebar/sortKeys';\nimport getTermStr from '../../hooks/sidebar/getTermString';\nimport getDefinition from '../../hooks/sidebar/getDefinition';\nimport getRemovedHighlights from '../../hooks/editor/getRemovedHighlights';\n\nimport LookUp from '../LookUp';\nimport AskQuestion from '../AskQuestion';\n\nconst setGetDefinitionListeners = (annotations, setDefinition) => {\n  for (const annotation of Object.values(annotations)) {\n    for (const {from, to, acronym, annotatedClass} of annotation) {\n      const toggle = `${from}-${to}-${acronym}`;\n      const url = annotatedClass.links.self;\n      console.log(toggle);\n      $(`.${toggle}`).click(() => {setDefinition(url); console.log(toggle);});\n    }\n  }\n}\n\nconst removeHighlight = (currentHighlight, setCurrentHighlight, highlights, updateHighlights) => {\n  delete highlights[currentHighlight];\n  updateHighlights({...highlights});\n  setCurrentHighlight('');\n}\n\n// show in NCBOTree\nconst showInTree = text => {\n  while (document.querySelector('#tree > .root > span') !== null) setTimeout(() => {}, 100);\n  const listItem = [...document.querySelectorAll('#tree li')].filter(li => li.innerText.toLowerCase() === text.toLowerCase());\n  if (listItem.length > 0) listItem[0].scrollIntoView();\n  console.log(listItem);\n}\n\nconst SidebarAccordion = ({ annotations, updateAnnotations, definitions, updateDefinitions,\n  updateHighlights, loadHighlights, highlights, updateLoadHighlights, currentHighlight,\n  setCurrentHighlight, annotationSelection, updateAnnotationSelection, content }) => {\n\n  const [openOntologyModal, updateOpenOntologyModal] = useState(false);\n  const [openLookUpModal, updateOpenLookUpModal] = useState(false);\n  const [openPostModal, updateOpenPostModal] = useState(false);\n\n\n  const [setDefinitionListeners, updateSetDefinitionListeners] = useState(false);\n  const [ontologyIdx, updateOntologyIdx] = useState(0);\n  // console.log(currentHighlight)\n  const annotatedTerms = sortKeys(Object.keys(annotations));\n  const removedHighlights = getRemovedHighlights(annotationSelection);\n//   console.log(annotations);\n  console.log('refresh');\n\n  const setDefinition = url => {\n    if (!(url in definitions)) {\n      getDefinition(url).then(def => updateDefinitions({...definitions, [url]: def}));\n      return 'Loading...';\n    } else {\n      return definitions[url];\n    }\n  }\n\n  if (!setDefinitionListeners) {\n    console.log(\"here\");\n    setGetDefinitionListeners(annotations, setDefinition);\n    updateSetDefinitionListeners(true);\n  }\n\n  if (loadHighlights) {\n    const newHighlights = {};\n    for (const term of annotatedTerms) {\n      newHighlights[term] = -1;\n    }\n    updateHighlights(newHighlights);\n    updateLoadHighlights(false);\n  }\n\n//   useEffect(() => {\n//     for (const term in annotatedTerms) {\n//       $(`toggle-${term}`).click(() => setDefinition(annotations[term][0].annotatedClass.links.self));\n//     }\n//   });\n\n  // Switch annotations\n  useEffect(() => {\n    updateOntologyIdx(0);\n  }, [currentHighlight]);\n\n  // Switch annotations or change ontology\n  useEffect(() => {\n    // if (currentHighlight) {\n    //   const tree = $(\"#tree\")[0].NCBOTree;\n    //   const ontology = annotations[currentHighlight][ontologyIdx];\n    //   console.log(ontology.annotatedClass['@id']);\n    //   showInTree(annotations[currentHighlight][ontologyIdx].text);\n    //   tree.jumpToClass(ontology.annotatedClass['@id']);\n      // change NCBO tree\n\n  }, [currentHighlight, ontologyIdx]);\n\n  if (!currentHighlight) return null;\n\n  return (\n    <React.Fragment>\n    {removedHighlights.includes(currentHighlight) ?\n      <Card className=\"p-4 text-center\"><Button variant=\"outline-success\" size=\"sm\" style={{width: 'fit-content'}} className=\"mx-auto\"\n        onClick={() => updateAnnotationSelection({...annotationSelection, [currentHighlight]: 0})}>reannotate</Button></Card> :\n      <div><Card>\n        <Card.Header className=\"d-flex justify-content-between\">\n          <span>{annotations[currentHighlight][annotationSelection[currentHighlight]].acronym}</span>\n          <div>\n            { annotations[currentHighlight].length > 1 ?\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => updateOpenOntologyModal(true)}>change</Button> : null }{' '}\n            <Button variant=\"outline-danger\" size=\"sm\" onClick={() => updateAnnotationSelection({...annotationSelection, [currentHighlight]: -1})}>{'delete'}</Button>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>\n            {setDefinition(annotations[currentHighlight][annotationSelection[currentHighlight]].annotatedClass.links.self)}\n          </Card.Text>\n        </Card.Body>\n        {openOntologyModal ? <OntologyModal term={currentHighlight} updateOpenOntologyModal={updateOpenOntologyModal} annotations={annotations} definitions={definitions} setDefinition={setDefinition} annotationSelection={annotationSelection} updateAnnotationSelection={updateAnnotationSelection} content={content} /> : null}\n        {openLookUpModal ? <LookUp word={getTermStr(currentHighlight, content)} ontology={annotations[currentHighlight][annotationSelection[currentHighlight]]} updateOpenPostModal={updateOpenPostModal} updateOpenLookUpModal={updateOpenLookUpModal}/> : null}\n        {openPostModal ? <AskQuestion word={getTermStr(currentHighlight, content)} ontology={annotations[currentHighlight][annotationSelection[currentHighlight]]} updateOpenPostModal={updateOpenPostModal} updateOpenLookUpModal={updateOpenLookUpModal} currentHighlight={currentHighlight} annotationSelection={annotationSelection} annotations={annotations} /> : null}\n      </Card>\n      <div className=\"text-right\"><Button variant=\"link\" style={{'box-shadow': 'none'}} onClick={() => updateOpenLookUpModal(true)}>Need Help?</Button></div></div>\n    }\n    </React.Fragment>\n  );\n}\n\nconst OntologyModal = ({term, updateOpenOntologyModal, annotations, definitions, setDefinition, ontologyIdx, annotationSelection, updateAnnotationSelection, content }) => {\n  const closeModal = () => updateOpenOntologyModal(false);\n  const getDef = url => {\n    return definitions[url] ? definitions[url] : 'loading...';\n  }\n\n  useEffect(() => {\n    for (const ontology of annotations[term]) {\n      $(`.modal-toggle-${ontology.acronym}`).click(() => setDefinition(ontology.annotatedClass.links.self));\n    }\n  });\n\n  return (\n    <Modal\n      show={true}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {getTermStr(term, content)}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Accordion defaultActiveKey={`${term}-modal-0`} id=\"sidebar-accordion\">\n          {annotations[term].map((ontology, idx) =>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey={`${term}-modal-${idx}`} className={`d-flex justify-content-between ${ontology.from}-${ontology.to}-${ontology.acronym} modal-toggle-${ontology.acronym}`}>\n              <span>{ontology.acronym}</span>\n              {ontologyIdx != idx ?\n                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {\n                    updateAnnotationSelection({...annotationSelection, [term]: idx});\n                    updateOpenOntologyModal(false);\n                }}>select</Button>\n                : null}\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey={`${term}-modal-${idx}`} className={`p-2 p-0 accordion-card`}>\n              <Card>\n                <Card.Body>\n                  <Card.Text>\n                    {getDef(ontology.annotatedClass.links.self)}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Accordion.Collapse>\n          </Card>\n          )}\n        </Accordion>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={closeModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default SidebarAccordion;\n","/home/Semantically/src/pages/editor/hooks/sidebar/getTermString.js",[],"/home/Semantically/src/pages/editor/hooks/sidebar/getDefinition.js",[],"/home/Semantically/src/pages/editor/hooks/downloadAnnotations.js",["233","234","235","236","237","238","239","240"],"import getTermStr from './sidebar/getTermString';\nimport getDefinition from './sidebar/getDefinition';\nimport sortKeys from './sidebar/sortKeys';\n\nconst download = (filename, text) => {\n  const element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n\n  document.body.appendChild(element);\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nconst saveAsJSON = async (content, annotations, annotationSelection, definitions, updateDefinitions) => {\n  const schemaJson = {};\n\n  const onlySelectedAnnotations = {};\n  for (const term in annotationSelection) {\n    if (annotationSelection[term] !== -1)\n      onlySelectedAnnotations[term] = annotations[term][annotationSelection[term]];\n  }\n\n  for(const term in onlySelectedAnnotations) {\n    const annotation = onlySelectedAnnotations[term];\n    const url = annotation.annotatedClass.links.self;\n    const def = url in definitions ? definitions[url] : await getDefinition(url);\n    updateDefinitions({...definitions, [url]: def});\n\n    schemaJson[getTermStr(term, content)] = def;\n  }\n\n  download('document.json', JSON.stringify(schemaJson));\n}\n\nconst saveAsHTML = async (content, annotations, annotationSelection, definitions, updateDefinitions, hasHighlights) => {\n  const schemaJson = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"MedicalEntity\",\n    \"code\": []\n  };\n\n  const onlySelectedAnnotations = {};\n  for (const term in annotationSelection) {\n    if (annotationSelection[term] !== -1)\n      onlySelectedAnnotations[term] = annotations[term][annotationSelection[term]];\n  }\n\n  let addedLength = 0;\n  let text = content;\n  let annText = \"\";\n  let ended = 0;\n\n  for(const term of sortKeys(Object.keys(onlySelectedAnnotations))) {\n    const annotation = onlySelectedAnnotations[term];\n\n    schemaJson['code'].push({\"@type\": \"MedicalCode\", \"name\": getTermStr(term), \"codingSystem\": annotation.acronym, \"link\": annotation.annotatedClass['@id']});\n    if(hasHighlights) {\n      const url = annotation.annotatedClass.links.self;\n      const def = url in definitions ? definitions[url] : await getDefinition(url);\n      updateDefinitions({...definitions, [url]: def});\n      annText += text.substring(ended, annotation.from - 1) + `<span class=\"tippy\" title=\"${def}\">${text.substring(annotation.from - 1, annotation.to)}</span>`;\n      ended = annotation.to;\n    }\n  }\n  annText += text.substring(ended);\n\n  download('document.html', '<html><head><title><\\/title><link href=\"https://fonts.googleapis.com/css?family=Nunito+Sans:400,600,800\" rel=\"stylesheet\">' + ((hasHighlights) ? '<script src=\"https://unpkg.com/tippy.js@2.5.4/dist/tippy.all.min.js\"><\\/script>' : '') + '<style>.container { font-family: Nunito Sans,Avenir,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Ubuntu,Cantarell,Helvetica Neue,Helvetica,Arial,sans-serif; font-size: 1.125rem; padding: 4%; margin: 0 auto; }' + ((hasHighlights) ? ' .tippy { background: rgba(255,202,223,.5); color: #d22489; outline: 0; border-bottom: 1px solid #f27da6; padding: 0 4px; font-weight: 600; cursor: help; }' : '') + '<\\/style><script type=\"application/ld+json\">' + JSON.stringify(schemaJson) + '<\\/script><\\/head><body class=\"container\"' + ((hasHighlights) ? ' onload=\"tippy(\\'.tippy\\');\"' : '') + '>' + (hasHighlights ? annText : text) + '<\\/body><\\/html>');\n}\n\nexport {saveAsHTML, saveAsJSON};\n","/home/Semantically/src/pages/editor/components/LookUp.js",["241","242","243"],"import React from 'react';\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl} from 'react-bootstrap';\n\n\nconst LookUp = ({word, ontology, updateOpenPostModal, updateOpenLookUpModal}) => {\n  const closeModal = () => updateOpenLookUpModal(false);\n  const askQuestion = () => {\n    closeModal();\n    updateOpenPostModal(true);\n  };\n\n  return (\n    <Modal\n      show={true}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {word}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <Accordion defaultActiveKey={`${word}-modal-0`} id=\"sidebar-accordion\">\n        <FormControl\n          type=\"search\"\n          placeholder=\"Search\"\n          className=\"mr-2 mb-3\"\n          aria-label=\"Search\"\n        />\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey={`${word}-modal-0`} className={`d-flex justify-content-between modal-toggle-`}>\n            <span>{'NCIT'}</span>\n            <div>\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>select</Button>{' '}\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>open</Button>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={`${word}-modal-0`} className={`p-2 p-0 accordion-card`}>\n            <Card>\n              <Card.Body>\n                <Card.Text>\n                  {'Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey={`${word}-modal-1`} className={`d-flex justify-content-between modal-toggle-`}>\n            <span>{'OMIT'}</span>\n            <div>\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>select</Button>{' '}\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>open</Button>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={`${word}-modal-1`} className={`p-2 p-0 accordion-card`}>\n            <Card>\n              <Card.Body>\n                <Card.Text>\n                  {'Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey={`${word}-modal-2`} className={`d-flex justify-content-between modal-toggle-`}>\n            <span>{'MELO'}</span>\n            <div>\n              <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {}}>select</Button>{' '}\n              <Button variant=\"outline-info\" size=\"sm\" onClick={() => {}}>open</Button>\n            </div>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={`${word}-modal-2`} className={`p-2 p-0 accordion-card`}>\n            <Card>\n              <Card.Body>\n                <Card.Text>\n                  {'Omnis nihil blanditiis autem numquam autem sit. Quia earum rerum id at. Omnis tempora ea vitae ut corrupti sequi ut. Dignissimos accusamus et in. Nemo perferendis quam quis aut qui consequatur amet. Autem adipisci laboriosam totam et.'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      <div className=\"text-right\"><Button variant=\"link\" style={{'box-shadow': 'none'}} onClick={() => askQuestion()}>{'Ask question'}</Button></div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={closeModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n};\n\nexport default LookUp;\n","/home/Semantically/src/pages/editor/components/AskQuestion.js",["244","245","246","247","248"],"import React,{useState} from 'react';\nimport {Card, Button, Modal, Row, Form, Col, Accordion, FormControl, Dropdown} from 'react-bootstrap';\nimport {createPost} from '../hooks/editor/documentAPI';\n\n\nconst AskQuestion = ({word, ontology, updateOpenPostModal, currentHighlight, annotationSelection, annotations}) => {\n\n  const context = \"Omnis nihil blanditiis autem numquam autem sit.\";\n  const [question, updateQuestion] = useState(0);\n  const questions = [\n    \"Which ontology should I use?\",\n    \"Does this ontology best describe this terminology?\"\n  ];\n\n  const [questionOntology, updateQuestionOntology] = useState(annotationSelection[currentHighlight]);\n\n  const acronyms = annotations[currentHighlight].reduce((ontologies, ontology) => ontologies.concat(ontology.acronym), []);\n\n  const closeModal = () => updateOpenPostModal(false);\n\n  const submit = () => {\n    createPost('1', word, questions[question], context, acronyms[questionOntology], data => {\n      if (data['post_id']) {\n        console.log(data['post_id']);\n        window.open('localhost:3001/post', '_blank')\n      } else console.log(data['message']);\n    });\n  }\n  return (\n    <Modal\n      show={true}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onHide={closeModal}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {'Ask Question'}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"px-5\">\n\n        <Form>\n        <Row className=\"mb-1\">\n          <Form.Group as={Col} controlId=\"term\">\n            <Form.Label>Terminology</Form.Label>\n            <Form.Control type=\"text\" value={word} disabled />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"term\">\n            <Form.Label>Context</Form.Label>\n            <Form.Control type=\"text\" value={context} disabled />\n          </Form.Group>\n        </Row>\n        <Row className=\"mb-1\">\n        <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n  <Form.Label>What do you need help with?</Form.Label>\n  <Form.Control as=\"select\" size=\"md\" value={question} onChange={evt => updateQuestion(evt.target.value)} custom>\n    {questions.map((question, index) => <option value={index}>{question}</option>)}\n  </Form.Control>\n</Form.Group>\n        </Row>\n        {question == 1 ?\n        <Row className=\"mb-1\">\n        <Form.Group as={Col} controlId=\"exampleForm.SelectCustomSizeLg\">\n          <Form.Label>Select Ontology</Form.Label>\n          <Form.Control as=\"select\" size=\"md\" value={questionOntology} onChange={evt => updateQuestionOntology(evt.target.value)} custom>\n            {acronyms.map((acronym, idx) => <option value={idx}>{acronym}</option>)}\n          </Form.Control>\n        </Form.Group>\n        </Row> : null }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n      <Button onClick={closeModal} variant=\"secondary\">Close</Button>\n    <Button variant=\"primary\" onClick={() => submit()}>Submit</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n};\n\nexport default AskQuestion;\n","/home/Semantically/src/pages/editor/hooks/editor/documentAPI.js",[],"/home/Semantically/src/pages/editor/components/sidebar/ManualOntologySelector.js",["249","250","251"],"import React, {useState, useEffect} from 'react';\nimport $ from 'jquery';\nimport {Button} from 'react-bootstrap';\nimport Chips, { Chip } from 'react-chips';\n\nconst fetchAllOntologies = (updateAllOntologies) => {\n  $.ajax({\n    url: 'https://data.bioontology.org/ontologies?include=name,acronym&display_links=false&display_context=false&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f',\n    dataType: 'JSON',\n    success: data => {\n      const ontologies = {};\n      for (const ontology of data) {\n        ontologies[ontology.name.trim()] = ontology['acronym'];\n        // differentiate acronyms\n        ontologies[`${ontology['acronym']} `] = ontology.name;\n      }\n      updateAllOntologies(ontologies);\n    }});\n}\n\nconst limitResults = limit => {\n  if (limit < 0) return;\n  const resultList = $('#react-autowhatever-1 > ul');\n  const len = resultList.children().length;\n  if (len > limit) {\n    for (let i = limit; i < len; i++) resultList.children().remove('#react-autowhatever-1--item-' + i);\n  }\n}\n\nconst updateChips = (chips, allOntologies, updateManualOntologies) => {\n  updateManualOntologies(chips.reduce((ontologies, chip) => {\n    if (chip.endsWith(' ')) ontologies[chip.trim()] = allOntologies[chip];\n    else ontologies[`${allOntologies[chip]}`] = chip;\n    return ontologies;\n  }, {}));\n}\n\nconst getSuggestions = (allOntologies, manualOntologies) => {\n  return Object.keys(allOntologies).filter(\n    suggestion => !Object.keys(manualOntologies).concat(Object.values(manualOntologies)).includes(suggestion.trim())\n  );\n}\n\nconst ManualAnnotationPopUp = ({manualOntologies, updateManualOntologies}) => {\n\n  const [allOntologies, updateAllOntologies] = useState({});\n  const [loadedAllOntologies, updateLoadedAllOntologies] = useState(false);\n  const [hideOntologyField, updateHideOntologyField] = useState(false);\n\n  if (!loadedAllOntologies) {\n      fetchAllOntologies(updateAllOntologies);\n      updateLoadedAllOntologies(true);\n  }\n\n\n  return (\n    <div className=\"mb-3\">\n      {hideOntologyField ?\n        <Button variant=\"outline-secondary\" className=\"pt-1 pb-2 w-100\" onClick={() => updateHideOntologyField(false)}>show ontologies</Button> :\n        <React.Fragment>\n          <Chips\n            placeholder={\"Enter ontology\"}\n            value={Object.values(manualOntologies)}\n            onChange={chips => updateChips(chips, allOntologies, updateManualOntologies)}\n            suggestions={getSuggestions(allOntologies, manualOntologies)}\n            highlightFirstSuggestion={true}\n          />\n          <Button variant=\"link\" onClick={() => updateHideOntologyField(true)}>hide ontologies</Button>\n        </React.Fragment>\n      }\n      </div>\n  );\n}\n\nexport default ManualAnnotationPopUp;\n","/home/Semantically/src/pages/editor/components/publish.js",[],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":4,"column":17,"nodeType":"258","messageId":"259","endLine":4,"endColumn":25},{"ruleId":"256","severity":1,"message":"260","line":4,"column":27,"nodeType":"258","messageId":"259","endLine":4,"endColumn":36},{"ruleId":"256","severity":1,"message":"261","line":5,"column":39,"nodeType":"258","messageId":"259","endLine":5,"endColumn":48},{"ruleId":"256","severity":1,"message":"262","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":9},{"ruleId":"256","severity":1,"message":"263","line":4,"column":10,"nodeType":"258","messageId":"259","endLine":4,"endColumn":28},{"ruleId":"264","severity":1,"message":"265","line":64,"column":6,"nodeType":"266","endLine":64,"endColumn":19,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":68,"column":148,"nodeType":"270","messageId":"271","endLine":68,"endColumn":150},{"ruleId":"256","severity":1,"message":"262","line":1,"column":8,"nodeType":"258","messageId":"259","endLine":1,"endColumn":9},{"ruleId":"256","severity":1,"message":"272","line":4,"column":17,"nodeType":"258","messageId":"259","endLine":4,"endColumn":25},{"ruleId":"256","severity":1,"message":"273","line":4,"column":27,"nodeType":"258","messageId":"259","endLine":4,"endColumn":41},{"ruleId":"264","severity":1,"message":"274","line":18,"column":6,"nodeType":"266","endLine":18,"endColumn":19,"suggestions":"275"},{"ruleId":"268","severity":1,"message":"276","line":3,"column":59,"nodeType":"270","messageId":"271","endLine":3,"endColumn":61},{"ruleId":"256","severity":1,"message":"277","line":52,"column":7,"nodeType":"258","messageId":"259","endLine":52,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":71,"column":50,"nodeType":"280","messageId":"281","endLine":71,"endColumn":51,"suggestions":"282"},{"ruleId":"278","severity":1,"message":"279","line":71,"column":246,"nodeType":"280","messageId":"281","endLine":71,"endColumn":247,"suggestions":"283"},{"ruleId":"278","severity":1,"message":"279","line":71,"column":669,"nodeType":"280","messageId":"281","endLine":71,"endColumn":670,"suggestions":"284"},{"ruleId":"278","severity":1,"message":"279","line":71,"column":747,"nodeType":"280","messageId":"281","endLine":71,"endColumn":748,"suggestions":"285"},{"ruleId":"278","severity":1,"message":"279","line":71,"column":757,"nodeType":"280","messageId":"281","endLine":71,"endColumn":758,"suggestions":"286"},{"ruleId":"278","severity":1,"message":"279","line":71,"column":892,"nodeType":"280","messageId":"281","endLine":71,"endColumn":893,"suggestions":"287"},{"ruleId":"278","severity":1,"message":"279","line":71,"column":900,"nodeType":"280","messageId":"281","endLine":71,"endColumn":901,"suggestions":"288"},{"ruleId":"268","severity":1,"message":"276","line":47,"column":36,"nodeType":"270","messageId":"271","endLine":47,"endColumn":38},{"ruleId":"256","severity":1,"message":"260","line":1,"column":26,"nodeType":"258","messageId":"259","endLine":1,"endColumn":35},{"ruleId":"256","severity":1,"message":"289","line":4,"column":17,"nodeType":"258","messageId":"259","endLine":4,"endColumn":21},{"ruleId":"256","severity":1,"message":"290","line":21,"column":7,"nodeType":"258","messageId":"259","endLine":21,"endColumn":19},{"ruleId":"256","severity":1,"message":"291","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":15},{"ruleId":"256","severity":1,"message":"292","line":25,"column":7,"nodeType":"258","messageId":"259","endLine":25,"endColumn":22},{"ruleId":"256","severity":1,"message":"293","line":32,"column":7,"nodeType":"258","messageId":"259","endLine":32,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":164,"column":28,"nodeType":"270","messageId":"271","endLine":164,"endColumn":30},{"ruleId":"256","severity":1,"message":"294","line":2,"column":9,"nodeType":"258","messageId":"259","endLine":2,"endColumn":13},{"ruleId":"256","severity":1,"message":"295","line":2,"column":46,"nodeType":"258","messageId":"259","endLine":2,"endColumn":55},{"ruleId":"256","severity":1,"message":"296","line":2,"column":57,"nodeType":"258","messageId":"259","endLine":2,"endColumn":68},{"ruleId":"256","severity":1,"message":"272","line":2,"column":70,"nodeType":"258","messageId":"259","endLine":2,"endColumn":78},{"ruleId":"268","severity":1,"message":"276","line":62,"column":19,"nodeType":"270","messageId":"271","endLine":62,"endColumn":21},{"ruleId":"256","severity":1,"message":"297","line":2,"column":30,"nodeType":"258","messageId":"259","endLine":2,"endColumn":33},{"ruleId":"256","severity":1,"message":"298","line":2,"column":35,"nodeType":"258","messageId":"259","endLine":2,"endColumn":39},{"ruleId":"256","severity":1,"message":"299","line":2,"column":41,"nodeType":"258","messageId":"259","endLine":2,"endColumn":44},{"ruleId":"256","severity":1,"message":"260","line":1,"column":27,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"262","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":9},{"ruleId":"256","severity":1,"message":"260","line":4,"column":16,"nodeType":"258","messageId":"259","endLine":4,"endColumn":25},{"ruleId":"256","severity":1,"message":"257","line":4,"column":27,"nodeType":"258","messageId":"259","endLine":4,"endColumn":35},{"ruleId":"256","severity":1,"message":"262","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":9},{"ruleId":"256","severity":1,"message":"263","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":28},{"ruleId":"264","severity":1,"message":"265","line":64,"column":6,"nodeType":"266","endLine":64,"endColumn":19,"suggestions":"300"},{"ruleId":"268","severity":1,"message":"269","line":68,"column":148,"nodeType":"270","messageId":"271","endLine":68,"endColumn":150},{"ruleId":"256","severity":1,"message":"262","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":9},{"ruleId":"264","severity":1,"message":"301","line":16,"column":6,"nodeType":"266","endLine":16,"endColumn":19,"suggestions":"302"},{"ruleId":"268","severity":1,"message":"276","line":3,"column":59,"nodeType":"270","messageId":"271","endLine":3,"endColumn":61},{"ruleId":"268","severity":1,"message":"276","line":47,"column":36,"nodeType":"270","messageId":"271","endLine":47,"endColumn":38},{"ruleId":"256","severity":1,"message":"292","line":24,"column":7,"nodeType":"258","messageId":"259","endLine":24,"endColumn":22},{"ruleId":"256","severity":1,"message":"293","line":31,"column":7,"nodeType":"258","messageId":"259","endLine":31,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":163,"column":28,"nodeType":"270","messageId":"271","endLine":163,"endColumn":30},{"ruleId":"256","severity":1,"message":"277","line":51,"column":7,"nodeType":"258","messageId":"259","endLine":51,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":70,"column":50,"nodeType":"280","messageId":"281","endLine":70,"endColumn":51,"suggestions":"303"},{"ruleId":"278","severity":1,"message":"279","line":70,"column":246,"nodeType":"280","messageId":"281","endLine":70,"endColumn":247,"suggestions":"304"},{"ruleId":"278","severity":1,"message":"279","line":70,"column":669,"nodeType":"280","messageId":"281","endLine":70,"endColumn":670,"suggestions":"305"},{"ruleId":"278","severity":1,"message":"279","line":70,"column":747,"nodeType":"280","messageId":"281","endLine":70,"endColumn":748,"suggestions":"306"},{"ruleId":"278","severity":1,"message":"279","line":70,"column":757,"nodeType":"280","messageId":"281","endLine":70,"endColumn":758,"suggestions":"307"},{"ruleId":"278","severity":1,"message":"279","line":70,"column":892,"nodeType":"280","messageId":"281","endLine":70,"endColumn":893,"suggestions":"308"},{"ruleId":"278","severity":1,"message":"279","line":70,"column":900,"nodeType":"280","messageId":"281","endLine":70,"endColumn":901,"suggestions":"309"},{"ruleId":"256","severity":1,"message":"297","line":2,"column":30,"nodeType":"258","messageId":"259","endLine":2,"endColumn":33},{"ruleId":"256","severity":1,"message":"298","line":2,"column":35,"nodeType":"258","messageId":"259","endLine":2,"endColumn":39},{"ruleId":"256","severity":1,"message":"299","line":2,"column":41,"nodeType":"258","messageId":"259","endLine":2,"endColumn":44},{"ruleId":"256","severity":1,"message":"294","line":2,"column":9,"nodeType":"258","messageId":"259","endLine":2,"endColumn":13},{"ruleId":"256","severity":1,"message":"295","line":2,"column":46,"nodeType":"258","messageId":"259","endLine":2,"endColumn":55},{"ruleId":"256","severity":1,"message":"296","line":2,"column":57,"nodeType":"258","messageId":"259","endLine":2,"endColumn":68},{"ruleId":"256","severity":1,"message":"272","line":2,"column":70,"nodeType":"258","messageId":"259","endLine":2,"endColumn":78},{"ruleId":"268","severity":1,"message":"276","line":62,"column":19,"nodeType":"270","messageId":"271","endLine":62,"endColumn":21},{"ruleId":"256","severity":1,"message":"260","line":1,"column":26,"nodeType":"258","messageId":"259","endLine":1,"endColumn":35},{"ruleId":"256","severity":1,"message":"289","line":4,"column":17,"nodeType":"258","messageId":"259","endLine":4,"endColumn":21},{"ruleId":"256","severity":1,"message":"290","line":21,"column":7,"nodeType":"258","messageId":"259","endLine":21,"endColumn":19},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useParams' is defined but never used.","'$' is defined but never used.","'useAccordionToggle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCurrentHighlight' and 'sortedKeys'. Either include them or remove the dependency array. If 'setCurrentHighlight' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["312"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","React Hook useEffect has a missing dependency: 'updateAnnotationSelection'. Either include it or remove the dependency array. If 'updateAnnotationSelection' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["313"],"Expected '===' and instead saw '=='.","'addedLength' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],["326","327"],"'Chip' is defined but never used.","'limitResults' is assigned a value but never used.","'getText' is defined but never used.","'removeHighlight' is assigned a value but never used.","'showInTree' is assigned a value but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","'FormControl' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.",["328"],"React Hook useEffect has a missing dependency: 'updateAnnotationSelection'. Either include it or remove the dependency array.",["329"],["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],"no-global-assign","no-unsafe-negation",{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"messageId":"348","fix":"349","desc":"350"},{"messageId":"351","fix":"352","desc":"353"},{"messageId":"348","fix":"354","desc":"350"},{"messageId":"351","fix":"355","desc":"353"},{"messageId":"348","fix":"356","desc":"350"},{"messageId":"351","fix":"357","desc":"353"},{"messageId":"348","fix":"358","desc":"350"},{"messageId":"351","fix":"359","desc":"353"},{"messageId":"348","fix":"360","desc":"350"},{"messageId":"351","fix":"361","desc":"353"},{"messageId":"348","fix":"362","desc":"350"},{"messageId":"351","fix":"363","desc":"353"},{"messageId":"348","fix":"364","desc":"350"},{"messageId":"351","fix":"365","desc":"353"},{"desc":"344","fix":"366"},{"desc":"346","fix":"367"},{"messageId":"348","fix":"368","desc":"350"},{"messageId":"351","fix":"369","desc":"353"},{"messageId":"348","fix":"370","desc":"350"},{"messageId":"351","fix":"371","desc":"353"},{"messageId":"348","fix":"372","desc":"350"},{"messageId":"351","fix":"373","desc":"353"},{"messageId":"348","fix":"374","desc":"350"},{"messageId":"351","fix":"375","desc":"353"},{"messageId":"348","fix":"376","desc":"350"},{"messageId":"351","fix":"377","desc":"353"},{"messageId":"348","fix":"378","desc":"350"},{"messageId":"351","fix":"379","desc":"353"},{"messageId":"348","fix":"380","desc":"350"},{"messageId":"351","fix":"381","desc":"353"},"Update the dependencies array to be: [activeIndex, setCurrentHighlight, sortedKeys]",{"range":"382","text":"383"},"Update the dependencies array to be: [annotations, updateAnnotationSelection]",{"range":"384","text":"385"},"removeEscape",{"range":"386","text":"387"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"388","text":"389"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"390","text":"387"},{"range":"391","text":"389"},{"range":"392","text":"387"},{"range":"393","text":"389"},{"range":"394","text":"387"},{"range":"395","text":"389"},{"range":"396","text":"387"},{"range":"397","text":"389"},{"range":"398","text":"387"},{"range":"399","text":"389"},{"range":"400","text":"387"},{"range":"401","text":"389"},{"range":"402","text":"383"},{"range":"403","text":"385"},{"range":"404","text":"387"},{"range":"405","text":"389"},{"range":"406","text":"387"},{"range":"407","text":"389"},{"range":"408","text":"387"},{"range":"409","text":"389"},{"range":"410","text":"387"},{"range":"411","text":"389"},{"range":"412","text":"387"},{"range":"413","text":"389"},{"range":"414","text":"387"},{"range":"415","text":"389"},{"range":"416","text":"387"},{"range":"417","text":"389"},[2258,2271],"[activeIndex, setCurrentHighlight, sortedKeys]",[667,680],"[annotations, updateAnnotationSelection]",[2557,2558],"",[2557,2557],"\\",[2753,2754],[2753,2753],[3176,3177],[3176,3176],[3254,3255],[3254,3254],[3264,3265],[3264,3264],[3399,3400],[3399,3399],[3407,3408],[3407,3407],[2198,2211],[480,493],[2573,2574],[2573,2573],[2769,2770],[2769,2769],[3192,3193],[3192,3192],[3270,3271],[3270,3270],[3280,3281],[3280,3280],[3415,3416],[3415,3415],[3423,3424],[3423,3423]]