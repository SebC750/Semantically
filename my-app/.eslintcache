[{"/home/smbouad/workspace/Semantically/my-app/src/index.js":"1","/home/smbouad/workspace/Semantically/my-app/src/App.js":"2","/home/smbouad/workspace/Semantically/my-app/src/reportWebVitals.js":"3","/home/smbouad/workspace/Semantically/my-app/src/components/Sidebar.js":"4","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarHeader.js":"5","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarBody.js":"6","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarFooter.js":"7","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarLoader.js":"8","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarAccordion.js":"9","/home/smbouad/workspace/Semantically/my-app/src/hooks/getRecommenderAnnotations.js":"10","/home/smbouad/workspace/Semantically/my-app/src/hooks/getText.js":"11","/home/smbouad/workspace/Semantically/my-app/src/hooks/sortKeys.js":"12","/home/smbouad/workspace/Semantically/my-app/src/hooks/getDefinition.js":"13","/home/smbouad/workspace/Semantically/my-app/src/components/Highlights.js":"14"},{"size":500,"mtime":1613567750493,"results":"15","hashOfConfig":"16"},{"size":576,"mtime":1613582619287,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1613567750493,"results":"18","hashOfConfig":"16"},{"size":972,"mtime":1613582049532,"results":"19","hashOfConfig":"16"},{"size":767,"mtime":1614016475920,"results":"20","hashOfConfig":"16"},{"size":809,"mtime":1614194495399,"results":"21","hashOfConfig":"16"},{"size":78,"mtime":1613567750493,"results":"22","hashOfConfig":"16"},{"size":198,"mtime":1613567750493,"results":"23","hashOfConfig":"16"},{"size":6163,"mtime":1615396985751,"results":"24","hashOfConfig":"16"},{"size":2360,"mtime":1613869680393,"results":"25","hashOfConfig":"16"},{"size":138,"mtime":1613567750493,"results":"26","hashOfConfig":"16"},{"size":550,"mtime":1613869633605,"results":"27","hashOfConfig":"16"},{"size":398,"mtime":1613577453084,"results":"28","hashOfConfig":"16"},{"size":2342,"mtime":1613872619534,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1e0cpnx",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"/home/smbouad/workspace/Semantically/my-app/src/index.js",[],["61","62"],"/home/smbouad/workspace/Semantically/my-app/src/App.js",[],"/home/smbouad/workspace/Semantically/my-app/src/reportWebVitals.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/Sidebar.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarHeader.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarBody.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarFooter.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarLoader.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarAccordion.js",[],"/home/smbouad/workspace/Semantically/my-app/src/hooks/getRecommenderAnnotations.js",["63"],"import $ from 'jquery';\n\nconst parseRecommenderData = (data) => {\n  const results = [];\n  for(let i = 0; i < data.length; i++) {\n    results[i] = {};\n    results[i]['acronym'] = data[i]['ontologies'][0]['acronym'];\n    results[i]['annotations'] = [];\n    for (const annotation of data[i]['coverageResult']['annotations']) {\n      results[i]['annotations'].push(annotation);\n    }\n  }\n  return results;\n}\n\nconst formatAnnotations = (results) => {\n  const formattedRes = {};\n\n  for (const res of results) {\n    const acronym = res['acronym'];\n    for (const annotation of res['annotations']) {\n      let key = annotation['from'] + \"-\" + annotation['to'];\n      annotation['acronym'] = acronym;\n      if (key in formattedRes) {\n        formattedRes[key].push(annotation);\n      } else {\n        formattedRes[key] = [annotation];\n      }\n    }\n  }\n    console.log(formattedRes);\n  // remove overlapping annotations\n  for (const res in formattedRes) {\n      for (const res1 in formattedRes) {\n          if (res !== res1) {\n              const from1 = res.substring(0, res.indexOf(\"-\"));\n              const from2 = res1.substring(0, res1.indexOf(\"-\"));\n              const to1 = res.substring(res.indexOf(\"-\")+1, res.length);\n              const to2 = res1.substring(res1.indexOf(\"-\")+1, res1.length);\n              \n              if (Number(from1) >= Number(from2) && Number(to1) <= Number(to2)) formattedRes[res] = [];\n              else if (Number(from2) >= Number(from1) && Number(to2) <= Number(to1)) formattedRes[res1] = [];\n          }\n      }\n  }\n  for (const res in formattedRes) {\n      if (formattedRes[res].length == 0) delete formattedRes[res];\n  }\n    \n  console.log(formattedRes);\n  return formattedRes;\n}\n\nconst getRecommenderAnnotations = (text, callback) => {\n  $.ajax({\n\t\turl: 'https://data.bioontology.org/recommender?input=' + text + '&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f',\n    dataType: 'JSON',\n\t\tsuccess: (data) => {\n//           console.log(data);\n\t\t  // Converting retrieved data to an array of ontology ids\n      const results = parseRecommenderData(data);\n\t\t\t// Executing a callback function, passing an array of ontology IDs\n      callback(formatAnnotations(results));\n    },\n    error: () => {\n    \t// Executing callback function, passing an empty array\n\t\t  callback({});\n    }\n\t});\n}\n\nexport default getRecommenderAnnotations;\n","/home/smbouad/workspace/Semantically/my-app/src/hooks/getText.js",[],"/home/smbouad/workspace/Semantically/my-app/src/hooks/sortKeys.js",[],"/home/smbouad/workspace/Semantically/my-app/src/hooks/getDefinition.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/Highlights.js",["64","65","66"],"import $ from 'jquery';\nimport React, {useEffect, useState} from 'react';\nimport sortKeys from '../hooks/sortKeys';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nconst Highlights = ({ highlights }) => {\n  const sortedKeys = sortKeys(Object.keys(highlights));\n  \n  const [activeIndex, updateActiveIndex] = useState(0);\n  const [activeTerm, updateActiveTerm] = useState(\"\");\n  const editor = document.querySelector(\"trix-editor\").editor;\n  \n  $(document.querySelector(\"trix-editor\")).click(() => {\n//       console.log(editor.getSelectedRange()[0]);\n      setTimeout(() => updateActiveIndex(editor.getSelectedRange()[0]), 200);\n  });\n  \n  // display all highlights\n  useEffect(() => {\n    for (const term in highlights) {\n      const divider = term.indexOf('-');\n      const from = Number(term.substring(0, divider))-1;\n      const to = Number(term.substring(divider+1, term.length));\n      \n      const start = editor.getClientRectAtPosition(from);\n      const end = editor.getClientRectAtPosition(to);\n      const width = end.left - start.left;\n      \n      $(`#highlight-${term}`).css({\n        width: `${width}px`,\n        top: `${start.top + 25}px`,\n        left: `${start.left}px`\n      });\n    }\n  });\n\n  useEffect(() => {\n    for (const key of sortedKeys) {\n    const divider = key.indexOf('-');\n    const highlightStart = Number(key.substring(0, divider))-1;\n    const highlightEnd = Number(key.substring(divider+1, key.length));\n    if (activeIndex <= highlightEnd) {\n//       $('.active').removeClass('active');\n//       $(`#highlight-${key}`).addClass('active');\n      if (activeIndex > highlightStart) {\n        updateActiveTerm(key);\n          \n        // show accordion card\n        const toggle = document.querySelector(`.toggle-${key}`);\n        const collapse = document.querySelector(`.toggle-${key} + .collapse`);\n        if (!collapse.classList.contains('show')) {\n            toggle.click();\n            setTimeout(() => toggle.scrollIntoView(), 300);\n        }\n      }\n      break;\n    }\n  }\n  }, [activeIndex]);\n  return (\n    <div>\n      {Object.keys(highlights).map((term, key) => <div key={key} id={`highlight-${term}`} \n        className={`highlight ${term === activeTerm ? 'active' : ''} ${highlights[term] != -1 ? 'selected' : ''}`}/>)\n      }\n    </div>\n  )\n};\n\nexport default Highlights;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":47,"column":36,"nodeType":"73","messageId":"74","endLine":47,"endColumn":38},{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":28},{"ruleId":"79","severity":1,"message":"80","line":59,"column":6,"nodeType":"81","endLine":59,"endColumn":19,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"83","line":63,"column":89,"nodeType":"73","messageId":"74","endLine":63,"endColumn":91},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useAccordionToggle' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sortedKeys'. Either include it or remove the dependency array.","ArrayExpression",["86"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [activeIndex, sortedKeys]",{"range":"89","text":"90"},[2043,2056],"[activeIndex, sortedKeys]"]