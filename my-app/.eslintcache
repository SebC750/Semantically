[{"/home/smbouad/workspace/Semantically/my-app/src/index.js":"1","/home/smbouad/workspace/Semantically/my-app/src/App.js":"2","/home/smbouad/workspace/Semantically/my-app/src/reportWebVitals.js":"3","/home/smbouad/workspace/Semantically/my-app/src/components/Sidebar.js":"4","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarHeader.js":"5","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarBody.js":"6","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarFooter.js":"7","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarLoader.js":"8","/home/smbouad/workspace/Semantically/my-app/src/components/SidebarAccordion.js":"9","/home/smbouad/workspace/Semantically/my-app/src/hooks/getRecommenderAnnotations.js":"10","/home/smbouad/workspace/Semantically/my-app/src/hooks/getText.js":"11","/home/smbouad/workspace/Semantically/my-app/src/hooks/sortKeys.js":"12","/home/smbouad/workspace/Semantically/my-app/src/hooks/getDefinition.js":"13","/home/smbouad/workspace/Semantically/my-app/src/components/Highlights.js":"14"},{"size":500,"mtime":1613567750493,"results":"15","hashOfConfig":"16"},{"size":797,"mtime":1616011965650,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1613567750493,"results":"18","hashOfConfig":"16"},{"size":1089,"mtime":1616012052219,"results":"19","hashOfConfig":"16"},{"size":767,"mtime":1614016475920,"results":"20","hashOfConfig":"16"},{"size":926,"mtime":1616012060764,"results":"21","hashOfConfig":"16"},{"size":78,"mtime":1613567750493,"results":"22","hashOfConfig":"16"},{"size":198,"mtime":1613567750493,"results":"23","hashOfConfig":"16"},{"size":6160,"mtime":1616015162191,"results":"24","hashOfConfig":"16"},{"size":2360,"mtime":1613869680393,"results":"25","hashOfConfig":"16"},{"size":138,"mtime":1613567750493,"results":"26","hashOfConfig":"16"},{"size":550,"mtime":1613869633605,"results":"27","hashOfConfig":"16"},{"size":398,"mtime":1613577453084,"results":"28","hashOfConfig":"16"},{"size":2354,"mtime":1616012645429,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1e0cpnx",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/smbouad/workspace/Semantically/my-app/src/index.js",[],["60","61"],"/home/smbouad/workspace/Semantically/my-app/src/App.js",[],"/home/smbouad/workspace/Semantically/my-app/src/reportWebVitals.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/Sidebar.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarHeader.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarBody.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarFooter.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarLoader.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/SidebarAccordion.js",["62","63","64"],"/home/smbouad/workspace/Semantically/my-app/src/hooks/getRecommenderAnnotations.js",["65"],"import $ from 'jquery';\n\nconst parseRecommenderData = (data) => {\n  const results = [];\n  for(let i = 0; i < data.length; i++) {\n    results[i] = {};\n    results[i]['acronym'] = data[i]['ontologies'][0]['acronym'];\n    results[i]['annotations'] = [];\n    for (const annotation of data[i]['coverageResult']['annotations']) {\n      results[i]['annotations'].push(annotation);\n    }\n  }\n  return results;\n}\n\nconst formatAnnotations = (results) => {\n  const formattedRes = {};\n\n  for (const res of results) {\n    const acronym = res['acronym'];\n    for (const annotation of res['annotations']) {\n      let key = annotation['from'] + \"-\" + annotation['to'];\n      annotation['acronym'] = acronym;\n      if (key in formattedRes) {\n        formattedRes[key].push(annotation);\n      } else {\n        formattedRes[key] = [annotation];\n      }\n    }\n  }\n    console.log(formattedRes);\n  // remove overlapping annotations\n  for (const res in formattedRes) {\n      for (const res1 in formattedRes) {\n          if (res !== res1) {\n              const from1 = res.substring(0, res.indexOf(\"-\"));\n              const from2 = res1.substring(0, res1.indexOf(\"-\"));\n              const to1 = res.substring(res.indexOf(\"-\")+1, res.length);\n              const to2 = res1.substring(res1.indexOf(\"-\")+1, res1.length);\n              \n              if (Number(from1) >= Number(from2) && Number(to1) <= Number(to2)) formattedRes[res] = [];\n              else if (Number(from2) >= Number(from1) && Number(to2) <= Number(to1)) formattedRes[res1] = [];\n          }\n      }\n  }\n  for (const res in formattedRes) {\n      if (formattedRes[res].length == 0) delete formattedRes[res];\n  }\n    \n  console.log(formattedRes);\n  return formattedRes;\n}\n\nconst getRecommenderAnnotations = (text, callback) => {\n  $.ajax({\n\t\turl: 'https://data.bioontology.org/recommender?input=' + text + '&apikey=89f4c54e-aee8-4af5-95b6-dd7c608f057f',\n    dataType: 'JSON',\n\t\tsuccess: (data) => {\n//           console.log(data);\n\t\t  // Converting retrieved data to an array of ontology ids\n      const results = parseRecommenderData(data);\n\t\t\t// Executing a callback function, passing an array of ontology IDs\n      callback(formatAnnotations(results));\n    },\n    error: () => {\n    \t// Executing callback function, passing an empty array\n\t\t  callback({});\n    }\n\t});\n}\n\nexport default getRecommenderAnnotations;\n","/home/smbouad/workspace/Semantically/my-app/src/hooks/getText.js",[],"/home/smbouad/workspace/Semantically/my-app/src/hooks/sortKeys.js",[],"/home/smbouad/workspace/Semantically/my-app/src/hooks/getDefinition.js",[],"/home/smbouad/workspace/Semantically/my-app/src/components/Highlights.js",["66","67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":26,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"77","line":91,"column":9,"nodeType":"75","messageId":"76","endLine":91,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":113,"column":28,"nodeType":"80","messageId":"81","endLine":113,"endColumn":30},{"ruleId":"78","severity":1,"message":"82","line":47,"column":36,"nodeType":"80","messageId":"81","endLine":47,"endColumn":38},{"ruleId":"73","severity":1,"message":"83","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":58,"column":6,"nodeType":"86","endLine":58,"endColumn":19,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"79","line":62,"column":95,"nodeType":"80","messageId":"81","endLine":62,"endColumn":97},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getDef' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useAccordionToggle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCurrentHighlight' and 'sortedKeys'. Either include them or remove the dependency array. If 'setCurrentHighlight' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [activeIndex, setCurrentHighlight, sortedKeys]",{"range":"93","text":"94"},[2048,2061],"[activeIndex, setCurrentHighlight, sortedKeys]"]